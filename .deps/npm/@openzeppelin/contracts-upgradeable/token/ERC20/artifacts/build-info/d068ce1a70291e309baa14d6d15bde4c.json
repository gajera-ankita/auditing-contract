{
	"id": "d068ce1a70291e309baa14d6d15bde4c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.0",
	"solcLongVersion": "0.8.0+commit.c7dfd78e",
	"input": {
		"language": "Solidity",
		"sources": {
			".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n\n\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\n\n\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n */\nabstract contract Initializable {\n\n    /**\n     * @dev Indicates that the contract has been initialized.\n     */\n    bool private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Modifier to protect an initializer function from being invoked twice.\n     */\n    modifier initializer() {\n        require(_initializing || !_initialized, \"Initializable: contract is already initialized\");\n\n        bool isTopLevelCall = !_initializing;\n        if (isTopLevelCall) {\n            _initializing = true;\n            _initialized = true;\n        }\n\n        _;\n\n        if (isTopLevelCall) {\n            _initializing = false;\n        }\n    }\n}\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20Upgradeable {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal initializer {\n        __Context_init_unchained();\n    }\n\n    function __Context_init_unchained() internal initializer {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n    uint256[50] private __gap;\n}\n\n\n\n\ninterface IERC20MetadataUpgradeable is IERC20Upgradeable {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The defaut value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal initializer {\n        __Context_init_unchained();\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal initializer {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\n        require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\n        _approve(sender, _msgSender(), currentAllowance - amount);\n\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        _approve(_msgSender(), spender, currentAllowance - subtractedValue);\n\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        uint256 senderBalance = _balances[sender];\n        require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        _balances[sender] = senderBalance - amount;\n        _balances[recipient] += amount;\n\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        _balances[account] = accountBalance - amount;\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\n    uint256[45] private __gap;\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x4ea91f427348a5f09a245b2a2eab4ce88e5520420358b8c7c8f2767f327fbdd2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3be554a8674dfcdc191f5760ca4f399b5927a2c75ab9d1272f94b46d771e8211\",\"dweb:/ipfs/QmajGeU2rsudU9eg1fm847qaJR9kHb9kAd8fexvHDPj6o9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": ".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ContextUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 8,
								"contract": ".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ContextUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 162,
								"contract": ".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ContextUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7083:16676  contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7083:16676  contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8122:8220  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10219:10385  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9210:9316  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10852:11266  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9059:9150  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11661:11873  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9374:9499  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8333:8435  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12360:12731  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9702:9874  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9932:10081  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8122:8220  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8176:8189  string memory */\n      0x60\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8208:8213  _name */\n      0x36\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8201:8213  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8122:8220  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10219:10385  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10302:10306  bool */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10318:10357  _approve(_msgSender(), spender, amount) */\n      tag_71\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10327:10339  _msgSender() */\n      tag_72\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10327:10337  _msgSender */\n      tag_73\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10327:10339  _msgSender() */\n      jump\t// in\n    tag_72:\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10341:10348  spender */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10350:10356  amount */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10318:10326  _approve */\n      tag_74\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10318:10357  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_71:\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10374:10378  true */\n      0x01\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10367:10378  return true */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10219:10385  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9210:9316  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_26:\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9271:9278  uint256 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9297:9309  _totalSupply */\n      sload(0x35)\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9290:9309  return _totalSupply */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9210:9316  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10852:11266  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_32:\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10958:10962  bool */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10974:11010  _transfer(sender, recipient, amount) */\n      tag_77\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10984:10990  sender */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10992:11001  recipient */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11003:11009  amount */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10974:10983  _transfer */\n      tag_78\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10974:11010  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_77:\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11021:11045  uint256 currentAllowance */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11048:11059  _allowances */\n      0x34\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11048:11067  _allowances[sender] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11060:11066  sender */\n      dup7\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11048:11067  _allowances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11048:11081  _allowances[sender][_msgSender()] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11068:11080  _msgSender() */\n      tag_79\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11068:11078  _msgSender */\n      tag_73\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11068:11080  _msgSender() */\n      jump\t// in\n    tag_79:\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11048:11081  _allowances[sender][_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11021:11081  uint256 currentAllowance = _allowances[sender][_msgSender()] */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11119:11125  amount */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11099:11115  currentAllowance */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11099:11125  currentAllowance >= amount */\n      lt\n      iszero\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11091:11170  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11180:11237  _approve(sender, _msgSender(), currentAllowance - amount) */\n      tag_83\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11189:11195  sender */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11197:11209  _msgSender() */\n      tag_84\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11197:11207  _msgSender */\n      tag_73\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11197:11209  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11230:11236  amount */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11211:11227  currentAllowance */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11211:11236  currentAllowance - amount */\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11180:11188  _approve */\n      tag_74\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11180:11237  _approve(sender, _msgSender(), currentAllowance - amount) */\n      jump\t// in\n    tag_83:\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11255:11259  true */\n      0x01\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11248:11259  return true */\n      swap2\n      pop\n      pop\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10852:11266  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9059:9150  function decimals() public view virtual override returns (uint8) {... */\n    tag_35:\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9117:9122  uint8 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9141:9143  18 */\n      0x12\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9134:9143  return 18 */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9059:9150  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11661:11873  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11749:11753  bool */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11765:11845  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      tag_89\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11774:11786  _msgSender() */\n      tag_90\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11774:11784  _msgSender */\n      tag_73\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11774:11786  _msgSender() */\n      jump\t// in\n    tag_90:\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11788:11795  spender */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11834:11844  addedValue */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11797:11808  _allowances */\n      0x34\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11797:11822  _allowances[_msgSender()] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11809:11821  _msgSender() */\n      tag_91\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11809:11819  _msgSender */\n      tag_73\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11809:11821  _msgSender() */\n      jump\t// in\n    tag_91:\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11797:11822  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11797:11831  _allowances[_msgSender()][spender] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11823:11830  spender */\n      dup9\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11797:11831  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11797:11844  _allowances[_msgSender()][spender] + addedValue */\n      tag_92\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11765:11773  _approve */\n      tag_74\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11765:11845  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      jump\t// in\n    tag_89:\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11862:11866  true */\n      0x01\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11855:11866  return true */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11661:11873  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9374:9499  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_45:\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9448:9455  uint256 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9474:9483  _balances */\n      0x33\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9474:9492  _balances[account] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9484:9491  account */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9474:9492  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9467:9492  return _balances[account] */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9374:9499  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8333:8435  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8389:8402  string memory */\n      0x60\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8421:8428  _symbol */\n      0x37\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8414:8428  return _symbol */\n      dup1\n      sload\n      tag_96\n      swap1\n      tag_65\n      jump\t// in\n    tag_96:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_97\n      swap1\n      tag_65\n      jump\t// in\n    tag_97:\n      dup1\n      iszero\n      tag_98\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_99\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_98)\n    tag_99:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_100:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_100\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_98:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8333:8435  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12360:12731  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12453:12457  bool */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12469:12493  uint256 currentAllowance */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12496:12507  _allowances */\n      0x34\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12496:12521  _allowances[_msgSender()] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12508:12520  _msgSender() */\n      tag_102\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12508:12518  _msgSender */\n      tag_73\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12508:12520  _msgSender() */\n      jump\t// in\n    tag_102:\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12496:12521  _allowances[_msgSender()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12496:12530  _allowances[_msgSender()][spender] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12522:12529  spender */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12496:12530  _allowances[_msgSender()][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12469:12530  uint256 currentAllowance = _allowances[_msgSender()][spender] */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12568:12583  subtractedValue */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12548:12564  currentAllowance */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12548:12583  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12540:12625  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_103\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12635:12702  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      tag_106\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12644:12656  _msgSender() */\n      tag_107\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12644:12654  _msgSender */\n      tag_73\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12644:12656  _msgSender() */\n      jump\t// in\n    tag_107:\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12658:12665  spender */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12686:12701  subtractedValue */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12667:12683  currentAllowance */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12667:12701  currentAllowance - subtractedValue */\n      tag_108\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_108:\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12635:12643  _approve */\n      tag_74\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12635:12702  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_106:\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12720:12724  true */\n      0x01\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12713:12724  return true */\n      swap2\n      pop\n      pop\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12360:12731  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9702:9874  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9788:9792  bool */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9804:9846  _transfer(_msgSender(), recipient, amount) */\n      tag_110\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9814:9826  _msgSender() */\n      tag_111\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9814:9824  _msgSender */\n      tag_73\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9814:9826  _msgSender() */\n      jump\t// in\n    tag_111:\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9828:9837  recipient */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9839:9845  amount */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9804:9813  _transfer */\n      tag_78\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9804:9846  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n    tag_110:\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9863:9867  true */\n      0x01\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9856:9867  return true */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9702:9874  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9932:10081  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10021:10028  uint256 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10047:10058  _allowances */\n      0x34\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10047:10065  _allowances[owner] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10059:10064  owner */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10047:10065  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10047:10074  _allowances[owner][spender] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10066:10073  spender */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10047:10074  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10040:10074  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9932:10081  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5120:5216  function _msgSender() internal view virtual returns (address) {... */\n    tag_73:\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5173:5180  address */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5199:5209  msg.sender */\n      caller\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5192:5209  return msg.sender */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5120:5216  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":15624:15964  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_74:\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":15742:15743  0 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":15725:15744  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":15725:15730  owner */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":15725:15744  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":15717:15785  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_115:\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":15822:15823  0 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":15803:15824  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":15803:15810  spender */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":15803:15824  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":15795:15863  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_118:\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":15904:15910  amount */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":15874:15885  _allowances */\n      0x34\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":15874:15892  _allowances[owner] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":15886:15891  owner */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":15874:15892  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":15874:15901  _allowances[owner][spender] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":15893:15900  spender */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":15874:15901  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":15874:15910  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":15941:15948  spender */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":15925:15957  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":15934:15939  owner */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":15925:15957  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":15950:15956  amount */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":15925:15957  Approval(owner, spender, amount) */\n      mload(0x40)\n      tag_121\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":15624:15964  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":13205:13797  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n    tag_78:\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":13328:13329  0 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":13310:13330  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":13310:13316  sender */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":13310:13330  sender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":13302:13372  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_123:\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":13411:13412  0 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":13390:13413  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":13390:13399  recipient */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":13390:13413  recipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":13382:13453  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_126:\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":13464:13511  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_129\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":13485:13491  sender */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":13493:13502  recipient */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":13504:13510  amount */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":13464:13484  _beforeTokenTransfer */\n      tag_130\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":13464:13511  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_129:\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":13522:13543  uint256 senderBalance */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":13546:13555  _balances */\n      0x33\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":13546:13563  _balances[sender] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":13556:13562  sender */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":13546:13563  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":13522:13563  uint256 senderBalance = _balances[sender] */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":13598:13604  amount */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":13581:13594  senderBalance */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":13581:13604  senderBalance >= amount */\n      lt\n      iszero\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":13573:13647  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_131:\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":13693:13699  amount */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":13677:13690  senderBalance */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":13677:13699  senderBalance - amount */\n      tag_134\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_134:\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":13657:13666  _balances */\n      0x33\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":13657:13674  _balances[sender] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":13667:13673  sender */\n      dup7\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":13657:13674  _balances[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":13657:13699  _balances[sender] = senderBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":13733:13739  amount */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":13709:13718  _balances */\n      0x33\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":13709:13729  _balances[recipient] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":13719:13728  recipient */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":13709:13729  _balances[recipient] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":13709:13739  _balances[recipient] += amount */\n      dup3\n      dup3\n      sload\n      tag_135\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_135:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":13772:13781  recipient */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":13755:13790  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":13764:13770  sender */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":13755:13790  Transfer(sender, recipient, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":13783:13789  amount */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":13755:13790  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_136\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":13205:13797  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":16551:16643  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { } */\n    tag_130:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_139:\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_141\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_142\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":59:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_143:\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_145\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_146\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":204:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:559   */\n    tag_44:\n      0x00\n        /* \"#utility.yul\":405:407   */\n      0x20\n        /* \"#utility.yul\":393:402   */\n      dup3\n        /* \"#utility.yul\":384:391   */\n      dup5\n        /* \"#utility.yul\":380:403   */\n      sub\n        /* \"#utility.yul\":376:408   */\n      slt\n        /* \"#utility.yul\":373:375   */\n      iszero\n      tag_148\n      jumpi\n        /* \"#utility.yul\":421:422   */\n      0x00\n        /* \"#utility.yul\":418:419   */\n      dup1\n        /* \"#utility.yul\":411:423   */\n      revert\n        /* \"#utility.yul\":373:375   */\n    tag_148:\n        /* \"#utility.yul\":464:465   */\n      0x00\n        /* \"#utility.yul\":489:542   */\n      tag_149\n        /* \"#utility.yul\":534:541   */\n      dup5\n        /* \"#utility.yul\":525:531   */\n      dup3\n        /* \"#utility.yul\":514:523   */\n      dup6\n        /* \"#utility.yul\":510:532   */\n      add\n        /* \"#utility.yul\":489:542   */\n      tag_139\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":479:542   */\n      swap2\n      pop\n        /* \"#utility.yul\":435:552   */\n      pop\n        /* \"#utility.yul\":363:559   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":565:972   */\n    tag_60:\n      0x00\n      dup1\n        /* \"#utility.yul\":690:692   */\n      0x40\n        /* \"#utility.yul\":678:687   */\n      dup4\n        /* \"#utility.yul\":669:676   */\n      dup6\n        /* \"#utility.yul\":665:688   */\n      sub\n        /* \"#utility.yul\":661:693   */\n      slt\n        /* \"#utility.yul\":658:660   */\n      iszero\n      tag_151\n      jumpi\n        /* \"#utility.yul\":706:707   */\n      0x00\n        /* \"#utility.yul\":703:704   */\n      dup1\n        /* \"#utility.yul\":696:708   */\n      revert\n        /* \"#utility.yul\":658:660   */\n    tag_151:\n        /* \"#utility.yul\":749:750   */\n      0x00\n        /* \"#utility.yul\":774:827   */\n      tag_152\n        /* \"#utility.yul\":819:826   */\n      dup6\n        /* \"#utility.yul\":810:816   */\n      dup3\n        /* \"#utility.yul\":799:808   */\n      dup7\n        /* \"#utility.yul\":795:817   */\n      add\n        /* \"#utility.yul\":774:827   */\n      tag_139\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":764:827   */\n      swap3\n      pop\n        /* \"#utility.yul\":720:837   */\n      pop\n        /* \"#utility.yul\":876:878   */\n      0x20\n        /* \"#utility.yul\":902:955   */\n      tag_153\n        /* \"#utility.yul\":947:954   */\n      dup6\n        /* \"#utility.yul\":938:944   */\n      dup3\n        /* \"#utility.yul\":927:936   */\n      dup7\n        /* \"#utility.yul\":923:945   */\n      add\n        /* \"#utility.yul\":902:955   */\n      tag_139\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":892:955   */\n      swap2\n      pop\n        /* \"#utility.yul\":847:965   */\n      pop\n        /* \"#utility.yul\":648:972   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":978:1530   */\n    tag_31:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":1120:1122   */\n      0x60\n        /* \"#utility.yul\":1108:1117   */\n      dup5\n        /* \"#utility.yul\":1099:1106   */\n      dup7\n        /* \"#utility.yul\":1095:1118   */\n      sub\n        /* \"#utility.yul\":1091:1123   */\n      slt\n        /* \"#utility.yul\":1088:1090   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":1136:1137   */\n      0x00\n        /* \"#utility.yul\":1133:1134   */\n      dup1\n        /* \"#utility.yul\":1126:1138   */\n      revert\n        /* \"#utility.yul\":1088:1090   */\n    tag_155:\n        /* \"#utility.yul\":1179:1180   */\n      0x00\n        /* \"#utility.yul\":1204:1257   */\n      tag_156\n        /* \"#utility.yul\":1249:1256   */\n      dup7\n        /* \"#utility.yul\":1240:1246   */\n      dup3\n        /* \"#utility.yul\":1229:1238   */\n      dup8\n        /* \"#utility.yul\":1225:1247   */\n      add\n        /* \"#utility.yul\":1204:1257   */\n      tag_139\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":1194:1257   */\n      swap4\n      pop\n        /* \"#utility.yul\":1150:1267   */\n      pop\n        /* \"#utility.yul\":1306:1308   */\n      0x20\n        /* \"#utility.yul\":1332:1385   */\n      tag_157\n        /* \"#utility.yul\":1377:1384   */\n      dup7\n        /* \"#utility.yul\":1368:1374   */\n      dup3\n        /* \"#utility.yul\":1357:1366   */\n      dup8\n        /* \"#utility.yul\":1353:1375   */\n      add\n        /* \"#utility.yul\":1332:1385   */\n      tag_139\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":1322:1385   */\n      swap3\n      pop\n        /* \"#utility.yul\":1277:1395   */\n      pop\n        /* \"#utility.yul\":1434:1436   */\n      0x40\n        /* \"#utility.yul\":1460:1513   */\n      tag_158\n        /* \"#utility.yul\":1505:1512   */\n      dup7\n        /* \"#utility.yul\":1496:1502   */\n      dup3\n        /* \"#utility.yul\":1485:1494   */\n      dup8\n        /* \"#utility.yul\":1481:1503   */\n      add\n        /* \"#utility.yul\":1460:1513   */\n      tag_143\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":1450:1513   */\n      swap2\n      pop\n        /* \"#utility.yul\":1405:1523   */\n      pop\n        /* \"#utility.yul\":1078:1530   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1536:1943   */\n    tag_21:\n      0x00\n      dup1\n        /* \"#utility.yul\":1661:1663   */\n      0x40\n        /* \"#utility.yul\":1649:1658   */\n      dup4\n        /* \"#utility.yul\":1640:1647   */\n      dup6\n        /* \"#utility.yul\":1636:1659   */\n      sub\n        /* \"#utility.yul\":1632:1664   */\n      slt\n        /* \"#utility.yul\":1629:1631   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":1677:1678   */\n      0x00\n        /* \"#utility.yul\":1674:1675   */\n      dup1\n        /* \"#utility.yul\":1667:1679   */\n      revert\n        /* \"#utility.yul\":1629:1631   */\n    tag_160:\n        /* \"#utility.yul\":1720:1721   */\n      0x00\n        /* \"#utility.yul\":1745:1798   */\n      tag_161\n        /* \"#utility.yul\":1790:1797   */\n      dup6\n        /* \"#utility.yul\":1781:1787   */\n      dup3\n        /* \"#utility.yul\":1770:1779   */\n      dup7\n        /* \"#utility.yul\":1766:1788   */\n      add\n        /* \"#utility.yul\":1745:1798   */\n      tag_139\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":1735:1798   */\n      swap3\n      pop\n        /* \"#utility.yul\":1691:1808   */\n      pop\n        /* \"#utility.yul\":1847:1849   */\n      0x20\n        /* \"#utility.yul\":1873:1926   */\n      tag_162\n        /* \"#utility.yul\":1918:1925   */\n      dup6\n        /* \"#utility.yul\":1909:1915   */\n      dup3\n        /* \"#utility.yul\":1898:1907   */\n      dup7\n        /* \"#utility.yul\":1894:1916   */\n      add\n        /* \"#utility.yul\":1873:1926   */\n      tag_143\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":1863:1926   */\n      swap2\n      pop\n        /* \"#utility.yul\":1818:1936   */\n      pop\n        /* \"#utility.yul\":1619:1943   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1949:2058   */\n    tag_163:\n        /* \"#utility.yul\":2030:2051   */\n      tag_165\n        /* \"#utility.yul\":2045:2050   */\n      dup2\n        /* \"#utility.yul\":2030:2051   */\n      tag_166\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":2025:2028   */\n      dup3\n        /* \"#utility.yul\":2018:2052   */\n      mstore\n        /* \"#utility.yul\":2008:2058   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2064:2428   */\n    tag_167:\n      0x00\n        /* \"#utility.yul\":2180:2219   */\n      tag_169\n        /* \"#utility.yul\":2213:2218   */\n      dup3\n        /* \"#utility.yul\":2180:2219   */\n      tag_170\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":2235:2306   */\n      tag_171\n        /* \"#utility.yul\":2299:2305   */\n      dup2\n        /* \"#utility.yul\":2294:2297   */\n      dup6\n        /* \"#utility.yul\":2235:2306   */\n      tag_172\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":2228:2306   */\n      swap4\n      pop\n        /* \"#utility.yul\":2315:2367   */\n      tag_173\n        /* \"#utility.yul\":2360:2366   */\n      dup2\n        /* \"#utility.yul\":2355:2358   */\n      dup6\n        /* \"#utility.yul\":2348:2352   */\n      0x20\n        /* \"#utility.yul\":2341:2346   */\n      dup7\n        /* \"#utility.yul\":2337:2353   */\n      add\n        /* \"#utility.yul\":2315:2367   */\n      tag_174\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":2392:2421   */\n      tag_175\n        /* \"#utility.yul\":2414:2420   */\n      dup2\n        /* \"#utility.yul\":2392:2421   */\n      tag_176\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":2387:2390   */\n      dup5\n        /* \"#utility.yul\":2383:2422   */\n      add\n        /* \"#utility.yul\":2376:2422   */\n      swap2\n      pop\n        /* \"#utility.yul\":2156:2428   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2434:2801   */\n    tag_177:\n      0x00\n        /* \"#utility.yul\":2597:2664   */\n      tag_179\n        /* \"#utility.yul\":2661:2663   */\n      0x23\n        /* \"#utility.yul\":2656:2659   */\n      dup4\n        /* \"#utility.yul\":2597:2664   */\n      tag_172\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":2590:2664   */\n      swap2\n      pop\n        /* \"#utility.yul\":2694:2728   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":2690:2691   */\n      0x00\n        /* \"#utility.yul\":2685:2688   */\n      dup4\n        /* \"#utility.yul\":2681:2692   */\n      add\n        /* \"#utility.yul\":2674:2729   */\n      mstore\n        /* \"#utility.yul\":2760:2765   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2755:2757   */\n      0x20\n        /* \"#utility.yul\":2750:2753   */\n      dup4\n        /* \"#utility.yul\":2746:2758   */\n      add\n        /* \"#utility.yul\":2739:2766   */\n      mstore\n        /* \"#utility.yul\":2792:2794   */\n      0x40\n        /* \"#utility.yul\":2787:2790   */\n      dup3\n        /* \"#utility.yul\":2783:2795   */\n      add\n        /* \"#utility.yul\":2776:2795   */\n      swap1\n      pop\n        /* \"#utility.yul\":2580:2801   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2807:3173   */\n    tag_180:\n      0x00\n        /* \"#utility.yul\":2970:3037   */\n      tag_182\n        /* \"#utility.yul\":3034:3036   */\n      0x22\n        /* \"#utility.yul\":3029:3032   */\n      dup4\n        /* \"#utility.yul\":2970:3037   */\n      tag_172\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":2963:3037   */\n      swap2\n      pop\n        /* \"#utility.yul\":3067:3101   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":3063:3064   */\n      0x00\n        /* \"#utility.yul\":3058:3061   */\n      dup4\n        /* \"#utility.yul\":3054:3065   */\n      add\n        /* \"#utility.yul\":3047:3102   */\n      mstore\n        /* \"#utility.yul\":3133:3137   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3128:3130   */\n      0x20\n        /* \"#utility.yul\":3123:3126   */\n      dup4\n        /* \"#utility.yul\":3119:3131   */\n      add\n        /* \"#utility.yul\":3112:3138   */\n      mstore\n        /* \"#utility.yul\":3164:3166   */\n      0x40\n        /* \"#utility.yul\":3159:3162   */\n      dup3\n        /* \"#utility.yul\":3155:3167   */\n      add\n        /* \"#utility.yul\":3148:3167   */\n      swap1\n      pop\n        /* \"#utility.yul\":2953:3173   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3179:3549   */\n    tag_183:\n      0x00\n        /* \"#utility.yul\":3342:3409   */\n      tag_185\n        /* \"#utility.yul\":3406:3408   */\n      0x26\n        /* \"#utility.yul\":3401:3404   */\n      dup4\n        /* \"#utility.yul\":3342:3409   */\n      tag_172\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":3335:3409   */\n      swap2\n      pop\n        /* \"#utility.yul\":3439:3473   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":3435:3436   */\n      0x00\n        /* \"#utility.yul\":3430:3433   */\n      dup4\n        /* \"#utility.yul\":3426:3437   */\n      add\n        /* \"#utility.yul\":3419:3474   */\n      mstore\n        /* \"#utility.yul\":3505:3513   */\n      0x616c616e63650000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3500:3502   */\n      0x20\n        /* \"#utility.yul\":3495:3498   */\n      dup4\n        /* \"#utility.yul\":3491:3503   */\n      add\n        /* \"#utility.yul\":3484:3514   */\n      mstore\n        /* \"#utility.yul\":3540:3542   */\n      0x40\n        /* \"#utility.yul\":3535:3538   */\n      dup3\n        /* \"#utility.yul\":3531:3543   */\n      add\n        /* \"#utility.yul\":3524:3543   */\n      swap1\n      pop\n        /* \"#utility.yul\":3325:3549   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3555:3927   */\n    tag_186:\n      0x00\n        /* \"#utility.yul\":3718:3785   */\n      tag_188\n        /* \"#utility.yul\":3782:3784   */\n      0x28\n        /* \"#utility.yul\":3777:3780   */\n      dup4\n        /* \"#utility.yul\":3718:3785   */\n      tag_172\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":3711:3785   */\n      swap2\n      pop\n        /* \"#utility.yul\":3815:3849   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732061\n        /* \"#utility.yul\":3811:3812   */\n      0x00\n        /* \"#utility.yul\":3806:3809   */\n      dup4\n        /* \"#utility.yul\":3802:3813   */\n      add\n        /* \"#utility.yul\":3795:3850   */\n      mstore\n        /* \"#utility.yul\":3881:3891   */\n      0x6c6c6f77616e6365000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3876:3878   */\n      0x20\n        /* \"#utility.yul\":3871:3874   */\n      dup4\n        /* \"#utility.yul\":3867:3879   */\n      add\n        /* \"#utility.yul\":3860:3892   */\n      mstore\n        /* \"#utility.yul\":3918:3920   */\n      0x40\n        /* \"#utility.yul\":3913:3916   */\n      dup3\n        /* \"#utility.yul\":3909:3921   */\n      add\n        /* \"#utility.yul\":3902:3921   */\n      swap1\n      pop\n        /* \"#utility.yul\":3701:3927   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3933:4302   */\n    tag_189:\n      0x00\n        /* \"#utility.yul\":4096:4163   */\n      tag_191\n        /* \"#utility.yul\":4160:4162   */\n      0x25\n        /* \"#utility.yul\":4155:4158   */\n      dup4\n        /* \"#utility.yul\":4096:4163   */\n      tag_172\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":4089:4163   */\n      swap2\n      pop\n        /* \"#utility.yul\":4193:4227   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4189:4190   */\n      0x00\n        /* \"#utility.yul\":4184:4187   */\n      dup4\n        /* \"#utility.yul\":4180:4191   */\n      add\n        /* \"#utility.yul\":4173:4228   */\n      mstore\n        /* \"#utility.yul\":4259:4266   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4254:4256   */\n      0x20\n        /* \"#utility.yul\":4249:4252   */\n      dup4\n        /* \"#utility.yul\":4245:4257   */\n      add\n        /* \"#utility.yul\":4238:4267   */\n      mstore\n        /* \"#utility.yul\":4293:4295   */\n      0x40\n        /* \"#utility.yul\":4288:4291   */\n      dup3\n        /* \"#utility.yul\":4284:4296   */\n      add\n        /* \"#utility.yul\":4277:4296   */\n      swap1\n      pop\n        /* \"#utility.yul\":4079:4302   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4308:4676   */\n    tag_192:\n      0x00\n        /* \"#utility.yul\":4471:4538   */\n      tag_194\n        /* \"#utility.yul\":4535:4537   */\n      0x24\n        /* \"#utility.yul\":4530:4533   */\n      dup4\n        /* \"#utility.yul\":4471:4538   */\n      tag_172\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":4464:4538   */\n      swap2\n      pop\n        /* \"#utility.yul\":4568:4602   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4564:4565   */\n      0x00\n        /* \"#utility.yul\":4559:4562   */\n      dup4\n        /* \"#utility.yul\":4555:4566   */\n      add\n        /* \"#utility.yul\":4548:4603   */\n      mstore\n        /* \"#utility.yul\":4634:4640   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4629:4631   */\n      0x20\n        /* \"#utility.yul\":4624:4627   */\n      dup4\n        /* \"#utility.yul\":4620:4632   */\n      add\n        /* \"#utility.yul\":4613:4641   */\n      mstore\n        /* \"#utility.yul\":4667:4669   */\n      0x40\n        /* \"#utility.yul\":4662:4665   */\n      dup3\n        /* \"#utility.yul\":4658:4670   */\n      add\n        /* \"#utility.yul\":4651:4670   */\n      swap1\n      pop\n        /* \"#utility.yul\":4454:4676   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4682:5051   */\n    tag_195:\n      0x00\n        /* \"#utility.yul\":4845:4912   */\n      tag_197\n        /* \"#utility.yul\":4909:4911   */\n      0x25\n        /* \"#utility.yul\":4904:4907   */\n      dup4\n        /* \"#utility.yul\":4845:4912   */\n      tag_172\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":4838:4912   */\n      swap2\n      pop\n        /* \"#utility.yul\":4942:4976   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":4938:4939   */\n      0x00\n        /* \"#utility.yul\":4933:4936   */\n      dup4\n        /* \"#utility.yul\":4929:4940   */\n      add\n        /* \"#utility.yul\":4922:4977   */\n      mstore\n        /* \"#utility.yul\":5008:5015   */\n      0x207a65726f000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5003:5005   */\n      0x20\n        /* \"#utility.yul\":4998:5001   */\n      dup4\n        /* \"#utility.yul\":4994:5006   */\n      add\n        /* \"#utility.yul\":4987:5016   */\n      mstore\n        /* \"#utility.yul\":5042:5044   */\n      0x40\n        /* \"#utility.yul\":5037:5040   */\n      dup3\n        /* \"#utility.yul\":5033:5045   */\n      add\n        /* \"#utility.yul\":5026:5045   */\n      swap1\n      pop\n        /* \"#utility.yul\":4828:5051   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5057:5175   */\n    tag_198:\n        /* \"#utility.yul\":5144:5168   */\n      tag_200\n        /* \"#utility.yul\":5162:5167   */\n      dup2\n        /* \"#utility.yul\":5144:5168   */\n      tag_201\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":5139:5142   */\n      dup3\n        /* \"#utility.yul\":5132:5169   */\n      mstore\n        /* \"#utility.yul\":5122:5175   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5181:5293   */\n    tag_202:\n        /* \"#utility.yul\":5264:5286   */\n      tag_204\n        /* \"#utility.yul\":5280:5285   */\n      dup2\n        /* \"#utility.yul\":5264:5286   */\n      tag_205\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":5259:5262   */\n      dup3\n        /* \"#utility.yul\":5252:5287   */\n      mstore\n        /* \"#utility.yul\":5242:5293   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5299:5509   */\n    tag_24:\n      0x00\n        /* \"#utility.yul\":5424:5426   */\n      0x20\n        /* \"#utility.yul\":5413:5422   */\n      dup3\n        /* \"#utility.yul\":5409:5427   */\n      add\n        /* \"#utility.yul\":5401:5427   */\n      swap1\n      pop\n        /* \"#utility.yul\":5437:5502   */\n      tag_207\n        /* \"#utility.yul\":5499:5500   */\n      0x00\n        /* \"#utility.yul\":5488:5497   */\n      dup4\n        /* \"#utility.yul\":5484:5501   */\n      add\n        /* \"#utility.yul\":5475:5481   */\n      dup5\n        /* \"#utility.yul\":5437:5502   */\n      tag_163\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":5391:5509   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5515:5828   */\n    tag_18:\n      0x00\n        /* \"#utility.yul\":5666:5668   */\n      0x20\n        /* \"#utility.yul\":5655:5664   */\n      dup3\n        /* \"#utility.yul\":5651:5669   */\n      add\n        /* \"#utility.yul\":5643:5669   */\n      swap1\n      pop\n        /* \"#utility.yul\":5715:5724   */\n      dup2\n        /* \"#utility.yul\":5709:5713   */\n      dup2\n        /* \"#utility.yul\":5705:5725   */\n      sub\n        /* \"#utility.yul\":5701:5702   */\n      0x00\n        /* \"#utility.yul\":5690:5699   */\n      dup4\n        /* \"#utility.yul\":5686:5703   */\n      add\n        /* \"#utility.yul\":5679:5726   */\n      mstore\n        /* \"#utility.yul\":5743:5821   */\n      tag_209\n        /* \"#utility.yul\":5816:5820   */\n      dup2\n        /* \"#utility.yul\":5807:5813   */\n      dup5\n        /* \"#utility.yul\":5743:5821   */\n      tag_167\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":5735:5821   */\n      swap1\n      pop\n        /* \"#utility.yul\":5633:5828   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5834:6253   */\n    tag_128:\n      0x00\n        /* \"#utility.yul\":6038:6040   */\n      0x20\n        /* \"#utility.yul\":6027:6036   */\n      dup3\n        /* \"#utility.yul\":6023:6041   */\n      add\n        /* \"#utility.yul\":6015:6041   */\n      swap1\n      pop\n        /* \"#utility.yul\":6087:6096   */\n      dup2\n        /* \"#utility.yul\":6081:6085   */\n      dup2\n        /* \"#utility.yul\":6077:6097   */\n      sub\n        /* \"#utility.yul\":6073:6074   */\n      0x00\n        /* \"#utility.yul\":6062:6071   */\n      dup4\n        /* \"#utility.yul\":6058:6075   */\n      add\n        /* \"#utility.yul\":6051:6098   */\n      mstore\n        /* \"#utility.yul\":6115:6246   */\n      tag_211\n        /* \"#utility.yul\":6241:6245   */\n      dup2\n        /* \"#utility.yul\":6115:6246   */\n      tag_177\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":6107:6246   */\n      swap1\n      pop\n        /* \"#utility.yul\":6005:6253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6259:6678   */\n    tag_120:\n      0x00\n        /* \"#utility.yul\":6463:6465   */\n      0x20\n        /* \"#utility.yul\":6452:6461   */\n      dup3\n        /* \"#utility.yul\":6448:6466   */\n      add\n        /* \"#utility.yul\":6440:6466   */\n      swap1\n      pop\n        /* \"#utility.yul\":6512:6521   */\n      dup2\n        /* \"#utility.yul\":6506:6510   */\n      dup2\n        /* \"#utility.yul\":6502:6522   */\n      sub\n        /* \"#utility.yul\":6498:6499   */\n      0x00\n        /* \"#utility.yul\":6487:6496   */\n      dup4\n        /* \"#utility.yul\":6483:6500   */\n      add\n        /* \"#utility.yul\":6476:6523   */\n      mstore\n        /* \"#utility.yul\":6540:6671   */\n      tag_213\n        /* \"#utility.yul\":6666:6670   */\n      dup2\n        /* \"#utility.yul\":6540:6671   */\n      tag_180\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":6532:6671   */\n      swap1\n      pop\n        /* \"#utility.yul\":6430:6678   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6684:7103   */\n    tag_133:\n      0x00\n        /* \"#utility.yul\":6888:6890   */\n      0x20\n        /* \"#utility.yul\":6877:6886   */\n      dup3\n        /* \"#utility.yul\":6873:6891   */\n      add\n        /* \"#utility.yul\":6865:6891   */\n      swap1\n      pop\n        /* \"#utility.yul\":6937:6946   */\n      dup2\n        /* \"#utility.yul\":6931:6935   */\n      dup2\n        /* \"#utility.yul\":6927:6947   */\n      sub\n        /* \"#utility.yul\":6923:6924   */\n      0x00\n        /* \"#utility.yul\":6912:6921   */\n      dup4\n        /* \"#utility.yul\":6908:6925   */\n      add\n        /* \"#utility.yul\":6901:6948   */\n      mstore\n        /* \"#utility.yul\":6965:7096   */\n      tag_215\n        /* \"#utility.yul\":7091:7095   */\n      dup2\n        /* \"#utility.yul\":6965:7096   */\n      tag_183\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":6957:7096   */\n      swap1\n      pop\n        /* \"#utility.yul\":6855:7103   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7109:7528   */\n    tag_82:\n      0x00\n        /* \"#utility.yul\":7313:7315   */\n      0x20\n        /* \"#utility.yul\":7302:7311   */\n      dup3\n        /* \"#utility.yul\":7298:7316   */\n      add\n        /* \"#utility.yul\":7290:7316   */\n      swap1\n      pop\n        /* \"#utility.yul\":7362:7371   */\n      dup2\n        /* \"#utility.yul\":7356:7360   */\n      dup2\n        /* \"#utility.yul\":7352:7372   */\n      sub\n        /* \"#utility.yul\":7348:7349   */\n      0x00\n        /* \"#utility.yul\":7337:7346   */\n      dup4\n        /* \"#utility.yul\":7333:7350   */\n      add\n        /* \"#utility.yul\":7326:7373   */\n      mstore\n        /* \"#utility.yul\":7390:7521   */\n      tag_217\n        /* \"#utility.yul\":7516:7520   */\n      dup2\n        /* \"#utility.yul\":7390:7521   */\n      tag_186\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":7382:7521   */\n      swap1\n      pop\n        /* \"#utility.yul\":7280:7528   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7534:7953   */\n    tag_125:\n      0x00\n        /* \"#utility.yul\":7738:7740   */\n      0x20\n        /* \"#utility.yul\":7727:7736   */\n      dup3\n        /* \"#utility.yul\":7723:7741   */\n      add\n        /* \"#utility.yul\":7715:7741   */\n      swap1\n      pop\n        /* \"#utility.yul\":7787:7796   */\n      dup2\n        /* \"#utility.yul\":7781:7785   */\n      dup2\n        /* \"#utility.yul\":7777:7797   */\n      sub\n        /* \"#utility.yul\":7773:7774   */\n      0x00\n        /* \"#utility.yul\":7762:7771   */\n      dup4\n        /* \"#utility.yul\":7758:7775   */\n      add\n        /* \"#utility.yul\":7751:7798   */\n      mstore\n        /* \"#utility.yul\":7815:7946   */\n      tag_219\n        /* \"#utility.yul\":7941:7945   */\n      dup2\n        /* \"#utility.yul\":7815:7946   */\n      tag_189\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":7807:7946   */\n      swap1\n      pop\n        /* \"#utility.yul\":7705:7953   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7959:8378   */\n    tag_117:\n      0x00\n        /* \"#utility.yul\":8163:8165   */\n      0x20\n        /* \"#utility.yul\":8152:8161   */\n      dup3\n        /* \"#utility.yul\":8148:8166   */\n      add\n        /* \"#utility.yul\":8140:8166   */\n      swap1\n      pop\n        /* \"#utility.yul\":8212:8221   */\n      dup2\n        /* \"#utility.yul\":8206:8210   */\n      dup2\n        /* \"#utility.yul\":8202:8222   */\n      sub\n        /* \"#utility.yul\":8198:8199   */\n      0x00\n        /* \"#utility.yul\":8187:8196   */\n      dup4\n        /* \"#utility.yul\":8183:8200   */\n      add\n        /* \"#utility.yul\":8176:8223   */\n      mstore\n        /* \"#utility.yul\":8240:8371   */\n      tag_221\n        /* \"#utility.yul\":8366:8370   */\n      dup2\n        /* \"#utility.yul\":8240:8371   */\n      tag_192\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":8232:8371   */\n      swap1\n      pop\n        /* \"#utility.yul\":8130:8378   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8384:8803   */\n    tag_105:\n      0x00\n        /* \"#utility.yul\":8588:8590   */\n      0x20\n        /* \"#utility.yul\":8577:8586   */\n      dup3\n        /* \"#utility.yul\":8573:8591   */\n      add\n        /* \"#utility.yul\":8565:8591   */\n      swap1\n      pop\n        /* \"#utility.yul\":8637:8646   */\n      dup2\n        /* \"#utility.yul\":8631:8635   */\n      dup2\n        /* \"#utility.yul\":8627:8647   */\n      sub\n        /* \"#utility.yul\":8623:8624   */\n      0x00\n        /* \"#utility.yul\":8612:8621   */\n      dup4\n        /* \"#utility.yul\":8608:8625   */\n      add\n        /* \"#utility.yul\":8601:8648   */\n      mstore\n        /* \"#utility.yul\":8665:8796   */\n      tag_223\n        /* \"#utility.yul\":8791:8795   */\n      dup2\n        /* \"#utility.yul\":8665:8796   */\n      tag_195\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":8657:8796   */\n      swap1\n      pop\n        /* \"#utility.yul\":8555:8803   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8809:9031   */\n    tag_28:\n      0x00\n        /* \"#utility.yul\":8940:8942   */\n      0x20\n        /* \"#utility.yul\":8929:8938   */\n      dup3\n        /* \"#utility.yul\":8925:8943   */\n      add\n        /* \"#utility.yul\":8917:8943   */\n      swap1\n      pop\n        /* \"#utility.yul\":8953:9024   */\n      tag_225\n        /* \"#utility.yul\":9021:9022   */\n      0x00\n        /* \"#utility.yul\":9010:9019   */\n      dup4\n        /* \"#utility.yul\":9006:9023   */\n      add\n        /* \"#utility.yul\":8997:9003   */\n      dup5\n        /* \"#utility.yul\":8953:9024   */\n      tag_198\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":8907:9031   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9037:9251   */\n    tag_37:\n      0x00\n        /* \"#utility.yul\":9164:9166   */\n      0x20\n        /* \"#utility.yul\":9153:9162   */\n      dup3\n        /* \"#utility.yul\":9149:9167   */\n      add\n        /* \"#utility.yul\":9141:9167   */\n      swap1\n      pop\n        /* \"#utility.yul\":9177:9244   */\n      tag_227\n        /* \"#utility.yul\":9241:9242   */\n      0x00\n        /* \"#utility.yul\":9230:9239   */\n      dup4\n        /* \"#utility.yul\":9226:9243   */\n      add\n        /* \"#utility.yul\":9217:9223   */\n      dup5\n        /* \"#utility.yul\":9177:9244   */\n      tag_202\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":9131:9251   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9257:9356   */\n    tag_170:\n      0x00\n        /* \"#utility.yul\":9343:9348   */\n      dup2\n        /* \"#utility.yul\":9337:9349   */\n      mload\n        /* \"#utility.yul\":9327:9349   */\n      swap1\n      pop\n        /* \"#utility.yul\":9316:9356   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9362:9531   */\n    tag_172:\n      0x00\n        /* \"#utility.yul\":9480:9486   */\n      dup3\n        /* \"#utility.yul\":9475:9478   */\n      dup3\n        /* \"#utility.yul\":9468:9487   */\n      mstore\n        /* \"#utility.yul\":9520:9524   */\n      0x20\n        /* \"#utility.yul\":9515:9518   */\n      dup3\n        /* \"#utility.yul\":9511:9525   */\n      add\n        /* \"#utility.yul\":9496:9525   */\n      swap1\n      pop\n        /* \"#utility.yul\":9458:9531   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9537:9842   */\n    tag_93:\n      0x00\n        /* \"#utility.yul\":9596:9616   */\n      tag_231\n        /* \"#utility.yul\":9614:9615   */\n      dup3\n        /* \"#utility.yul\":9596:9616   */\n      tag_201\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":9591:9616   */\n      swap2\n      pop\n        /* \"#utility.yul\":9630:9650   */\n      tag_232\n        /* \"#utility.yul\":9648:9649   */\n      dup4\n        /* \"#utility.yul\":9630:9650   */\n      tag_201\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":9625:9650   */\n      swap3\n      pop\n        /* \"#utility.yul\":9784:9785   */\n      dup3\n        /* \"#utility.yul\":9716:9782   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9712:9786   */\n      sub\n        /* \"#utility.yul\":9709:9710   */\n      dup3\n        /* \"#utility.yul\":9706:9787   */\n      gt\n        /* \"#utility.yul\":9703:9705   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":9790:9808   */\n      tag_234\n      tag_235\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":9703:9705   */\n    tag_233:\n        /* \"#utility.yul\":9834:9835   */\n      dup3\n        /* \"#utility.yul\":9831:9832   */\n      dup3\n        /* \"#utility.yul\":9827:9836   */\n      add\n        /* \"#utility.yul\":9820:9836   */\n      swap1\n      pop\n        /* \"#utility.yul\":9581:9842   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9848:10039   */\n    tag_86:\n      0x00\n        /* \"#utility.yul\":9908:9928   */\n      tag_237\n        /* \"#utility.yul\":9926:9927   */\n      dup3\n        /* \"#utility.yul\":9908:9928   */\n      tag_201\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":9903:9928   */\n      swap2\n      pop\n        /* \"#utility.yul\":9942:9962   */\n      tag_238\n        /* \"#utility.yul\":9960:9961   */\n      dup4\n        /* \"#utility.yul\":9942:9962   */\n      tag_201\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":9937:9962   */\n      swap3\n      pop\n        /* \"#utility.yul\":9981:9982   */\n      dup3\n        /* \"#utility.yul\":9978:9979   */\n      dup3\n        /* \"#utility.yul\":9975:9983   */\n      lt\n        /* \"#utility.yul\":9972:9974   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":9986:10004   */\n      tag_240\n      tag_235\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":9972:9974   */\n    tag_239:\n        /* \"#utility.yul\":10031:10032   */\n      dup3\n        /* \"#utility.yul\":10028:10029   */\n      dup3\n        /* \"#utility.yul\":10024:10033   */\n      sub\n        /* \"#utility.yul\":10016:10033   */\n      swap1\n      pop\n        /* \"#utility.yul\":9893:10039   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10045:10141   */\n    tag_241:\n      0x00\n        /* \"#utility.yul\":10111:10135   */\n      tag_243\n        /* \"#utility.yul\":10129:10134   */\n      dup3\n        /* \"#utility.yul\":10111:10135   */\n      tag_244\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":10100:10135   */\n      swap1\n      pop\n        /* \"#utility.yul\":10090:10141   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10147:10237   */\n    tag_166:\n      0x00\n        /* \"#utility.yul\":10224:10229   */\n      dup2\n        /* \"#utility.yul\":10217:10230   */\n      iszero\n        /* \"#utility.yul\":10210:10231   */\n      iszero\n        /* \"#utility.yul\":10199:10231   */\n      swap1\n      pop\n        /* \"#utility.yul\":10189:10237   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10243:10369   */\n    tag_244:\n      0x00\n        /* \"#utility.yul\":10320:10362   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10313:10318   */\n      dup3\n        /* \"#utility.yul\":10309:10363   */\n      and\n        /* \"#utility.yul\":10298:10363   */\n      swap1\n      pop\n        /* \"#utility.yul\":10288:10369   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10375:10452   */\n    tag_201:\n      0x00\n        /* \"#utility.yul\":10441:10446   */\n      dup2\n        /* \"#utility.yul\":10430:10446   */\n      swap1\n      pop\n        /* \"#utility.yul\":10420:10452   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10458:10544   */\n    tag_205:\n      0x00\n        /* \"#utility.yul\":10533:10537   */\n      0xff\n        /* \"#utility.yul\":10526:10531   */\n      dup3\n        /* \"#utility.yul\":10522:10538   */\n      and\n        /* \"#utility.yul\":10511:10538   */\n      swap1\n      pop\n        /* \"#utility.yul\":10501:10544   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10550:10857   */\n    tag_174:\n        /* \"#utility.yul\":10618:10619   */\n      0x00\n        /* \"#utility.yul\":10628:10741   */\n    tag_250:\n        /* \"#utility.yul\":10642:10648   */\n      dup4\n        /* \"#utility.yul\":10639:10640   */\n      dup2\n        /* \"#utility.yul\":10636:10649   */\n      lt\n        /* \"#utility.yul\":10628:10741   */\n      iszero\n      tag_252\n      jumpi\n        /* \"#utility.yul\":10727:10728   */\n      dup1\n        /* \"#utility.yul\":10722:10725   */\n      dup3\n        /* \"#utility.yul\":10718:10729   */\n      add\n        /* \"#utility.yul\":10712:10730   */\n      mload\n        /* \"#utility.yul\":10708:10709   */\n      dup2\n        /* \"#utility.yul\":10703:10706   */\n      dup5\n        /* \"#utility.yul\":10699:10710   */\n      add\n        /* \"#utility.yul\":10692:10731   */\n      mstore\n        /* \"#utility.yul\":10664:10666   */\n      0x20\n        /* \"#utility.yul\":10661:10662   */\n      dup2\n        /* \"#utility.yul\":10657:10667   */\n      add\n        /* \"#utility.yul\":10652:10667   */\n      swap1\n      pop\n        /* \"#utility.yul\":10628:10741   */\n      jump(tag_250)\n    tag_252:\n        /* \"#utility.yul\":10759:10765   */\n      dup4\n        /* \"#utility.yul\":10756:10757   */\n      dup2\n        /* \"#utility.yul\":10753:10766   */\n      gt\n        /* \"#utility.yul\":10750:10752   */\n      iszero\n      tag_253\n      jumpi\n        /* \"#utility.yul\":10839:10840   */\n      0x00\n        /* \"#utility.yul\":10830:10836   */\n      dup5\n        /* \"#utility.yul\":10825:10828   */\n      dup5\n        /* \"#utility.yul\":10821:10837   */\n      add\n        /* \"#utility.yul\":10814:10841   */\n      mstore\n        /* \"#utility.yul\":10750:10752   */\n    tag_253:\n        /* \"#utility.yul\":10599:10857   */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10863:11183   */\n    tag_65:\n      0x00\n        /* \"#utility.yul\":10944:10945   */\n      0x02\n        /* \"#utility.yul\":10938:10942   */\n      dup3\n        /* \"#utility.yul\":10934:10946   */\n      div\n        /* \"#utility.yul\":10924:10946   */\n      swap1\n      pop\n        /* \"#utility.yul\":10991:10992   */\n      0x01\n        /* \"#utility.yul\":10985:10989   */\n      dup3\n        /* \"#utility.yul\":10981:10993   */\n      and\n        /* \"#utility.yul\":11012:11030   */\n      dup1\n        /* \"#utility.yul\":11002:11004   */\n      tag_255\n      jumpi\n        /* \"#utility.yul\":11068:11072   */\n      0x7f\n        /* \"#utility.yul\":11060:11066   */\n      dup3\n        /* \"#utility.yul\":11056:11073   */\n      and\n        /* \"#utility.yul\":11046:11073   */\n      swap2\n      pop\n        /* \"#utility.yul\":11002:11004   */\n    tag_255:\n        /* \"#utility.yul\":11130:11132   */\n      0x20\n        /* \"#utility.yul\":11122:11128   */\n      dup3\n        /* \"#utility.yul\":11119:11133   */\n      lt\n        /* \"#utility.yul\":11099:11117   */\n      dup2\n        /* \"#utility.yul\":11096:11134   */\n      eq\n        /* \"#utility.yul\":11093:11095   */\n      iszero\n      tag_256\n      jumpi\n        /* \"#utility.yul\":11149:11167   */\n      tag_257\n      tag_258\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":11093:11095   */\n    tag_256:\n        /* \"#utility.yul\":10914:11183   */\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11189:11369   */\n    tag_235:\n        /* \"#utility.yul\":11237:11314   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11234:11235   */\n      0x00\n        /* \"#utility.yul\":11227:11315   */\n      mstore\n        /* \"#utility.yul\":11334:11338   */\n      0x11\n        /* \"#utility.yul\":11331:11332   */\n      0x04\n        /* \"#utility.yul\":11324:11339   */\n      mstore\n        /* \"#utility.yul\":11358:11362   */\n      0x24\n        /* \"#utility.yul\":11355:11356   */\n      0x00\n        /* \"#utility.yul\":11348:11363   */\n      revert\n        /* \"#utility.yul\":11375:11555   */\n    tag_258:\n        /* \"#utility.yul\":11423:11500   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11420:11421   */\n      0x00\n        /* \"#utility.yul\":11413:11501   */\n      mstore\n        /* \"#utility.yul\":11520:11524   */\n      0x22\n        /* \"#utility.yul\":11517:11518   */\n      0x04\n        /* \"#utility.yul\":11510:11525   */\n      mstore\n        /* \"#utility.yul\":11544:11548   */\n      0x24\n        /* \"#utility.yul\":11541:11542   */\n      0x00\n        /* \"#utility.yul\":11534:11549   */\n      revert\n        /* \"#utility.yul\":11561:11663   */\n    tag_176:\n      0x00\n        /* \"#utility.yul\":11653:11655   */\n      0x1f\n        /* \"#utility.yul\":11649:11656   */\n      not\n        /* \"#utility.yul\":11644:11646   */\n      0x1f\n        /* \"#utility.yul\":11637:11642   */\n      dup4\n        /* \"#utility.yul\":11633:11647   */\n      add\n        /* \"#utility.yul\":11629:11657   */\n      and\n        /* \"#utility.yul\":11619:11657   */\n      swap1\n      pop\n        /* \"#utility.yul\":11609:11663   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11669:11791   */\n    tag_142:\n        /* \"#utility.yul\":11742:11766   */\n      tag_263\n        /* \"#utility.yul\":11760:11765   */\n      dup2\n        /* \"#utility.yul\":11742:11766   */\n      tag_241\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":11735:11740   */\n      dup2\n        /* \"#utility.yul\":11732:11767   */\n      eq\n        /* \"#utility.yul\":11722:11724   */\n      tag_264\n      jumpi\n        /* \"#utility.yul\":11781:11782   */\n      0x00\n        /* \"#utility.yul\":11778:11779   */\n      dup1\n        /* \"#utility.yul\":11771:11783   */\n      revert\n        /* \"#utility.yul\":11722:11724   */\n    tag_264:\n        /* \"#utility.yul\":11712:11791   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11797:11919   */\n    tag_146:\n        /* \"#utility.yul\":11870:11894   */\n      tag_266\n        /* \"#utility.yul\":11888:11893   */\n      dup2\n        /* \"#utility.yul\":11870:11894   */\n      tag_201\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":11863:11868   */\n      dup2\n        /* \"#utility.yul\":11860:11895   */\n      eq\n        /* \"#utility.yul\":11850:11852   */\n      tag_267\n      jumpi\n        /* \"#utility.yul\":11909:11910   */\n      0x00\n        /* \"#utility.yul\":11906:11907   */\n      dup1\n        /* \"#utility.yul\":11899:11911   */\n      revert\n        /* \"#utility.yul\":11850:11852   */\n    tag_267:\n        /* \"#utility.yul\":11840:11919   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220556daa47777c9853646481cc91576f5e6e1d99dbfb056c6359bfce2efb0921a764736f6c63430008000033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50611384806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190611019565b60405180910390f35b6100e660048036038101906100e19190610c92565b610308565b6040516100f39190610ffe565b60405180910390f35b610104610326565b604051610111919061111b565b60405180910390f35b610134600480360381019061012f9190610c43565b610330565b6040516101419190610ffe565b60405180910390f35b610152610431565b60405161015f9190611136565b60405180910390f35b610182600480360381019061017d9190610c92565b61043a565b60405161018f9190610ffe565b60405180910390f35b6101b260048036038101906101ad9190610bde565b6104e6565b6040516101bf919061111b565b60405180910390f35b6101d061052f565b6040516101dd9190611019565b60405180910390f35b61020060048036038101906101fb9190610c92565b6105c1565b60405161020d9190610ffe565b60405180910390f35b610230600480360381019061022b9190610c92565b6106b5565b60405161023d9190610ffe565b60405180910390f35b610260600480360381019061025b9190610c07565b6106d3565b60405161026d919061111b565b60405180910390f35b6060603680546102859061127f565b80601f01602080910402602001604051908101604052809291908181526020018280546102b19061127f565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b600061031c61031561075a565b8484610762565b6001905092915050565b6000603554905090565b600061033d84848461092d565b6000603460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061038861075a565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610408576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ff9061109b565b60405180910390fd5b6104258561041461075a565b858461042091906111c3565b610762565b60019150509392505050565b60006012905090565b60006104dc61044761075a565b84846034600061045561075a565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104d7919061116d565b610762565b6001905092915050565b6000603360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606037805461053e9061127f565b80601f016020809104026020016040519081016040528092919081815260200182805461056a9061127f565b80156105b75780601f1061058c576101008083540402835291602001916105b7565b820191906000526020600020905b81548152906001019060200180831161059a57829003601f168201915b5050505050905090565b600080603460006105d061075a565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281101561068d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610684906110fb565b60405180910390fd5b6106aa61069861075a565b8585846106a591906111c3565b610762565b600191505092915050565b60006106c96106c261075a565b848461092d565b6001905092915050565b6000603460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156107d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c9906110db565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610842576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108399061105b565b60405180910390fd5b80603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610920919061111b565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561099d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610994906110bb565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a049061103b565b60405180910390fd5b610a18838383610baf565b6000603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a969061107b565b60405180910390fd5b8181610aab91906111c3565b603360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b3d919061116d565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610ba1919061111b565b60405180910390a350505050565b505050565b600081359050610bc381611320565b92915050565b600081359050610bd881611337565b92915050565b600060208284031215610bf057600080fd5b6000610bfe84828501610bb4565b91505092915050565b60008060408385031215610c1a57600080fd5b6000610c2885828601610bb4565b9250506020610c3985828601610bb4565b9150509250929050565b600080600060608486031215610c5857600080fd5b6000610c6686828701610bb4565b9350506020610c7786828701610bb4565b9250506040610c8886828701610bc9565b9150509250925092565b60008060408385031215610ca557600080fd5b6000610cb385828601610bb4565b9250506020610cc485828601610bc9565b9150509250929050565b610cd781611209565b82525050565b6000610ce882611151565b610cf2818561115c565b9350610d0281856020860161124c565b610d0b8161130f565b840191505092915050565b6000610d2360238361115c565b91507f45524332303a207472616e7366657220746f20746865207a65726f206164647260008301527f65737300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610d8960228361115c565b91507f45524332303a20617070726f766520746f20746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610def60268361115c565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206260008301527f616c616e636500000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610e5560288361115c565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206160008301527f6c6c6f77616e63650000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610ebb60258361115c565b91507f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610f2160248361115c565b91507f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610f8760258361115c565b91507f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008301527f207a65726f0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b610fe981611235565b82525050565b610ff88161123f565b82525050565b60006020820190506110136000830184610cce565b92915050565b600060208201905081810360008301526110338184610cdd565b905092915050565b6000602082019050818103600083015261105481610d16565b9050919050565b6000602082019050818103600083015261107481610d7c565b9050919050565b6000602082019050818103600083015261109481610de2565b9050919050565b600060208201905081810360008301526110b481610e48565b9050919050565b600060208201905081810360008301526110d481610eae565b9050919050565b600060208201905081810360008301526110f481610f14565b9050919050565b6000602082019050818103600083015261111481610f7a565b9050919050565b60006020820190506111306000830184610fe0565b92915050565b600060208201905061114b6000830184610fef565b92915050565b600081519050919050565b600082825260208201905092915050565b600061117882611235565b915061118383611235565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156111b8576111b76112b1565b5b828201905092915050565b60006111ce82611235565b91506111d983611235565b9250828210156111ec576111eb6112b1565b5b828203905092915050565b600061120282611215565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561126a57808201518184015260208101905061124f565b83811115611279576000848401525b50505050565b6000600282049050600182168061129757607f821691505b602082108114156112ab576112aa6112e0565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b611329816111f7565b811461133457600080fd5b50565b61134081611235565b811461134b57600080fd5b5056fea2646970667358221220556daa47777c9853646481cc91576f5e6e1d99dbfb056c6359bfce2efb0921a764736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1384 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x1019 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xC92 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xFFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x326 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0x111B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC43 JUMP JUMPDEST PUSH2 0x330 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xFFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x431 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x1136 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xC92 JUMP JUMPDEST PUSH2 0x43A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xFFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xBDE JUMP JUMPDEST PUSH2 0x4E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x111B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x52F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x1019 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xC92 JUMP JUMPDEST PUSH2 0x5C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xFFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xC92 JUMP JUMPDEST PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xFFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x6D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0x111B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0x127F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0x127F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31C PUSH2 0x315 PUSH2 0x75A JUMP JUMPDEST DUP5 DUP5 PUSH2 0x762 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x35 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33D DUP5 DUP5 DUP5 PUSH2 0x92D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x34 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x388 PUSH2 0x75A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x408 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FF SWAP1 PUSH2 0x109B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x425 DUP6 PUSH2 0x414 PUSH2 0x75A JUMP JUMPDEST DUP6 DUP5 PUSH2 0x420 SWAP2 SWAP1 PUSH2 0x11C3 JUMP JUMPDEST PUSH2 0x762 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DC PUSH2 0x447 PUSH2 0x75A JUMP JUMPDEST DUP5 DUP5 PUSH1 0x34 PUSH1 0x0 PUSH2 0x455 PUSH2 0x75A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x4D7 SWAP2 SWAP1 PUSH2 0x116D JUMP JUMPDEST PUSH2 0x762 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x53E SWAP1 PUSH2 0x127F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x56A SWAP1 PUSH2 0x127F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5B7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x58C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5B7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x59A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x34 PUSH1 0x0 PUSH2 0x5D0 PUSH2 0x75A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x68D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x684 SWAP1 PUSH2 0x10FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6AA PUSH2 0x698 PUSH2 0x75A JUMP JUMPDEST DUP6 DUP6 DUP5 PUSH2 0x6A5 SWAP2 SWAP1 PUSH2 0x11C3 JUMP JUMPDEST PUSH2 0x762 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6C9 PUSH2 0x6C2 PUSH2 0x75A JUMP JUMPDEST DUP5 DUP5 PUSH2 0x92D JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x34 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x7D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C9 SWAP1 PUSH2 0x10DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x842 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x839 SWAP1 PUSH2 0x105B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x34 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x920 SWAP2 SWAP1 PUSH2 0x111B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x99D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x994 SWAP1 PUSH2 0x10BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA04 SWAP1 PUSH2 0x103B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA18 DUP4 DUP4 DUP4 PUSH2 0xBAF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xA9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA96 SWAP1 PUSH2 0x107B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH2 0xAAB SWAP2 SWAP1 PUSH2 0x11C3 JUMP JUMPDEST PUSH1 0x33 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB3D SWAP2 SWAP1 PUSH2 0x116D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xBA1 SWAP2 SWAP1 PUSH2 0x111B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC3 DUP2 PUSH2 0x1320 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBD8 DUP2 PUSH2 0x1337 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xBFE DUP5 DUP3 DUP6 ADD PUSH2 0xBB4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC28 DUP6 DUP3 DUP7 ADD PUSH2 0xBB4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC39 DUP6 DUP3 DUP7 ADD PUSH2 0xBB4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC66 DUP7 DUP3 DUP8 ADD PUSH2 0xBB4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC77 DUP7 DUP3 DUP8 ADD PUSH2 0xBB4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC88 DUP7 DUP3 DUP8 ADD PUSH2 0xBC9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCB3 DUP6 DUP3 DUP7 ADD PUSH2 0xBB4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCC4 DUP6 DUP3 DUP7 ADD PUSH2 0xBC9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD7 DUP2 PUSH2 0x1209 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE8 DUP3 PUSH2 0x1151 JUMP JUMPDEST PUSH2 0xCF2 DUP2 DUP6 PUSH2 0x115C JUMP JUMPDEST SWAP4 POP PUSH2 0xD02 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x124C JUMP JUMPDEST PUSH2 0xD0B DUP2 PUSH2 0x130F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD23 PUSH1 0x23 DUP4 PUSH2 0x115C JUMP JUMPDEST SWAP2 POP PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD89 PUSH1 0x22 DUP4 PUSH2 0x115C JUMP JUMPDEST SWAP2 POP PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDEF PUSH1 0x26 DUP4 PUSH2 0x115C JUMP JUMPDEST SWAP2 POP PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE55 PUSH1 0x28 DUP4 PUSH2 0x115C JUMP JUMPDEST SWAP2 POP PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6C6C6F77616E6365000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEBB PUSH1 0x25 DUP4 PUSH2 0x115C JUMP JUMPDEST SWAP2 POP PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF21 PUSH1 0x24 DUP4 PUSH2 0x115C JUMP JUMPDEST SWAP2 POP PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF87 PUSH1 0x25 DUP4 PUSH2 0x115C JUMP JUMPDEST SWAP2 POP PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFE9 DUP2 PUSH2 0x1235 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xFF8 DUP2 PUSH2 0x123F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1013 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCCE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1033 DUP2 DUP5 PUSH2 0xCDD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1054 DUP2 PUSH2 0xD16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1074 DUP2 PUSH2 0xD7C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1094 DUP2 PUSH2 0xDE2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10B4 DUP2 PUSH2 0xE48 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10D4 DUP2 PUSH2 0xEAE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10F4 DUP2 PUSH2 0xF14 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1114 DUP2 PUSH2 0xF7A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1130 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFE0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x114B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1178 DUP3 PUSH2 0x1235 JUMP JUMPDEST SWAP2 POP PUSH2 0x1183 DUP4 PUSH2 0x1235 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x11B8 JUMPI PUSH2 0x11B7 PUSH2 0x12B1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11CE DUP3 PUSH2 0x1235 JUMP JUMPDEST SWAP2 POP PUSH2 0x11D9 DUP4 PUSH2 0x1235 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x11EC JUMPI PUSH2 0x11EB PUSH2 0x12B1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1202 DUP3 PUSH2 0x1215 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x126A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x124F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1279 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1297 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x12AB JUMPI PUSH2 0x12AA PUSH2 0x12E0 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1329 DUP2 PUSH2 0x11F7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1340 DUP2 PUSH2 0x1235 JUMP JUMPDEST DUP2 EQ PUSH2 0x134B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE PUSH14 0xAA47777C9853646481CC91576F5E PUSH15 0x1D99DBFB056C6359BFCE2EFB0921A7 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "7083:9593:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:11922:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "7:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:1",
														"type": ""
													}
												],
												"src": "152:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "363:196:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "418:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "421:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "411:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "411:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "411:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "384:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "393:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "380:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "380:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "405:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "376:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:32:1"
															},
															"nodeType": "YulIf",
															"src": "373:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "435:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "450:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "464:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "454:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "479:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "514:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "525:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "510:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "510:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "534:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "489:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "489:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "479:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "333:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "344:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "356:6:1",
														"type": ""
													}
												],
												"src": "297:262:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "648:324:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "694:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "703:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "706:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "696:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "696:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "696:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "669:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "678:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "665:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "665:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "690:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "661:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "661:32:1"
															},
															"nodeType": "YulIf",
															"src": "658:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "720:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "735:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "749:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "739:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "764:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "799:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "810:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "795:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "795:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "819:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "774:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "774:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "764:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "847:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "862:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "876:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "866:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "892:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "927:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "938:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "923:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "923:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "947:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "902:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "902:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "892:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "610:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "621:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "633:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "641:6:1",
														"type": ""
													}
												],
												"src": "565:407:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1078:452:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1124:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1133:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1136:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1126:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1126:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1126:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1099:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1108:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1095:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1095:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1120:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1091:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1091:32:1"
															},
															"nodeType": "YulIf",
															"src": "1088:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1150:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1165:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1179:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1169:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1194:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1229:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1240:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1225:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1225:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1249:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1204:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1204:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1194:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1277:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1292:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1306:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1296:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1322:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1357:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1368:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1353:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1353:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1377:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1332:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1332:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1322:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1405:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1420:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1434:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1424:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1450:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1485:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1496:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1481:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1481:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1505:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1460:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1460:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1450:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1032:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1043:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1055:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1063:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1071:6:1",
														"type": ""
													}
												],
												"src": "978:552:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1619:324:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1665:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1674:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1677:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1667:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1667:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1667:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1640:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1649:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1636:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1636:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1661:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1632:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1632:32:1"
															},
															"nodeType": "YulIf",
															"src": "1629:2:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1691:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1706:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1720:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1710:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1735:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1770:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1781:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1766:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1766:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1790:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1745:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1745:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1735:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1818:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1833:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1847:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1837:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1863:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1898:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1909:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1894:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1894:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1918:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1873:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1873:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1863:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1581:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1592:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1604:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1612:6:1",
														"type": ""
													}
												],
												"src": "1536:407:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2008:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2025:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2045:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2030:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2030:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2018:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2018:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2018:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1996:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2003:3:1",
														"type": ""
													}
												],
												"src": "1949:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2156:272:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2166:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2213:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2180:32:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2180:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2170:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2228:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2294:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2299:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2235:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2235:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2228:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2341:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2348:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2337:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2337:16:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2355:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2360:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2315:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2315:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2315:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2376:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2387:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2414:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2392:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2392:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2383:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2376:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2137:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2144:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2152:3:1",
														"type": ""
													}
												],
												"src": "2064:364:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2580:221:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2590:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2656:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2661:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2597:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2597:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2590:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2685:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2690:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2681:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2681:11:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2694:34:1",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2674:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2674:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2674:55:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2750:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2755:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2746:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2746:12:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2760:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2739:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2739:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2739:27:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2776:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2787:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2792:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2783:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2783:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2776:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2568:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2576:3:1",
														"type": ""
													}
												],
												"src": "2434:367:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2953:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2963:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3029:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3034:2:1",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2970:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2970:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2963:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3058:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3063:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3054:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3054:11:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3067:34:1",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3047:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3047:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3047:55:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3123:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3128:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3119:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3119:12:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3133:4:1",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3112:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3112:26:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3112:26:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3148:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3159:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3164:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3155:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3155:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3148:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2941:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2949:3:1",
														"type": ""
													}
												],
												"src": "2807:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3325:224:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3335:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3401:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3406:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3342:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3342:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3335:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3430:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3435:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3426:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3426:11:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3439:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3419:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3419:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3419:55:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3495:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3500:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3491:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3491:12:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3505:8:1",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3484:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3484:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3484:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3524:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3535:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3540:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3531:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3531:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3524:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3313:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3321:3:1",
														"type": ""
													}
												],
												"src": "3179:370:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3701:226:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3711:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3777:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3782:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3718:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3718:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3711:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3806:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3811:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3802:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3802:11:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3815:34:1",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3795:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3795:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3795:55:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3871:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3876:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3867:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3867:12:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3881:10:1",
																		"type": "",
																		"value": "llowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3860:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3860:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3902:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3913:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3918:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3909:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3909:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3902:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3689:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3697:3:1",
														"type": ""
													}
												],
												"src": "3555:372:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4079:223:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4089:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4155:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4160:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4096:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4096:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4089:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4184:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4189:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4180:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4180:11:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4193:34:1",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4173:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4173:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4173:55:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4249:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4254:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4245:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4245:12:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4259:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4238:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4238:29:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4238:29:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4277:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4288:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4293:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4284:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4284:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4277:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4067:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4075:3:1",
														"type": ""
													}
												],
												"src": "3933:369:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4454:222:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4464:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4530:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4535:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4471:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4471:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4464:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4559:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4564:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4555:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4555:11:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4568:34:1",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4548:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4548:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4548:55:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4624:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4629:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4620:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4620:12:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4634:6:1",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4613:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4613:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4613:28:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4651:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4662:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4667:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4658:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4658:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4651:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4442:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4450:3:1",
														"type": ""
													}
												],
												"src": "4308:368:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4828:223:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4838:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4904:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4909:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4845:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4845:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4838:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4933:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4938:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4929:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4929:11:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4942:34:1",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4922:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4922:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4922:55:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4998:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5003:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4994:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4994:12:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5008:7:1",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4987:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4987:29:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4987:29:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5026:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5037:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5042:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5033:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5033:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5026:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4816:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4824:3:1",
														"type": ""
													}
												],
												"src": "4682:369:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5122:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5139:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5162:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5144:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5144:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5132:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5132:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5132:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5110:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5117:3:1",
														"type": ""
													}
												],
												"src": "5057:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5242:51:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5259:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5280:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "5264:15:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5264:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5252:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5252:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5252:35:1"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5230:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5237:3:1",
														"type": ""
													}
												],
												"src": "5181:112:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5391:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5401:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5413:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5424:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5409:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5409:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5401:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5475:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5488:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5499:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5484:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5484:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5437:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5437:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5437:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5363:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5375:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5386:4:1",
														"type": ""
													}
												],
												"src": "5299:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5633:195:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5643:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5655:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5666:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5651:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5651:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5643:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5690:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5701:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5686:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5686:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5709:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5715:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5705:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5705:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5679:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5679:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5679:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5735:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5807:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5816:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5743:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5743:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5735:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5605:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5617:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5628:4:1",
														"type": ""
													}
												],
												"src": "5515:313:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6005:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6015:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6027:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6038:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6023:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6023:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6015:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6062:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6073:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6058:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6058:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6081:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6087:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6077:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6077:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6051:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6051:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6051:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6107:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6241:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6115:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6115:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6107:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5985:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6000:4:1",
														"type": ""
													}
												],
												"src": "5834:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6430:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6440:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6452:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6463:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6448:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6448:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6440:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6487:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6498:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6483:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6483:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6506:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6512:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6502:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6502:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6476:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6476:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6476:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6532:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6666:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6540:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6540:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6532:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6410:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6425:4:1",
														"type": ""
													}
												],
												"src": "6259:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6855:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6865:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6877:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6888:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6873:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6873:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6865:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6912:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6923:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6908:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6908:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6931:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6937:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6927:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6927:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6901:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6901:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6901:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6957:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7091:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6965:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6965:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6957:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6835:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6850:4:1",
														"type": ""
													}
												],
												"src": "6684:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7280:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7290:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7302:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7313:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7298:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7298:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7290:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7337:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7348:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7333:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7333:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7356:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7362:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7352:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7352:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7326:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7326:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7326:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7382:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7516:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7390:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7390:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7382:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7260:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7275:4:1",
														"type": ""
													}
												],
												"src": "7109:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7705:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7715:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7727:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7738:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7723:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7723:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7715:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7762:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7773:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7758:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7758:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7781:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7787:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7777:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7777:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7751:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7751:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7751:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7807:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7941:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7815:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7815:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7807:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7685:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7700:4:1",
														"type": ""
													}
												],
												"src": "7534:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8130:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8140:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8152:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8163:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8148:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8148:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8140:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8187:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8198:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8183:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8183:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8206:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8212:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8202:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8202:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8176:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8176:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8176:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8232:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8366:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8240:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8240:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8232:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8110:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8125:4:1",
														"type": ""
													}
												],
												"src": "7959:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8555:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8565:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8577:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8588:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8573:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8573:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8565:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8612:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8623:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8608:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8608:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8631:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8637:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8627:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8627:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8601:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8601:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8601:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8657:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8791:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8665:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8665:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8657:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8535:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8550:4:1",
														"type": ""
													}
												],
												"src": "8384:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8907:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8917:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8929:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8940:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8925:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8925:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8917:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8997:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9010:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9021:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9006:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9006:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8953:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8953:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8953:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8879:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8891:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8902:4:1",
														"type": ""
													}
												],
												"src": "8809:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9131:120:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9141:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9153:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9164:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9149:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9149:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9141:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9217:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9230:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9241:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9226:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9226:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9177:39:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9177:67:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9177:67:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9103:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9115:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9126:4:1",
														"type": ""
													}
												],
												"src": "9037:214:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9316:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9327:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9343:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9337:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9337:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "9327:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9299:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9309:6:1",
														"type": ""
													}
												],
												"src": "9257:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9458:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9475:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9480:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9468:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9468:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9468:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9496:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9515:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9520:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9511:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9511:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "9496:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9430:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9435:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "9446:11:1",
														"type": ""
													}
												],
												"src": "9362:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9581:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9591:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9614:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9596:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9596:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9591:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9625:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9648:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9630:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9630:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9625:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9788:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9790:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9790:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9790:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9709:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9716:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9784:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9712:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9712:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9706:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9706:81:1"
															},
															"nodeType": "YulIf",
															"src": "9703:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9820:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9831:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9834:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9827:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9827:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "9820:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9568:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9571:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "9577:3:1",
														"type": ""
													}
												],
												"src": "9537:305:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9893:146:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9903:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9926:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9908:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9908:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9903:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9937:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9960:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9942:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9942:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9937:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9984:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9986:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9986:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9986:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9978:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9981:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9975:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9975:8:1"
															},
															"nodeType": "YulIf",
															"src": "9972:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10016:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10028:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10031:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10024:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10024:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "10016:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9879:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9882:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "9888:4:1",
														"type": ""
													}
												],
												"src": "9848:191:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10090:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10100:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10129:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "10111:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10111:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10100:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10072:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10082:7:1",
														"type": ""
													}
												],
												"src": "10045:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10189:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10199:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10224:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "10217:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10217:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10210:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10210:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10199:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10171:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10181:7:1",
														"type": ""
													}
												],
												"src": "10147:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10288:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10298:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10313:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10320:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10309:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10309:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10298:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10270:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10280:7:1",
														"type": ""
													}
												],
												"src": "10243:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10420:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10430:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "10441:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10430:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10402:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10412:7:1",
														"type": ""
													}
												],
												"src": "10375:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10501:43:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10511:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10526:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10533:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10522:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10522:16:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10511:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10483:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10493:7:1",
														"type": ""
													}
												],
												"src": "10458:86:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10599:258:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10609:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10618:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "10613:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10678:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "10703:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "10708:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10699:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10699:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "10722:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "10727:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "10718:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "10718:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "10712:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10712:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10692:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10692:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10692:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10639:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10642:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10636:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10636:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10650:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10652:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "10661:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10664:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10657:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10657:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "10652:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10632:3:1",
																"statements": []
															},
															"src": "10628:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10775:76:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "10825:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "10830:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "10821:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10821:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10839:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10814:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10814:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10814:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10756:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10759:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10753:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10753:13:1"
															},
															"nodeType": "YulIf",
															"src": "10750:2:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "10581:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "10586:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10591:6:1",
														"type": ""
													}
												],
												"src": "10550:307:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10914:269:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10924:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10938:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10944:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10934:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10934:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10924:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10955:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10985:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10991:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10981:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10981:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "10959:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11032:51:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11046:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "11060:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11068:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "11056:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11056:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11046:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "11012:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11005:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11005:26:1"
															},
															"nodeType": "YulIf",
															"src": "11002:2:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11135:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "11149:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11149:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11149:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "11099:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11122:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11130:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "11119:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11119:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "11096:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11096:38:1"
															},
															"nodeType": "YulIf",
															"src": "11093:2:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "10898:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10907:6:1",
														"type": ""
													}
												],
												"src": "10863:320:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11217:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11234:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11237:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11227:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11227:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11227:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11331:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11334:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11324:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11324:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11324:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11355:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11358:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11348:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11348:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11348:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "11189:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11403:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11420:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11423:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11413:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11413:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11413:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11517:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11520:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11510:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11510:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11510:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11541:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11544:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11534:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11534:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11534:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "11375:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11609:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11619:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11637:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11644:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11633:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11633:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11653:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "11649:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11649:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11629:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11629:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "11619:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11592:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "11602:6:1",
														"type": ""
													}
												],
												"src": "11561:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11712:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11769:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11778:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11781:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11771:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11771:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11771:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11735:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11760:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "11742:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11742:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "11732:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11732:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11725:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11725:43:1"
															},
															"nodeType": "YulIf",
															"src": "11722:2:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11705:5:1",
														"type": ""
													}
												],
												"src": "11669:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11840:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11897:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11906:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11909:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11899:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11899:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11899:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11863:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11888:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "11870:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11870:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "11860:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11860:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11853:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11853:43:1"
															},
															"nodeType": "YulIf",
															"src": "11850:2:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11833:5:1",
														"type": ""
													}
												],
												"src": "11797:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n\n        mstore(add(pos, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(pos, 32), \"ess\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n\n        mstore(add(pos, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(pos, 32), \"ss\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n\n        mstore(add(pos, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(pos, 32), \"alance\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n\n        mstore(add(pos, 0), \"ERC20: transfer amount exceeds a\")\n\n        mstore(add(pos, 32), \"llowance\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n\n        mstore(add(pos, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(pos, 32), \"dress\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n\n        mstore(add(pos, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(pos, 32), \"ress\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n\n        mstore(add(pos, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(pos, 32), \" zero\")\n\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190611019565b60405180910390f35b6100e660048036038101906100e19190610c92565b610308565b6040516100f39190610ffe565b60405180910390f35b610104610326565b604051610111919061111b565b60405180910390f35b610134600480360381019061012f9190610c43565b610330565b6040516101419190610ffe565b60405180910390f35b610152610431565b60405161015f9190611136565b60405180910390f35b610182600480360381019061017d9190610c92565b61043a565b60405161018f9190610ffe565b60405180910390f35b6101b260048036038101906101ad9190610bde565b6104e6565b6040516101bf919061111b565b60405180910390f35b6101d061052f565b6040516101dd9190611019565b60405180910390f35b61020060048036038101906101fb9190610c92565b6105c1565b60405161020d9190610ffe565b60405180910390f35b610230600480360381019061022b9190610c92565b6106b5565b60405161023d9190610ffe565b60405180910390f35b610260600480360381019061025b9190610c07565b6106d3565b60405161026d919061111b565b60405180910390f35b6060603680546102859061127f565b80601f01602080910402602001604051908101604052809291908181526020018280546102b19061127f565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b600061031c61031561075a565b8484610762565b6001905092915050565b6000603554905090565b600061033d84848461092d565b6000603460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061038861075a565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905082811015610408576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ff9061109b565b60405180910390fd5b6104258561041461075a565b858461042091906111c3565b610762565b60019150509392505050565b60006012905090565b60006104dc61044761075a565b84846034600061045561075a565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104d7919061116d565b610762565b6001905092915050565b6000603360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606037805461053e9061127f565b80601f016020809104026020016040519081016040528092919081815260200182805461056a9061127f565b80156105b75780601f1061058c576101008083540402835291602001916105b7565b820191906000526020600020905b81548152906001019060200180831161059a57829003601f168201915b5050505050905090565b600080603460006105d061075a565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508281101561068d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610684906110fb565b60405180910390fd5b6106aa61069861075a565b8585846106a591906111c3565b610762565b600191505092915050565b60006106c96106c261075a565b848461092d565b6001905092915050565b6000603460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156107d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c9906110db565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610842576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108399061105b565b60405180910390fd5b80603460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610920919061111b565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561099d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610994906110bb565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a049061103b565b60405180910390fd5b610a18838383610baf565b6000603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a969061107b565b60405180910390fd5b8181610aab91906111c3565b603360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081603360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b3d919061116d565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610ba1919061111b565b60405180910390a350505050565b505050565b600081359050610bc381611320565b92915050565b600081359050610bd881611337565b92915050565b600060208284031215610bf057600080fd5b6000610bfe84828501610bb4565b91505092915050565b60008060408385031215610c1a57600080fd5b6000610c2885828601610bb4565b9250506020610c3985828601610bb4565b9150509250929050565b600080600060608486031215610c5857600080fd5b6000610c6686828701610bb4565b9350506020610c7786828701610bb4565b9250506040610c8886828701610bc9565b9150509250925092565b60008060408385031215610ca557600080fd5b6000610cb385828601610bb4565b9250506020610cc485828601610bc9565b9150509250929050565b610cd781611209565b82525050565b6000610ce882611151565b610cf2818561115c565b9350610d0281856020860161124c565b610d0b8161130f565b840191505092915050565b6000610d2360238361115c565b91507f45524332303a207472616e7366657220746f20746865207a65726f206164647260008301527f65737300000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610d8960228361115c565b91507f45524332303a20617070726f766520746f20746865207a65726f20616464726560008301527f73730000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610def60268361115c565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206260008301527f616c616e636500000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610e5560288361115c565b91507f45524332303a207472616e7366657220616d6f756e742065786365656473206160008301527f6c6c6f77616e63650000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610ebb60258361115c565b91507f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008301527f64726573730000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610f2160248361115c565b91507f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000610f8760258361115c565b91507f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008301527f207a65726f0000000000000000000000000000000000000000000000000000006020830152604082019050919050565b610fe981611235565b82525050565b610ff88161123f565b82525050565b60006020820190506110136000830184610cce565b92915050565b600060208201905081810360008301526110338184610cdd565b905092915050565b6000602082019050818103600083015261105481610d16565b9050919050565b6000602082019050818103600083015261107481610d7c565b9050919050565b6000602082019050818103600083015261109481610de2565b9050919050565b600060208201905081810360008301526110b481610e48565b9050919050565b600060208201905081810360008301526110d481610eae565b9050919050565b600060208201905081810360008301526110f481610f14565b9050919050565b6000602082019050818103600083015261111481610f7a565b9050919050565b60006020820190506111306000830184610fe0565b92915050565b600060208201905061114b6000830184610fef565b92915050565b600081519050919050565b600082825260208201905092915050565b600061117882611235565b915061118383611235565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156111b8576111b76112b1565b5b828201905092915050565b60006111ce82611235565b91506111d983611235565b9250828210156111ec576111eb6112b1565b5b828203905092915050565b600061120282611215565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561126a57808201518184015260208101905061124f565b83811115611279576000848401525b50505050565b6000600282049050600182168061129757607f821691505b602082108114156112ab576112aa6112e0565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b611329816111f7565b811461133457600080fd5b50565b61134081611235565b811461134b57600080fd5b5056fea2646970667358221220556daa47777c9853646481cc91576f5e6e1d99dbfb056c6359bfce2efb0921a764736f6c63430008000033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x1019 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xC92 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xFFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x326 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0x111B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC43 JUMP JUMPDEST PUSH2 0x330 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xFFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x431 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x1136 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xC92 JUMP JUMPDEST PUSH2 0x43A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xFFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xBDE JUMP JUMPDEST PUSH2 0x4E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x111B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x52F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x1019 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xC92 JUMP JUMPDEST PUSH2 0x5C1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xFFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xC92 JUMP JUMPDEST PUSH2 0x6B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xFFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xC07 JUMP JUMPDEST PUSH2 0x6D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0x111B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0x127F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0x127F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31C PUSH2 0x315 PUSH2 0x75A JUMP JUMPDEST DUP5 DUP5 PUSH2 0x762 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x35 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33D DUP5 DUP5 DUP5 PUSH2 0x92D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x34 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x388 PUSH2 0x75A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x408 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3FF SWAP1 PUSH2 0x109B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x425 DUP6 PUSH2 0x414 PUSH2 0x75A JUMP JUMPDEST DUP6 DUP5 PUSH2 0x420 SWAP2 SWAP1 PUSH2 0x11C3 JUMP JUMPDEST PUSH2 0x762 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4DC PUSH2 0x447 PUSH2 0x75A JUMP JUMPDEST DUP5 DUP5 PUSH1 0x34 PUSH1 0x0 PUSH2 0x455 PUSH2 0x75A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x4D7 SWAP2 SWAP1 PUSH2 0x116D JUMP JUMPDEST PUSH2 0x762 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x53E SWAP1 PUSH2 0x127F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x56A SWAP1 PUSH2 0x127F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5B7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x58C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5B7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x59A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x34 PUSH1 0x0 PUSH2 0x5D0 PUSH2 0x75A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x68D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x684 SWAP1 PUSH2 0x10FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6AA PUSH2 0x698 PUSH2 0x75A JUMP JUMPDEST DUP6 DUP6 DUP5 PUSH2 0x6A5 SWAP2 SWAP1 PUSH2 0x11C3 JUMP JUMPDEST PUSH2 0x762 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6C9 PUSH2 0x6C2 PUSH2 0x75A JUMP JUMPDEST DUP5 DUP5 PUSH2 0x92D JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x34 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x7D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7C9 SWAP1 PUSH2 0x10DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x842 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x839 SWAP1 PUSH2 0x105B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x34 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x920 SWAP2 SWAP1 PUSH2 0x111B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x99D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x994 SWAP1 PUSH2 0x10BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA04 SWAP1 PUSH2 0x103B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA18 DUP4 DUP4 DUP4 PUSH2 0xBAF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xA9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA96 SWAP1 PUSH2 0x107B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH2 0xAAB SWAP2 SWAP1 PUSH2 0x11C3 JUMP JUMPDEST PUSH1 0x33 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x33 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB3D SWAP2 SWAP1 PUSH2 0x116D JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xBA1 SWAP2 SWAP1 PUSH2 0x111B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBC3 DUP2 PUSH2 0x1320 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBD8 DUP2 PUSH2 0x1337 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xBFE DUP5 DUP3 DUP6 ADD PUSH2 0xBB4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC28 DUP6 DUP3 DUP7 ADD PUSH2 0xBB4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC39 DUP6 DUP3 DUP7 ADD PUSH2 0xBB4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC66 DUP7 DUP3 DUP8 ADD PUSH2 0xBB4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC77 DUP7 DUP3 DUP8 ADD PUSH2 0xBB4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC88 DUP7 DUP3 DUP8 ADD PUSH2 0xBC9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCB3 DUP6 DUP3 DUP7 ADD PUSH2 0xBB4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCC4 DUP6 DUP3 DUP7 ADD PUSH2 0xBC9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD7 DUP2 PUSH2 0x1209 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCE8 DUP3 PUSH2 0x1151 JUMP JUMPDEST PUSH2 0xCF2 DUP2 DUP6 PUSH2 0x115C JUMP JUMPDEST SWAP4 POP PUSH2 0xD02 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x124C JUMP JUMPDEST PUSH2 0xD0B DUP2 PUSH2 0x130F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD23 PUSH1 0x23 DUP4 PUSH2 0x115C JUMP JUMPDEST SWAP2 POP PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD89 PUSH1 0x22 DUP4 PUSH2 0x115C JUMP JUMPDEST SWAP2 POP PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDEF PUSH1 0x26 DUP4 PUSH2 0x115C JUMP JUMPDEST SWAP2 POP PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE55 PUSH1 0x28 DUP4 PUSH2 0x115C JUMP JUMPDEST SWAP2 POP PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6C6C6F77616E6365000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEBB PUSH1 0x25 DUP4 PUSH2 0x115C JUMP JUMPDEST SWAP2 POP PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF21 PUSH1 0x24 DUP4 PUSH2 0x115C JUMP JUMPDEST SWAP2 POP PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF87 PUSH1 0x25 DUP4 PUSH2 0x115C JUMP JUMPDEST SWAP2 POP PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP4 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFE9 DUP2 PUSH2 0x1235 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xFF8 DUP2 PUSH2 0x123F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1013 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCCE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1033 DUP2 DUP5 PUSH2 0xCDD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1054 DUP2 PUSH2 0xD16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1074 DUP2 PUSH2 0xD7C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1094 DUP2 PUSH2 0xDE2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10B4 DUP2 PUSH2 0xE48 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10D4 DUP2 PUSH2 0xEAE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10F4 DUP2 PUSH2 0xF14 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1114 DUP2 PUSH2 0xF7A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1130 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFE0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x114B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1178 DUP3 PUSH2 0x1235 JUMP JUMPDEST SWAP2 POP PUSH2 0x1183 DUP4 PUSH2 0x1235 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x11B8 JUMPI PUSH2 0x11B7 PUSH2 0x12B1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11CE DUP3 PUSH2 0x1235 JUMP JUMPDEST SWAP2 POP PUSH2 0x11D9 DUP4 PUSH2 0x1235 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x11EC JUMPI PUSH2 0x11EB PUSH2 0x12B1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1202 DUP3 PUSH2 0x1215 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x126A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x124F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1279 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1297 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x12AB JUMPI PUSH2 0x12AA PUSH2 0x12E0 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1329 DUP2 PUSH2 0x11F7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1340 DUP2 PUSH2 0x1235 JUMP JUMPDEST DUP2 EQ PUSH2 0x134B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE PUSH14 0xAA47777C9853646481CC91576F5E PUSH15 0x1D99DBFB056C6359BFCE2EFB0921A7 PUSH5 0x736F6C6343 STOP ADDMOD STOP STOP CALLER ",
							"sourceMap": "7083:9593:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8122:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10219:166;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9210:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10852:414;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9059:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11661:212;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9374:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8333:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12360:371;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9702:172;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9932:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8122:98;8176:13;8208:5;8201:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8122:98;:::o;10219:166::-;10302:4;10318:39;10327:12;:10;:12::i;:::-;10341:7;10350:6;10318:8;:39::i;:::-;10374:4;10367:11;;10219:166;;;;:::o;9210:106::-;9271:7;9297:12;;9290:19;;9210:106;:::o;10852:414::-;10958:4;10974:36;10984:6;10992:9;11003:6;10974:9;:36::i;:::-;11021:24;11048:11;:19;11060:6;11048:19;;;;;;;;;;;;;;;:33;11068:12;:10;:12::i;:::-;11048:33;;;;;;;;;;;;;;;;11021:60;;11119:6;11099:16;:26;;11091:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;11180:57;11189:6;11197:12;:10;:12::i;:::-;11230:6;11211:16;:25;;;;:::i;:::-;11180:8;:57::i;:::-;11255:4;11248:11;;;10852:414;;;;;:::o;9059:91::-;9117:5;9141:2;9134:9;;9059:91;:::o;11661:212::-;11749:4;11765:80;11774:12;:10;:12::i;:::-;11788:7;11834:10;11797:11;:25;11809:12;:10;:12::i;:::-;11797:25;;;;;;;;;;;;;;;:34;11823:7;11797:34;;;;;;;;;;;;;;;;:47;;;;:::i;:::-;11765:8;:80::i;:::-;11862:4;11855:11;;11661:212;;;;:::o;9374:125::-;9448:7;9474:9;:18;9484:7;9474:18;;;;;;;;;;;;;;;;9467:25;;9374:125;;;:::o;8333:102::-;8389:13;8421:7;8414:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8333:102;:::o;12360:371::-;12453:4;12469:24;12496:11;:25;12508:12;:10;:12::i;:::-;12496:25;;;;;;;;;;;;;;;:34;12522:7;12496:34;;;;;;;;;;;;;;;;12469:61;;12568:15;12548:16;:35;;12540:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;12635:67;12644:12;:10;:12::i;:::-;12658:7;12686:15;12667:16;:34;;;;:::i;:::-;12635:8;:67::i;:::-;12720:4;12713:11;;;12360:371;;;;:::o;9702:172::-;9788:4;9804:42;9814:12;:10;:12::i;:::-;9828:9;9839:6;9804:9;:42::i;:::-;9863:4;9856:11;;9702:172;;;;:::o;9932:149::-;10021:7;10047:11;:18;10059:5;10047:18;;;;;;;;;;;;;;;:27;10066:7;10047:27;;;;;;;;;;;;;;;;10040:34;;9932:149;;;;:::o;5120:96::-;5173:7;5199:10;5192:17;;5120:96;:::o;15624:340::-;15742:1;15725:19;;:5;:19;;;;15717:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;15822:1;15803:21;;:7;:21;;;;15795:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;15904:6;15874:11;:18;15886:5;15874:18;;;;;;;;;;;;;;;:27;15893:7;15874:27;;;;;;;;;;;;;;;:36;;;;15941:7;15925:32;;15934:5;15925:32;;;15950:6;15925:32;;;;;;:::i;:::-;;;;;;;;15624:340;;;:::o;13205:592::-;13328:1;13310:20;;:6;:20;;;;13302:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;13411:1;13390:23;;:9;:23;;;;13382:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;13464:47;13485:6;13493:9;13504:6;13464:20;:47::i;:::-;13522:21;13546:9;:17;13556:6;13546:17;;;;;;;;;;;;;;;;13522:41;;13598:6;13581:13;:23;;13573:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;13693:6;13677:13;:22;;;;:::i;:::-;13657:9;:17;13667:6;13657:17;;;;;;;;;;;;;;;:42;;;;13733:6;13709:9;:20;13719:9;13709:20;;;;;;;;;;;;;;;;:30;;;;;;;:::i;:::-;;;;;;;;13772:9;13755:35;;13764:6;13755:35;;;13783:6;13755:35;;;;;;:::i;:::-;;;;;;;;13205:592;;;;:::o;16551:92::-;;;;:::o;7:139:1:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:262::-;;405:2;393:9;384:7;380:23;376:32;373:2;;;421:1;418;411:12;373:2;464:1;489:53;534:7;525:6;514:9;510:22;489:53;:::i;:::-;479:63;;435:117;363:196;;;;:::o;565:407::-;;;690:2;678:9;669:7;665:23;661:32;658:2;;;706:1;703;696:12;658:2;749:1;774:53;819:7;810:6;799:9;795:22;774:53;:::i;:::-;764:63;;720:117;876:2;902:53;947:7;938:6;927:9;923:22;902:53;:::i;:::-;892:63;;847:118;648:324;;;;;:::o;978:552::-;;;;1120:2;1108:9;1099:7;1095:23;1091:32;1088:2;;;1136:1;1133;1126:12;1088:2;1179:1;1204:53;1249:7;1240:6;1229:9;1225:22;1204:53;:::i;:::-;1194:63;;1150:117;1306:2;1332:53;1377:7;1368:6;1357:9;1353:22;1332:53;:::i;:::-;1322:63;;1277:118;1434:2;1460:53;1505:7;1496:6;1485:9;1481:22;1460:53;:::i;:::-;1450:63;;1405:118;1078:452;;;;;:::o;1536:407::-;;;1661:2;1649:9;1640:7;1636:23;1632:32;1629:2;;;1677:1;1674;1667:12;1629:2;1720:1;1745:53;1790:7;1781:6;1770:9;1766:22;1745:53;:::i;:::-;1735:63;;1691:117;1847:2;1873:53;1918:7;1909:6;1898:9;1894:22;1873:53;:::i;:::-;1863:63;;1818:118;1619:324;;;;;:::o;1949:109::-;2030:21;2045:5;2030:21;:::i;:::-;2025:3;2018:34;2008:50;;:::o;2064:364::-;;2180:39;2213:5;2180:39;:::i;:::-;2235:71;2299:6;2294:3;2235:71;:::i;:::-;2228:78;;2315:52;2360:6;2355:3;2348:4;2341:5;2337:16;2315:52;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2156:272;;;;;:::o;2434:367::-;;2597:67;2661:2;2656:3;2597:67;:::i;:::-;2590:74;;2694:34;2690:1;2685:3;2681:11;2674:55;2760:5;2755:2;2750:3;2746:12;2739:27;2792:2;2787:3;2783:12;2776:19;;2580:221;;;:::o;2807:366::-;;2970:67;3034:2;3029:3;2970:67;:::i;:::-;2963:74;;3067:34;3063:1;3058:3;3054:11;3047:55;3133:4;3128:2;3123:3;3119:12;3112:26;3164:2;3159:3;3155:12;3148:19;;2953:220;;;:::o;3179:370::-;;3342:67;3406:2;3401:3;3342:67;:::i;:::-;3335:74;;3439:34;3435:1;3430:3;3426:11;3419:55;3505:8;3500:2;3495:3;3491:12;3484:30;3540:2;3535:3;3531:12;3524:19;;3325:224;;;:::o;3555:372::-;;3718:67;3782:2;3777:3;3718:67;:::i;:::-;3711:74;;3815:34;3811:1;3806:3;3802:11;3795:55;3881:10;3876:2;3871:3;3867:12;3860:32;3918:2;3913:3;3909:12;3902:19;;3701:226;;;:::o;3933:369::-;;4096:67;4160:2;4155:3;4096:67;:::i;:::-;4089:74;;4193:34;4189:1;4184:3;4180:11;4173:55;4259:7;4254:2;4249:3;4245:12;4238:29;4293:2;4288:3;4284:12;4277:19;;4079:223;;;:::o;4308:368::-;;4471:67;4535:2;4530:3;4471:67;:::i;:::-;4464:74;;4568:34;4564:1;4559:3;4555:11;4548:55;4634:6;4629:2;4624:3;4620:12;4613:28;4667:2;4662:3;4658:12;4651:19;;4454:222;;;:::o;4682:369::-;;4845:67;4909:2;4904:3;4845:67;:::i;:::-;4838:74;;4942:34;4938:1;4933:3;4929:11;4922:55;5008:7;5003:2;4998:3;4994:12;4987:29;5042:2;5037:3;5033:12;5026:19;;4828:223;;;:::o;5057:118::-;5144:24;5162:5;5144:24;:::i;:::-;5139:3;5132:37;5122:53;;:::o;5181:112::-;5264:22;5280:5;5264:22;:::i;:::-;5259:3;5252:35;5242:51;;:::o;5299:210::-;;5424:2;5413:9;5409:18;5401:26;;5437:65;5499:1;5488:9;5484:17;5475:6;5437:65;:::i;:::-;5391:118;;;;:::o;5515:313::-;;5666:2;5655:9;5651:18;5643:26;;5715:9;5709:4;5705:20;5701:1;5690:9;5686:17;5679:47;5743:78;5816:4;5807:6;5743:78;:::i;:::-;5735:86;;5633:195;;;;:::o;5834:419::-;;6038:2;6027:9;6023:18;6015:26;;6087:9;6081:4;6077:20;6073:1;6062:9;6058:17;6051:47;6115:131;6241:4;6115:131;:::i;:::-;6107:139;;6005:248;;;:::o;6259:419::-;;6463:2;6452:9;6448:18;6440:26;;6512:9;6506:4;6502:20;6498:1;6487:9;6483:17;6476:47;6540:131;6666:4;6540:131;:::i;:::-;6532:139;;6430:248;;;:::o;6684:419::-;;6888:2;6877:9;6873:18;6865:26;;6937:9;6931:4;6927:20;6923:1;6912:9;6908:17;6901:47;6965:131;7091:4;6965:131;:::i;:::-;6957:139;;6855:248;;;:::o;7109:419::-;;7313:2;7302:9;7298:18;7290:26;;7362:9;7356:4;7352:20;7348:1;7337:9;7333:17;7326:47;7390:131;7516:4;7390:131;:::i;:::-;7382:139;;7280:248;;;:::o;7534:419::-;;7738:2;7727:9;7723:18;7715:26;;7787:9;7781:4;7777:20;7773:1;7762:9;7758:17;7751:47;7815:131;7941:4;7815:131;:::i;:::-;7807:139;;7705:248;;;:::o;7959:419::-;;8163:2;8152:9;8148:18;8140:26;;8212:9;8206:4;8202:20;8198:1;8187:9;8183:17;8176:47;8240:131;8366:4;8240:131;:::i;:::-;8232:139;;8130:248;;;:::o;8384:419::-;;8588:2;8577:9;8573:18;8565:26;;8637:9;8631:4;8627:20;8623:1;8612:9;8608:17;8601:47;8665:131;8791:4;8665:131;:::i;:::-;8657:139;;8555:248;;;:::o;8809:222::-;;8940:2;8929:9;8925:18;8917:26;;8953:71;9021:1;9010:9;9006:17;8997:6;8953:71;:::i;:::-;8907:124;;;;:::o;9037:214::-;;9164:2;9153:9;9149:18;9141:26;;9177:67;9241:1;9230:9;9226:17;9217:6;9177:67;:::i;:::-;9131:120;;;;:::o;9257:99::-;;9343:5;9337:12;9327:22;;9316:40;;;:::o;9362:169::-;;9480:6;9475:3;9468:19;9520:4;9515:3;9511:14;9496:29;;9458:73;;;;:::o;9537:305::-;;9596:20;9614:1;9596:20;:::i;:::-;9591:25;;9630:20;9648:1;9630:20;:::i;:::-;9625:25;;9784:1;9716:66;9712:74;9709:1;9706:81;9703:2;;;9790:18;;:::i;:::-;9703:2;9834:1;9831;9827:9;9820:16;;9581:261;;;;:::o;9848:191::-;;9908:20;9926:1;9908:20;:::i;:::-;9903:25;;9942:20;9960:1;9942:20;:::i;:::-;9937:25;;9981:1;9978;9975:8;9972:2;;;9986:18;;:::i;:::-;9972:2;10031:1;10028;10024:9;10016:17;;9893:146;;;;:::o;10045:96::-;;10111:24;10129:5;10111:24;:::i;:::-;10100:35;;10090:51;;;:::o;10147:90::-;;10224:5;10217:13;10210:21;10199:32;;10189:48;;;:::o;10243:126::-;;10320:42;10313:5;10309:54;10298:65;;10288:81;;;:::o;10375:77::-;;10441:5;10430:16;;10420:32;;;:::o;10458:86::-;;10533:4;10526:5;10522:16;10511:27;;10501:43;;;:::o;10550:307::-;10618:1;10628:113;10642:6;10639:1;10636:13;10628:113;;;10727:1;10722:3;10718:11;10712:18;10708:1;10703:3;10699:11;10692:39;10664:2;10661:1;10657:10;10652:15;;10628:113;;;10759:6;10756:1;10753:13;10750:2;;;10839:1;10830:6;10825:3;10821:16;10814:27;10750:2;10599:258;;;;:::o;10863:320::-;;10944:1;10938:4;10934:12;10924:22;;10991:1;10985:4;10981:12;11012:18;11002:2;;11068:4;11060:6;11056:17;11046:27;;11002:2;11130;11122:6;11119:14;11099:18;11096:38;11093:2;;;11149:18;;:::i;:::-;11093:2;10914:269;;;;:::o;11189:180::-;11237:77;11234:1;11227:88;11334:4;11331:1;11324:15;11358:4;11355:1;11348:15;11375:180;11423:77;11420:1;11413:88;11520:4;11517:1;11510:15;11544:4;11541:1;11534:15;11561:102;;11653:2;11649:7;11644:2;11637:5;11633:14;11629:28;11619:38;;11609:54;;;:::o;11669:122::-;11742:24;11760:5;11742:24;:::i;:::-;11735:5;11732:35;11722:2;;11781:1;11778;11771:12;11722:2;11712:79;:::o;11797:122::-;11870:24;11888:5;11870:24;:::i;:::-;11863:5;11860:35;11850:2;;11909:1;11906;11899:12;11850:2;11840:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "999200",
								"executionCost": "1041",
								"totalCost": "1000241"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1563",
								"decimals()": "432",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1182",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"__ERC20_init(string memory,string memory)": "infinite",
								"__ERC20_init_unchained(string memory,string memory)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 7083,
									"end": 16676,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 7083,
									"end": 16676,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 16676,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7083,
									"end": 16676,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 7083,
									"end": 16676,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7083,
									"end": 16676,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 7083,
									"end": 16676,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7083,
									"end": 16676,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7083,
									"end": 16676,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7083,
									"end": 16676,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7083,
									"end": 16676,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 7083,
									"end": 16676,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7083,
									"end": 16676,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7083,
									"end": 16676,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7083,
									"end": 16676,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7083,
									"end": 16676,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7083,
									"end": 16676,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7083,
									"end": 16676,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7083,
									"end": 16676,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 7083,
									"end": 16676,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7083,
									"end": 16676,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220556daa47777c9853646481cc91576f5e6e1d99dbfb056c6359bfce2efb0921a764736f6c63430008000033",
									".code": [
										{
											"begin": 7083,
											"end": 16676,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 16676,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8122,
											"end": 8220,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8122,
											"end": 8220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8122,
											"end": 8220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 8122,
											"end": 8220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 8122,
											"end": 8220,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8122,
											"end": 8220,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 8122,
											"end": 8220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8122,
											"end": 8220,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8122,
											"end": 8220,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8122,
											"end": 8220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 8122,
											"end": 8220,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8122,
											"end": 8220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8122,
											"end": 8220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 8122,
											"end": 8220,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8122,
											"end": 8220,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 8122,
											"end": 8220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8122,
											"end": 8220,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8122,
											"end": 8220,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8122,
											"end": 8220,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8122,
											"end": 8220,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8122,
											"end": 8220,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8122,
											"end": 8220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8122,
											"end": 8220,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 10219,
											"end": 10385,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10219,
											"end": 10385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10219,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 10219,
											"end": 10385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10219,
											"end": 10385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10219,
											"end": 10385,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10219,
											"end": 10385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10219,
											"end": 10385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10219,
											"end": 10385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10219,
											"end": 10385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10219,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10219,
											"end": 10385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10219,
											"end": 10385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10219,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 10219,
											"end": 10385,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10219,
											"end": 10385,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10219,
											"end": 10385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10219,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 10219,
											"end": 10385,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10219,
											"end": 10385,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 10219,
											"end": 10385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10219,
											"end": 10385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10219,
											"end": 10385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10219,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 10219,
											"end": 10385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10219,
											"end": 10385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10219,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 10219,
											"end": 10385,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10219,
											"end": 10385,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 10219,
											"end": 10385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10219,
											"end": 10385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10219,
											"end": 10385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10219,
											"end": 10385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10219,
											"end": 10385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10219,
											"end": 10385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10219,
											"end": 10385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10219,
											"end": 10385,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9210,
											"end": 9316,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 9210,
											"end": 9316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9210,
											"end": 9316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 9210,
											"end": 9316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 9210,
											"end": 9316,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9210,
											"end": 9316,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 9210,
											"end": 9316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9210,
											"end": 9316,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9210,
											"end": 9316,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9210,
											"end": 9316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 9210,
											"end": 9316,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9210,
											"end": 9316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9210,
											"end": 9316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 9210,
											"end": 9316,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9210,
											"end": 9316,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 9210,
											"end": 9316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9210,
											"end": 9316,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9210,
											"end": 9316,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9210,
											"end": 9316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9210,
											"end": 9316,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9210,
											"end": 9316,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9210,
											"end": 9316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9210,
											"end": 9316,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 10852,
											"end": 11266,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 10852,
											"end": 11266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10852,
											"end": 11266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 10852,
											"end": 11266,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10852,
											"end": 11266,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10852,
											"end": 11266,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 10852,
											"end": 11266,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10852,
											"end": 11266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10852,
											"end": 11266,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10852,
											"end": 11266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10852,
											"end": 11266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 10852,
											"end": 11266,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10852,
											"end": 11266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10852,
											"end": 11266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 10852,
											"end": 11266,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10852,
											"end": 11266,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 10852,
											"end": 11266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10852,
											"end": 11266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 10852,
											"end": 11266,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10852,
											"end": 11266,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 10852,
											"end": 11266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10852,
											"end": 11266,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10852,
											"end": 11266,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10852,
											"end": 11266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 10852,
											"end": 11266,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10852,
											"end": 11266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10852,
											"end": 11266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 10852,
											"end": 11266,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10852,
											"end": 11266,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 10852,
											"end": 11266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10852,
											"end": 11266,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10852,
											"end": 11266,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10852,
											"end": 11266,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10852,
											"end": 11266,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10852,
											"end": 11266,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10852,
											"end": 11266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10852,
											"end": 11266,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9059,
											"end": 9150,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 9059,
											"end": 9150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9059,
											"end": 9150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 9059,
											"end": 9150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 9059,
											"end": 9150,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9059,
											"end": 9150,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 9059,
											"end": 9150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9059,
											"end": 9150,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9059,
											"end": 9150,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9059,
											"end": 9150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 9059,
											"end": 9150,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9059,
											"end": 9150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9059,
											"end": 9150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 9059,
											"end": 9150,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9059,
											"end": 9150,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 9059,
											"end": 9150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9059,
											"end": 9150,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9059,
											"end": 9150,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9059,
											"end": 9150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9059,
											"end": 9150,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9059,
											"end": 9150,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9059,
											"end": 9150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9059,
											"end": 9150,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 11661,
											"end": 11873,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 11661,
											"end": 11873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11661,
											"end": 11873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 11661,
											"end": 11873,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11661,
											"end": 11873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11661,
											"end": 11873,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 11661,
											"end": 11873,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11661,
											"end": 11873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11661,
											"end": 11873,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11661,
											"end": 11873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11661,
											"end": 11873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 11661,
											"end": 11873,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11661,
											"end": 11873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11661,
											"end": 11873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 11661,
											"end": 11873,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11661,
											"end": 11873,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 11661,
											"end": 11873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11661,
											"end": 11873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11661,
											"end": 11873,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11661,
											"end": 11873,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 11661,
											"end": 11873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11661,
											"end": 11873,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11661,
											"end": 11873,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11661,
											"end": 11873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 11661,
											"end": 11873,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11661,
											"end": 11873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11661,
											"end": 11873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 11661,
											"end": 11873,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11661,
											"end": 11873,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 11661,
											"end": 11873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11661,
											"end": 11873,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11661,
											"end": 11873,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11661,
											"end": 11873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11661,
											"end": 11873,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11661,
											"end": 11873,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11661,
											"end": 11873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11661,
											"end": 11873,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9374,
											"end": 9499,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 9374,
											"end": 9499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9374,
											"end": 9499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 9374,
											"end": 9499,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9374,
											"end": 9499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9374,
											"end": 9499,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9374,
											"end": 9499,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9374,
											"end": 9499,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9374,
											"end": 9499,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9374,
											"end": 9499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9374,
											"end": 9499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 9374,
											"end": 9499,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9374,
											"end": 9499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9374,
											"end": 9499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 9374,
											"end": 9499,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9374,
											"end": 9499,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 9374,
											"end": 9499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9374,
											"end": 9499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 9374,
											"end": 9499,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9374,
											"end": 9499,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 9374,
											"end": 9499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9374,
											"end": 9499,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9374,
											"end": 9499,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9374,
											"end": 9499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 9374,
											"end": 9499,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9374,
											"end": 9499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9374,
											"end": 9499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 9374,
											"end": 9499,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9374,
											"end": 9499,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 9374,
											"end": 9499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9374,
											"end": 9499,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9374,
											"end": 9499,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9374,
											"end": 9499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9374,
											"end": 9499,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9374,
											"end": 9499,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9374,
											"end": 9499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9374,
											"end": 9499,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8333,
											"end": 8435,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 8333,
											"end": 8435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8333,
											"end": 8435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 8333,
											"end": 8435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 8333,
											"end": 8435,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8333,
											"end": 8435,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 8333,
											"end": 8435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8333,
											"end": 8435,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8333,
											"end": 8435,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8333,
											"end": 8435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 8333,
											"end": 8435,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8333,
											"end": 8435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8333,
											"end": 8435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 8333,
											"end": 8435,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8333,
											"end": 8435,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 8333,
											"end": 8435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8333,
											"end": 8435,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8333,
											"end": 8435,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8333,
											"end": 8435,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8333,
											"end": 8435,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8333,
											"end": 8435,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8333,
											"end": 8435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8333,
											"end": 8435,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 12360,
											"end": 12731,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 12360,
											"end": 12731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12360,
											"end": 12731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 12360,
											"end": 12731,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12360,
											"end": 12731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12360,
											"end": 12731,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 12360,
											"end": 12731,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12360,
											"end": 12731,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12360,
											"end": 12731,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12360,
											"end": 12731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12360,
											"end": 12731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 12360,
											"end": 12731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12360,
											"end": 12731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12360,
											"end": 12731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 12360,
											"end": 12731,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12360,
											"end": 12731,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 12360,
											"end": 12731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12360,
											"end": 12731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 12360,
											"end": 12731,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12360,
											"end": 12731,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 12360,
											"end": 12731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12360,
											"end": 12731,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12360,
											"end": 12731,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12360,
											"end": 12731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 12360,
											"end": 12731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12360,
											"end": 12731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12360,
											"end": 12731,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 12360,
											"end": 12731,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12360,
											"end": 12731,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 12360,
											"end": 12731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12360,
											"end": 12731,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12360,
											"end": 12731,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12360,
											"end": 12731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12360,
											"end": 12731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12360,
											"end": 12731,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12360,
											"end": 12731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12360,
											"end": 12731,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9702,
											"end": 9874,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 9702,
											"end": 9874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9702,
											"end": 9874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 9702,
											"end": 9874,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9702,
											"end": 9874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9702,
											"end": 9874,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9702,
											"end": 9874,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9702,
											"end": 9874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9702,
											"end": 9874,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9702,
											"end": 9874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9702,
											"end": 9874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 9702,
											"end": 9874,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9702,
											"end": 9874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9702,
											"end": 9874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 9702,
											"end": 9874,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9702,
											"end": 9874,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 9702,
											"end": 9874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9702,
											"end": 9874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 9702,
											"end": 9874,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9702,
											"end": 9874,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 9702,
											"end": 9874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9702,
											"end": 9874,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9702,
											"end": 9874,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9702,
											"end": 9874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 9702,
											"end": 9874,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9702,
											"end": 9874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9702,
											"end": 9874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 9702,
											"end": 9874,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9702,
											"end": 9874,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 9702,
											"end": 9874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9702,
											"end": 9874,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9702,
											"end": 9874,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9702,
											"end": 9874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9702,
											"end": 9874,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9702,
											"end": 9874,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9702,
											"end": 9874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9702,
											"end": 9874,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9932,
											"end": 10081,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 9932,
											"end": 10081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9932,
											"end": 10081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 9932,
											"end": 10081,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9932,
											"end": 10081,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9932,
											"end": 10081,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9932,
											"end": 10081,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9932,
											"end": 10081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9932,
											"end": 10081,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9932,
											"end": 10081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9932,
											"end": 10081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 9932,
											"end": 10081,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9932,
											"end": 10081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9932,
											"end": 10081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 9932,
											"end": 10081,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9932,
											"end": 10081,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 9932,
											"end": 10081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9932,
											"end": 10081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 9932,
											"end": 10081,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9932,
											"end": 10081,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 9932,
											"end": 10081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9932,
											"end": 10081,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9932,
											"end": 10081,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9932,
											"end": 10081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 9932,
											"end": 10081,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9932,
											"end": 10081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9932,
											"end": 10081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 9932,
											"end": 10081,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9932,
											"end": 10081,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 9932,
											"end": 10081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9932,
											"end": 10081,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9932,
											"end": 10081,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9932,
											"end": 10081,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9932,
											"end": 10081,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9932,
											"end": 10081,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9932,
											"end": 10081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9932,
											"end": 10081,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8122,
											"end": 8220,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 8122,
											"end": 8220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8176,
											"end": 8189,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8208,
											"end": 8213,
											"name": "PUSH",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8201,
											"end": 8213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8122,
											"end": 8220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8122,
											"end": 8220,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10219,
											"end": 10385,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 10219,
											"end": 10385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10302,
											"end": 10306,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10318,
											"end": 10357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 10327,
											"end": 10339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 10327,
											"end": 10337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 10327,
											"end": 10339,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10327,
											"end": 10339,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 10327,
											"end": 10339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10341,
											"end": 10348,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10350,
											"end": 10356,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10318,
											"end": 10326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 10318,
											"end": 10357,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10318,
											"end": 10357,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 10318,
											"end": 10357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10374,
											"end": 10378,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 10367,
											"end": 10378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10367,
											"end": 10378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10219,
											"end": 10385,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10219,
											"end": 10385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10219,
											"end": 10385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10219,
											"end": 10385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10219,
											"end": 10385,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9210,
											"end": 9316,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 9210,
											"end": 9316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9271,
											"end": 9278,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9297,
											"end": 9309,
											"name": "PUSH",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 9297,
											"end": 9309,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9290,
											"end": 9309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9290,
											"end": 9309,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9210,
											"end": 9316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9210,
											"end": 9316,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10852,
											"end": 11266,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 10852,
											"end": 11266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10958,
											"end": 10962,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10974,
											"end": 11010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 10984,
											"end": 10990,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10992,
											"end": 11001,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11003,
											"end": 11009,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10974,
											"end": 10983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 10974,
											"end": 11010,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10974,
											"end": 11010,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 10974,
											"end": 11010,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11021,
											"end": 11045,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11048,
											"end": 11059,
											"name": "PUSH",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 11048,
											"end": 11067,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11060,
											"end": 11066,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 11048,
											"end": 11067,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11048,
											"end": 11067,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11048,
											"end": 11067,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11048,
											"end": 11067,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11048,
											"end": 11067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11048,
											"end": 11067,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11048,
											"end": 11067,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11048,
											"end": 11067,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11048,
											"end": 11067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11048,
											"end": 11067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11048,
											"end": 11067,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11048,
											"end": 11067,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11048,
											"end": 11067,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11048,
											"end": 11067,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11048,
											"end": 11067,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11048,
											"end": 11081,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11068,
											"end": 11080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 11068,
											"end": 11078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 11068,
											"end": 11080,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11068,
											"end": 11080,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 11068,
											"end": 11080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11048,
											"end": 11081,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11048,
											"end": 11081,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11048,
											"end": 11081,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11048,
											"end": 11081,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11048,
											"end": 11081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11048,
											"end": 11081,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11048,
											"end": 11081,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11048,
											"end": 11081,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11048,
											"end": 11081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11048,
											"end": 11081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11048,
											"end": 11081,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11048,
											"end": 11081,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11048,
											"end": 11081,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11048,
											"end": 11081,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11048,
											"end": 11081,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11048,
											"end": 11081,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11021,
											"end": 11081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11021,
											"end": 11081,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11119,
											"end": 11125,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11099,
											"end": 11115,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11099,
											"end": 11125,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11099,
											"end": 11125,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11091,
											"end": 11170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 11091,
											"end": 11170,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11091,
											"end": 11170,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11091,
											"end": 11170,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11091,
											"end": 11170,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11091,
											"end": 11170,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11091,
											"end": 11170,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11091,
											"end": 11170,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11091,
											"end": 11170,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11091,
											"end": 11170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 11091,
											"end": 11170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11091,
											"end": 11170,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 11091,
											"end": 11170,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11091,
											"end": 11170,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 11091,
											"end": 11170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11091,
											"end": 11170,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11091,
											"end": 11170,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11091,
											"end": 11170,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11091,
											"end": 11170,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11091,
											"end": 11170,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11091,
											"end": 11170,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11091,
											"end": 11170,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11091,
											"end": 11170,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 11091,
											"end": 11170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11180,
											"end": 11237,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 11189,
											"end": 11195,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11197,
											"end": 11209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 11197,
											"end": 11207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 11197,
											"end": 11209,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11197,
											"end": 11209,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 11197,
											"end": 11209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11230,
											"end": 11236,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11211,
											"end": 11227,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11211,
											"end": 11236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 11211,
											"end": 11236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11211,
											"end": 11236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11211,
											"end": 11236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 11211,
											"end": 11236,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11211,
											"end": 11236,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 11211,
											"end": 11236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11180,
											"end": 11188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 11180,
											"end": 11237,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11180,
											"end": 11237,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 11180,
											"end": 11237,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11255,
											"end": 11259,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11248,
											"end": 11259,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11248,
											"end": 11259,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11248,
											"end": 11259,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10852,
											"end": 11266,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10852,
											"end": 11266,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10852,
											"end": 11266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10852,
											"end": 11266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10852,
											"end": 11266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10852,
											"end": 11266,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9059,
											"end": 9150,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 9059,
											"end": 9150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9117,
											"end": 9122,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9141,
											"end": 9143,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 9134,
											"end": 9143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9134,
											"end": 9143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9059,
											"end": 9150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9059,
											"end": 9150,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11661,
											"end": 11873,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11661,
											"end": 11873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11749,
											"end": 11753,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11765,
											"end": 11845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 11774,
											"end": 11786,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 11774,
											"end": 11784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 11774,
											"end": 11786,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11774,
											"end": 11786,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 11774,
											"end": 11786,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11788,
											"end": 11795,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11834,
											"end": 11844,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11797,
											"end": 11808,
											"name": "PUSH",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 11797,
											"end": 11822,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11809,
											"end": 11821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 11809,
											"end": 11819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 11809,
											"end": 11821,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11809,
											"end": 11821,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 11809,
											"end": 11821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11797,
											"end": 11822,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11797,
											"end": 11822,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11797,
											"end": 11822,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11797,
											"end": 11822,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11797,
											"end": 11822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11797,
											"end": 11822,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11797,
											"end": 11822,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11797,
											"end": 11822,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11797,
											"end": 11822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11797,
											"end": 11822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11797,
											"end": 11822,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11797,
											"end": 11822,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11797,
											"end": 11822,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11797,
											"end": 11822,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11797,
											"end": 11822,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11797,
											"end": 11831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11823,
											"end": 11830,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 11797,
											"end": 11831,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11797,
											"end": 11831,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11797,
											"end": 11831,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11797,
											"end": 11831,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11797,
											"end": 11831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11797,
											"end": 11831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11797,
											"end": 11831,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11797,
											"end": 11831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11797,
											"end": 11831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11797,
											"end": 11831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11797,
											"end": 11831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11797,
											"end": 11831,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11797,
											"end": 11831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11797,
											"end": 11831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11797,
											"end": 11831,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11797,
											"end": 11831,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11797,
											"end": 11844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 11797,
											"end": 11844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11797,
											"end": 11844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11797,
											"end": 11844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 11797,
											"end": 11844,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11797,
											"end": 11844,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 11797,
											"end": 11844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11765,
											"end": 11773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 11765,
											"end": 11845,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11765,
											"end": 11845,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 11765,
											"end": 11845,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11862,
											"end": 11866,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11855,
											"end": 11866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11855,
											"end": 11866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11661,
											"end": 11873,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11661,
											"end": 11873,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11661,
											"end": 11873,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11661,
											"end": 11873,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11661,
											"end": 11873,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9374,
											"end": 9499,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 9374,
											"end": 9499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9448,
											"end": 9455,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9474,
											"end": 9483,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 9474,
											"end": 9492,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9484,
											"end": 9491,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9474,
											"end": 9492,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9474,
											"end": 9492,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9474,
											"end": 9492,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9474,
											"end": 9492,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9474,
											"end": 9492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9474,
											"end": 9492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9474,
											"end": 9492,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9474,
											"end": 9492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9474,
											"end": 9492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9474,
											"end": 9492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9474,
											"end": 9492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9474,
											"end": 9492,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9474,
											"end": 9492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9474,
											"end": 9492,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9474,
											"end": 9492,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9474,
											"end": 9492,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 9492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9467,
											"end": 9492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9374,
											"end": 9499,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9374,
											"end": 9499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9374,
											"end": 9499,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9374,
											"end": 9499,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8333,
											"end": 8435,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 8333,
											"end": 8435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8389,
											"end": 8402,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8421,
											"end": 8428,
											"name": "PUSH",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8414,
											"end": 8428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8333,
											"end": 8435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8333,
											"end": 8435,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12360,
											"end": 12731,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 12360,
											"end": 12731,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12453,
											"end": 12457,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12469,
											"end": 12493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12496,
											"end": 12507,
											"name": "PUSH",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 12496,
											"end": 12521,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12508,
											"end": 12520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 12508,
											"end": 12518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 12508,
											"end": 12520,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12508,
											"end": 12520,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 12508,
											"end": 12520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12496,
											"end": 12521,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12496,
											"end": 12521,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12496,
											"end": 12521,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12496,
											"end": 12521,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12496,
											"end": 12521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12496,
											"end": 12521,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12496,
											"end": 12521,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12496,
											"end": 12521,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12496,
											"end": 12521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12496,
											"end": 12521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12496,
											"end": 12521,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12496,
											"end": 12521,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12496,
											"end": 12521,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12496,
											"end": 12521,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12496,
											"end": 12521,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12496,
											"end": 12530,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12522,
											"end": 12529,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12496,
											"end": 12530,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12496,
											"end": 12530,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12496,
											"end": 12530,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12496,
											"end": 12530,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12496,
											"end": 12530,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12496,
											"end": 12530,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12496,
											"end": 12530,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12496,
											"end": 12530,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12496,
											"end": 12530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12496,
											"end": 12530,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12496,
											"end": 12530,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12496,
											"end": 12530,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12496,
											"end": 12530,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12496,
											"end": 12530,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12496,
											"end": 12530,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12496,
											"end": 12530,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12469,
											"end": 12530,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12469,
											"end": 12530,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12568,
											"end": 12583,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12548,
											"end": 12564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12548,
											"end": 12583,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12548,
											"end": 12583,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12540,
											"end": 12625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 12540,
											"end": 12625,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12540,
											"end": 12625,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12540,
											"end": 12625,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12540,
											"end": 12625,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12540,
											"end": 12625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12540,
											"end": 12625,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12540,
											"end": 12625,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12540,
											"end": 12625,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12540,
											"end": 12625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 12540,
											"end": 12625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12540,
											"end": 12625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 12540,
											"end": 12625,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12540,
											"end": 12625,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 12540,
											"end": 12625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12540,
											"end": 12625,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12540,
											"end": 12625,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12540,
											"end": 12625,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12540,
											"end": 12625,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12540,
											"end": 12625,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12540,
											"end": 12625,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12540,
											"end": 12625,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12540,
											"end": 12625,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 12540,
											"end": 12625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12635,
											"end": 12702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 12644,
											"end": 12656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 12644,
											"end": 12654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 12644,
											"end": 12656,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12644,
											"end": 12656,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 12644,
											"end": 12656,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12658,
											"end": 12665,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12686,
											"end": 12701,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 12667,
											"end": 12683,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12667,
											"end": 12701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 12667,
											"end": 12701,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12667,
											"end": 12701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12667,
											"end": 12701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 12667,
											"end": 12701,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12667,
											"end": 12701,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 12667,
											"end": 12701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12635,
											"end": 12643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 12635,
											"end": 12702,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12635,
											"end": 12702,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 12635,
											"end": 12702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12720,
											"end": 12724,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12713,
											"end": 12724,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12713,
											"end": 12724,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12713,
											"end": 12724,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12360,
											"end": 12731,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12360,
											"end": 12731,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12360,
											"end": 12731,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12360,
											"end": 12731,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12360,
											"end": 12731,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9702,
											"end": 9874,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 9702,
											"end": 9874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9788,
											"end": 9792,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9804,
											"end": 9846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 9814,
											"end": 9826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 9814,
											"end": 9824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 9814,
											"end": 9826,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9814,
											"end": 9826,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 9814,
											"end": 9826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9828,
											"end": 9837,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9839,
											"end": 9845,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9804,
											"end": 9813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 9804,
											"end": 9846,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9804,
											"end": 9846,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 9804,
											"end": 9846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9863,
											"end": 9867,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 9856,
											"end": 9867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9856,
											"end": 9867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9702,
											"end": 9874,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9702,
											"end": 9874,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9702,
											"end": 9874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9702,
											"end": 9874,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9702,
											"end": 9874,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9932,
											"end": 10081,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 9932,
											"end": 10081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10021,
											"end": 10028,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10047,
											"end": 10058,
											"name": "PUSH",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 10047,
											"end": 10065,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10059,
											"end": 10064,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10047,
											"end": 10065,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10047,
											"end": 10065,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10047,
											"end": 10065,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10047,
											"end": 10065,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10047,
											"end": 10065,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10047,
											"end": 10065,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10047,
											"end": 10065,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10047,
											"end": 10065,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10047,
											"end": 10065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10047,
											"end": 10065,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10047,
											"end": 10065,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10047,
											"end": 10065,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10047,
											"end": 10065,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10047,
											"end": 10065,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10047,
											"end": 10065,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10047,
											"end": 10074,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10066,
											"end": 10073,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10047,
											"end": 10074,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10047,
											"end": 10074,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10047,
											"end": 10074,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10047,
											"end": 10074,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10047,
											"end": 10074,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10047,
											"end": 10074,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10047,
											"end": 10074,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10047,
											"end": 10074,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10047,
											"end": 10074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10047,
											"end": 10074,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10047,
											"end": 10074,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10047,
											"end": 10074,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10047,
											"end": 10074,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10047,
											"end": 10074,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10047,
											"end": 10074,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10047,
											"end": 10074,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10040,
											"end": 10074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10040,
											"end": 10074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9932,
											"end": 10081,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9932,
											"end": 10081,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9932,
											"end": 10081,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9932,
											"end": 10081,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9932,
											"end": 10081,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5120,
											"end": 5216,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5120,
											"end": 5216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5173,
											"end": 5180,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5199,
											"end": 5209,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5192,
											"end": 5209,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5120,
											"end": 5216,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5120,
											"end": 5216,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15624,
											"end": 15964,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 15624,
											"end": 15964,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15742,
											"end": 15743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15725,
											"end": 15744,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15725,
											"end": 15744,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15725,
											"end": 15730,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15725,
											"end": 15744,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15725,
											"end": 15744,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15725,
											"end": 15744,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15725,
											"end": 15744,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15717,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 15717,
											"end": 15785,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15717,
											"end": 15785,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15717,
											"end": 15785,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15717,
											"end": 15785,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15717,
											"end": 15785,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15717,
											"end": 15785,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15717,
											"end": 15785,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15717,
											"end": 15785,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15717,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 15717,
											"end": 15785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15717,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 15717,
											"end": 15785,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15717,
											"end": 15785,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 15717,
											"end": 15785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15717,
											"end": 15785,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15717,
											"end": 15785,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15717,
											"end": 15785,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15717,
											"end": 15785,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15717,
											"end": 15785,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15717,
											"end": 15785,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15717,
											"end": 15785,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15717,
											"end": 15785,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 15717,
											"end": 15785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15822,
											"end": 15823,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15803,
											"end": 15824,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15803,
											"end": 15824,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15803,
											"end": 15810,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15803,
											"end": 15824,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15803,
											"end": 15824,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15803,
											"end": 15824,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15803,
											"end": 15824,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15795,
											"end": 15863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 15795,
											"end": 15863,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15795,
											"end": 15863,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15795,
											"end": 15863,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15795,
											"end": 15863,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15795,
											"end": 15863,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15795,
											"end": 15863,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15795,
											"end": 15863,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15795,
											"end": 15863,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15795,
											"end": 15863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 15795,
											"end": 15863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15795,
											"end": 15863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 15795,
											"end": 15863,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15795,
											"end": 15863,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 15795,
											"end": 15863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15795,
											"end": 15863,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15795,
											"end": 15863,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15795,
											"end": 15863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15795,
											"end": 15863,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15795,
											"end": 15863,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15795,
											"end": 15863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15795,
											"end": 15863,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15795,
											"end": 15863,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 15795,
											"end": 15863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15904,
											"end": 15910,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15874,
											"end": 15885,
											"name": "PUSH",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 15874,
											"end": 15892,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15886,
											"end": 15891,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15874,
											"end": 15892,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15874,
											"end": 15892,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15874,
											"end": 15892,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15874,
											"end": 15892,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15874,
											"end": 15892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15874,
											"end": 15892,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15874,
											"end": 15892,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15874,
											"end": 15892,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15874,
											"end": 15892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15874,
											"end": 15892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15874,
											"end": 15892,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15874,
											"end": 15892,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15874,
											"end": 15892,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15874,
											"end": 15892,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15874,
											"end": 15892,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15874,
											"end": 15901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15893,
											"end": 15900,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15874,
											"end": 15901,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15874,
											"end": 15901,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15874,
											"end": 15901,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15874,
											"end": 15901,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15874,
											"end": 15901,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15874,
											"end": 15901,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15874,
											"end": 15901,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15874,
											"end": 15901,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15874,
											"end": 15901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15874,
											"end": 15901,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15874,
											"end": 15901,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15874,
											"end": 15901,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15874,
											"end": 15901,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15874,
											"end": 15901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15874,
											"end": 15901,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15874,
											"end": 15910,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15874,
											"end": 15910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15874,
											"end": 15910,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15874,
											"end": 15910,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15941,
											"end": 15948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15925,
											"end": 15957,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15925,
											"end": 15957,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15934,
											"end": 15939,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15925,
											"end": 15957,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15925,
											"end": 15957,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15925,
											"end": 15957,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15950,
											"end": 15956,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15925,
											"end": 15957,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15925,
											"end": 15957,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15925,
											"end": 15957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 15925,
											"end": 15957,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15925,
											"end": 15957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15925,
											"end": 15957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 15925,
											"end": 15957,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15925,
											"end": 15957,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 15925,
											"end": 15957,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15925,
											"end": 15957,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15925,
											"end": 15957,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15925,
											"end": 15957,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15925,
											"end": 15957,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15925,
											"end": 15957,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15925,
											"end": 15957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15925,
											"end": 15957,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 15624,
											"end": 15964,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15624,
											"end": 15964,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15624,
											"end": 15964,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15624,
											"end": 15964,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13205,
											"end": 13797,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 13205,
											"end": 13797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13328,
											"end": 13329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13310,
											"end": 13330,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13310,
											"end": 13330,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13310,
											"end": 13316,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13310,
											"end": 13330,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13310,
											"end": 13330,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13310,
											"end": 13330,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13310,
											"end": 13330,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13302,
											"end": 13372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 13302,
											"end": 13372,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13302,
											"end": 13372,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13302,
											"end": 13372,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13302,
											"end": 13372,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13302,
											"end": 13372,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13302,
											"end": 13372,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13302,
											"end": 13372,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13302,
											"end": 13372,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13302,
											"end": 13372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 13302,
											"end": 13372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13302,
											"end": 13372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 13302,
											"end": 13372,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13302,
											"end": 13372,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 13302,
											"end": 13372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13302,
											"end": 13372,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13302,
											"end": 13372,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13302,
											"end": 13372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13302,
											"end": 13372,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13302,
											"end": 13372,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13302,
											"end": 13372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13302,
											"end": 13372,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13302,
											"end": 13372,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 13302,
											"end": 13372,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13411,
											"end": 13412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13390,
											"end": 13413,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13390,
											"end": 13413,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13390,
											"end": 13399,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13390,
											"end": 13413,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13390,
											"end": 13413,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13390,
											"end": 13413,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 13390,
											"end": 13413,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13382,
											"end": 13453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 13382,
											"end": 13453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13382,
											"end": 13453,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13382,
											"end": 13453,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13382,
											"end": 13453,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13382,
											"end": 13453,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13382,
											"end": 13453,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13382,
											"end": 13453,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13382,
											"end": 13453,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13382,
											"end": 13453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 13382,
											"end": 13453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13382,
											"end": 13453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 13382,
											"end": 13453,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13382,
											"end": 13453,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 13382,
											"end": 13453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13382,
											"end": 13453,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13382,
											"end": 13453,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13382,
											"end": 13453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13382,
											"end": 13453,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13382,
											"end": 13453,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13382,
											"end": 13453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13382,
											"end": 13453,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13382,
											"end": 13453,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 13382,
											"end": 13453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13464,
											"end": 13511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 13485,
											"end": 13491,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13493,
											"end": 13502,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13504,
											"end": 13510,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13464,
											"end": 13484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 13464,
											"end": 13511,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13464,
											"end": 13511,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 13464,
											"end": 13511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13522,
											"end": 13543,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13546,
											"end": 13555,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 13546,
											"end": 13563,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13556,
											"end": 13562,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13546,
											"end": 13563,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13546,
											"end": 13563,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13546,
											"end": 13563,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13546,
											"end": 13563,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13546,
											"end": 13563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13546,
											"end": 13563,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13546,
											"end": 13563,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13546,
											"end": 13563,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13546,
											"end": 13563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13546,
											"end": 13563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13546,
											"end": 13563,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13546,
											"end": 13563,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13546,
											"end": 13563,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13546,
											"end": 13563,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13546,
											"end": 13563,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13546,
											"end": 13563,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13522,
											"end": 13563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13522,
											"end": 13563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13598,
											"end": 13604,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13581,
											"end": 13594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13581,
											"end": 13604,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13581,
											"end": 13604,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13573,
											"end": 13647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 13573,
											"end": 13647,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13573,
											"end": 13647,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13573,
											"end": 13647,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13573,
											"end": 13647,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13573,
											"end": 13647,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13573,
											"end": 13647,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13573,
											"end": 13647,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13573,
											"end": 13647,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13573,
											"end": 13647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 13573,
											"end": 13647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13573,
											"end": 13647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 13573,
											"end": 13647,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13573,
											"end": 13647,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 13573,
											"end": 13647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13573,
											"end": 13647,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13573,
											"end": 13647,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13573,
											"end": 13647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13573,
											"end": 13647,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13573,
											"end": 13647,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13573,
											"end": 13647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13573,
											"end": 13647,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13573,
											"end": 13647,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 13573,
											"end": 13647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13693,
											"end": 13699,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13677,
											"end": 13690,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13677,
											"end": 13699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 13677,
											"end": 13699,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13677,
											"end": 13699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13677,
											"end": 13699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 13677,
											"end": 13699,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13677,
											"end": 13699,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 13677,
											"end": 13699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13657,
											"end": 13666,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 13657,
											"end": 13674,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13667,
											"end": 13673,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13657,
											"end": 13674,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13657,
											"end": 13674,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13657,
											"end": 13674,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13657,
											"end": 13674,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13657,
											"end": 13674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13657,
											"end": 13674,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13657,
											"end": 13674,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13657,
											"end": 13674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13657,
											"end": 13674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13657,
											"end": 13674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13657,
											"end": 13674,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13657,
											"end": 13674,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13657,
											"end": 13674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13657,
											"end": 13674,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13657,
											"end": 13674,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13657,
											"end": 13699,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13657,
											"end": 13699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13657,
											"end": 13699,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13657,
											"end": 13699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13733,
											"end": 13739,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13709,
											"end": 13718,
											"name": "PUSH",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 13709,
											"end": 13729,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13719,
											"end": 13728,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13709,
											"end": 13729,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13709,
											"end": 13729,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13709,
											"end": 13729,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13709,
											"end": 13729,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13709,
											"end": 13729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13709,
											"end": 13729,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13709,
											"end": 13729,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13709,
											"end": 13729,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13709,
											"end": 13729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13709,
											"end": 13729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13709,
											"end": 13729,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13709,
											"end": 13729,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13709,
											"end": 13729,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13709,
											"end": 13729,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13709,
											"end": 13729,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13709,
											"end": 13729,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13709,
											"end": 13739,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13709,
											"end": 13739,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13709,
											"end": 13739,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13709,
											"end": 13739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 13709,
											"end": 13739,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13709,
											"end": 13739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13709,
											"end": 13739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 13709,
											"end": 13739,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13709,
											"end": 13739,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 13709,
											"end": 13739,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13709,
											"end": 13739,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13709,
											"end": 13739,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13709,
											"end": 13739,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13709,
											"end": 13739,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13709,
											"end": 13739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13709,
											"end": 13739,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13709,
											"end": 13739,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13772,
											"end": 13781,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13755,
											"end": 13790,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13755,
											"end": 13790,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13764,
											"end": 13770,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13755,
											"end": 13790,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13755,
											"end": 13790,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13755,
											"end": 13790,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 13783,
											"end": 13789,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13755,
											"end": 13790,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13755,
											"end": 13790,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13755,
											"end": 13790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 13755,
											"end": 13790,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13755,
											"end": 13790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13755,
											"end": 13790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 13755,
											"end": 13790,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13755,
											"end": 13790,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 13755,
											"end": 13790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13755,
											"end": 13790,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13755,
											"end": 13790,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13755,
											"end": 13790,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13755,
											"end": 13790,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13755,
											"end": 13790,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13755,
											"end": 13790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13755,
											"end": 13790,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 13205,
											"end": 13797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13205,
											"end": 13797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13205,
											"end": 13797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13205,
											"end": 13797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13205,
											"end": 13797,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16551,
											"end": 16643,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 16551,
											"end": 16643,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16551,
											"end": 16643,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16551,
											"end": 16643,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16551,
											"end": 16643,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16551,
											"end": 16643,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 59,
											"end": 146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 152,
											"end": 291,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 204,
											"end": 291,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 204,
											"end": 291,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 204,
											"end": 291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 204,
											"end": 291,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 204,
											"end": 291,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 559,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 297,
											"end": 559,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 297,
											"end": 559,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 407,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 393,
											"end": 402,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 384,
											"end": 391,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 380,
											"end": 403,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 376,
											"end": 408,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 373,
											"end": 375,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 373,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 373,
											"end": 375,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 421,
											"end": 422,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 419,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 411,
											"end": 423,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 373,
											"end": 375,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 373,
											"end": 375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 464,
											"end": 465,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 489,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 534,
											"end": 541,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 525,
											"end": 531,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 514,
											"end": 523,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 510,
											"end": 532,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 489,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 489,
											"end": 542,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 489,
											"end": 542,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 489,
											"end": 542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 479,
											"end": 542,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 479,
											"end": 542,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 435,
											"end": 552,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 363,
											"end": 559,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 363,
											"end": 559,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 363,
											"end": 559,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 363,
											"end": 559,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 363,
											"end": 559,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 565,
											"end": 972,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 565,
											"end": 972,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 565,
											"end": 972,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 565,
											"end": 972,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 690,
											"end": 692,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 678,
											"end": 687,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 669,
											"end": 676,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 665,
											"end": 688,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 661,
											"end": 693,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 658,
											"end": 660,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 658,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 658,
											"end": 660,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 706,
											"end": 707,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 703,
											"end": 704,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 696,
											"end": 708,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 658,
											"end": 660,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 658,
											"end": 660,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 749,
											"end": 750,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 774,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 819,
											"end": 826,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 810,
											"end": 816,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 799,
											"end": 808,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 795,
											"end": 817,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 774,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 774,
											"end": 827,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 774,
											"end": 827,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 774,
											"end": 827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 764,
											"end": 827,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 764,
											"end": 827,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 720,
											"end": 837,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 876,
											"end": 878,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 902,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 947,
											"end": 954,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 938,
											"end": 944,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 927,
											"end": 936,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 923,
											"end": 945,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 902,
											"end": 955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 902,
											"end": 955,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 902,
											"end": 955,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 902,
											"end": 955,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 892,
											"end": 955,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 892,
											"end": 955,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 847,
											"end": 965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 648,
											"end": 972,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 648,
											"end": 972,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 648,
											"end": 972,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 648,
											"end": 972,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 648,
											"end": 972,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 648,
											"end": 972,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 978,
											"end": 1530,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 978,
											"end": 1530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 978,
											"end": 1530,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 978,
											"end": 1530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1120,
											"end": 1122,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1108,
											"end": 1117,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1106,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1095,
											"end": 1118,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1123,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1090,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1090,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 1088,
											"end": 1090,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1136,
											"end": 1137,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1133,
											"end": 1134,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1138,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1090,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 1088,
											"end": 1090,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1179,
											"end": 1180,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1204,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 1249,
											"end": 1256,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1246,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1229,
											"end": 1238,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1204,
											"end": 1257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 1204,
											"end": 1257,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1204,
											"end": 1257,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 1204,
											"end": 1257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1194,
											"end": 1257,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1194,
											"end": 1257,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1150,
											"end": 1267,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1306,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1332,
											"end": 1385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 1377,
											"end": 1384,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1368,
											"end": 1374,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1357,
											"end": 1366,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1375,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1332,
											"end": 1385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 1332,
											"end": 1385,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1332,
											"end": 1385,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 1332,
											"end": 1385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1385,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1277,
											"end": 1395,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1434,
											"end": 1436,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1460,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 1505,
											"end": 1512,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1496,
											"end": 1502,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1485,
											"end": 1494,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1481,
											"end": 1503,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 1460,
											"end": 1513,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1460,
											"end": 1513,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 1460,
											"end": 1513,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1450,
											"end": 1513,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1450,
											"end": 1513,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1405,
											"end": 1523,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1530,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1530,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1530,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1530,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1530,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1078,
											"end": 1530,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1536,
											"end": 1943,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1536,
											"end": 1943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1536,
											"end": 1943,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1943,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1663,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1649,
											"end": 1658,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1640,
											"end": 1647,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1636,
											"end": 1659,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1632,
											"end": 1664,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1678,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1674,
											"end": 1675,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1667,
											"end": 1679,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 1629,
											"end": 1631,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 1790,
											"end": 1797,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1787,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1766,
											"end": 1788,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1735,
											"end": 1798,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1691,
											"end": 1808,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 1849,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1873,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 1918,
											"end": 1925,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1909,
											"end": 1915,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1898,
											"end": 1907,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 1916,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1873,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 1873,
											"end": 1926,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1873,
											"end": 1926,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 1873,
											"end": 1926,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 1926,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 1926,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1818,
											"end": 1936,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1943,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1943,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1943,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1943,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1943,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1619,
											"end": 1943,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1949,
											"end": 2058,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 1949,
											"end": 2058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2030,
											"end": 2051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 2045,
											"end": 2050,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2030,
											"end": 2051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 2030,
											"end": 2051,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2030,
											"end": 2051,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 2030,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2028,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2052,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2058,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2058,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2058,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2064,
											"end": 2428,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 2064,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2064,
											"end": 2428,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2180,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 2213,
											"end": 2218,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2180,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 2180,
											"end": 2219,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2180,
											"end": 2219,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 2180,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 2299,
											"end": 2305,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2294,
											"end": 2297,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2235,
											"end": 2306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 2235,
											"end": 2306,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2235,
											"end": 2306,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 2235,
											"end": 2306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2228,
											"end": 2306,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2228,
											"end": 2306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2315,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2355,
											"end": 2358,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2341,
											"end": 2346,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2353,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2315,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 2315,
											"end": 2367,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2315,
											"end": 2367,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 2315,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2387,
											"end": 2390,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2383,
											"end": 2422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2428,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2428,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2428,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2434,
											"end": 2801,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 2434,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2434,
											"end": 2801,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2597,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 2661,
											"end": 2663,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2656,
											"end": 2659,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2597,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 2597,
											"end": 2664,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2597,
											"end": 2664,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 2597,
											"end": 2664,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2664,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2694,
											"end": 2728,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 2690,
											"end": 2691,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2685,
											"end": 2688,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2681,
											"end": 2692,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2674,
											"end": 2729,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2760,
											"end": 2765,
											"name": "PUSH",
											"source": 1,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2755,
											"end": 2757,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2750,
											"end": 2753,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2746,
											"end": 2758,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2739,
											"end": 2766,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2792,
											"end": 2794,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2787,
											"end": 2790,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2783,
											"end": 2795,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2776,
											"end": 2795,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2776,
											"end": 2795,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2801,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2801,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2801,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2580,
											"end": 2801,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2807,
											"end": 3173,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 2807,
											"end": 3173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2807,
											"end": 3173,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2970,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 3034,
											"end": 3036,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 3029,
											"end": 3032,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 3037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 2970,
											"end": 3037,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2970,
											"end": 3037,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 2970,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 3037,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 3037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3067,
											"end": 3101,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 3063,
											"end": 3064,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3061,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3054,
											"end": 3065,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3047,
											"end": 3102,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3137,
											"name": "PUSH",
											"source": 1,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3128,
											"end": 3130,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3123,
											"end": 3126,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3119,
											"end": 3131,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3112,
											"end": 3138,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3166,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3159,
											"end": 3162,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3167,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3148,
											"end": 3167,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3148,
											"end": 3167,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 3173,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 3173,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 3173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 3173,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3179,
											"end": 3549,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 3179,
											"end": 3549,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3179,
											"end": 3549,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3342,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 3406,
											"end": 3408,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3401,
											"end": 3404,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3342,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 3342,
											"end": 3409,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3342,
											"end": 3409,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 3342,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3335,
											"end": 3409,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3335,
											"end": 3409,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3473,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 3435,
											"end": 3436,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3430,
											"end": 3433,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3426,
											"end": 3437,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3474,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3505,
											"end": 3513,
											"name": "PUSH",
											"source": 1,
											"value": "616C616E63650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3500,
											"end": 3502,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3495,
											"end": 3498,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3491,
											"end": 3503,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3484,
											"end": 3514,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3540,
											"end": 3542,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3535,
											"end": 3538,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3531,
											"end": 3543,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3524,
											"end": 3543,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3524,
											"end": 3543,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3325,
											"end": 3549,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3325,
											"end": 3549,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3325,
											"end": 3549,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3325,
											"end": 3549,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3555,
											"end": 3927,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 3555,
											"end": 3927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3555,
											"end": 3927,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3718,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 3782,
											"end": 3784,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3777,
											"end": 3780,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3718,
											"end": 3785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 3718,
											"end": 3785,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3718,
											"end": 3785,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 3718,
											"end": 3785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3785,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3711,
											"end": 3785,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3849,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732061"
										},
										{
											"begin": 3811,
											"end": 3812,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3806,
											"end": 3809,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3802,
											"end": 3813,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3795,
											"end": 3850,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3881,
											"end": 3891,
											"name": "PUSH",
											"source": 1,
											"value": "6C6C6F77616E6365000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3876,
											"end": 3878,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3871,
											"end": 3874,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3879,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3860,
											"end": 3892,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3918,
											"end": 3920,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3913,
											"end": 3916,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 3921,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 3921,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3902,
											"end": 3921,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3701,
											"end": 3927,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3701,
											"end": 3927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3701,
											"end": 3927,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3701,
											"end": 3927,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3933,
											"end": 4302,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 3933,
											"end": 4302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3933,
											"end": 4302,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4096,
											"end": 4163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 4160,
											"end": 4162,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4155,
											"end": 4158,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4096,
											"end": 4163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 4096,
											"end": 4163,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4096,
											"end": 4163,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 4096,
											"end": 4163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4163,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4089,
											"end": 4163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4193,
											"end": 4227,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4189,
											"end": 4190,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4184,
											"end": 4187,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4180,
											"end": 4191,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4173,
											"end": 4228,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4259,
											"end": 4266,
											"name": "PUSH",
											"source": 1,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4254,
											"end": 4256,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4249,
											"end": 4252,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4245,
											"end": 4257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4238,
											"end": 4267,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4293,
											"end": 4295,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4288,
											"end": 4291,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4284,
											"end": 4296,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4277,
											"end": 4296,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4277,
											"end": 4296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4079,
											"end": 4302,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4079,
											"end": 4302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4079,
											"end": 4302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4079,
											"end": 4302,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4308,
											"end": 4676,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 4308,
											"end": 4676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4308,
											"end": 4676,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4471,
											"end": 4538,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4530,
											"end": 4533,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 4538,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 4471,
											"end": 4538,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4471,
											"end": 4538,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 4471,
											"end": 4538,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4464,
											"end": 4538,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4464,
											"end": 4538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4568,
											"end": 4602,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4564,
											"end": 4565,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4559,
											"end": 4562,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4555,
											"end": 4566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4548,
											"end": 4603,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4634,
											"end": 4640,
											"name": "PUSH",
											"source": 1,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4629,
											"end": 4631,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4624,
											"end": 4627,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4620,
											"end": 4632,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4613,
											"end": 4641,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4667,
											"end": 4669,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4662,
											"end": 4665,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4658,
											"end": 4670,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4651,
											"end": 4670,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4651,
											"end": 4670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4454,
											"end": 4676,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4454,
											"end": 4676,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4454,
											"end": 4676,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4454,
											"end": 4676,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4682,
											"end": 5051,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 4682,
											"end": 5051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4682,
											"end": 5051,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4845,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 4909,
											"end": 4911,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4904,
											"end": 4907,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4845,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 4845,
											"end": 4912,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4845,
											"end": 4912,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 4845,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4838,
											"end": 4912,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4838,
											"end": 4912,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4942,
											"end": 4976,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 4938,
											"end": 4939,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4933,
											"end": 4936,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4929,
											"end": 4940,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4922,
											"end": 4977,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5008,
											"end": 5015,
											"name": "PUSH",
											"source": 1,
											"value": "207A65726F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5003,
											"end": 5005,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4998,
											"end": 5001,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4994,
											"end": 5006,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 5016,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5042,
											"end": 5044,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5037,
											"end": 5040,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5033,
											"end": 5045,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5026,
											"end": 5045,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5026,
											"end": 5045,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4828,
											"end": 5051,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4828,
											"end": 5051,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4828,
											"end": 5051,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4828,
											"end": 5051,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5057,
											"end": 5175,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 5057,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 5168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 5162,
											"end": 5167,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 5168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 5144,
											"end": 5168,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5144,
											"end": 5168,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 5144,
											"end": 5168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5139,
											"end": 5142,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5132,
											"end": 5169,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5122,
											"end": 5175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5122,
											"end": 5175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5122,
											"end": 5175,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5181,
											"end": 5293,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 5181,
											"end": 5293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5264,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 5280,
											"end": 5285,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5264,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 5264,
											"end": 5286,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5264,
											"end": 5286,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 5264,
											"end": 5286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5259,
											"end": 5262,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5252,
											"end": 5287,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5242,
											"end": 5293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5242,
											"end": 5293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5242,
											"end": 5293,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5299,
											"end": 5509,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5299,
											"end": 5509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5299,
											"end": 5509,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5424,
											"end": 5426,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5413,
											"end": 5422,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5409,
											"end": 5427,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5401,
											"end": 5427,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5401,
											"end": 5427,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5437,
											"end": 5502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 5499,
											"end": 5500,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5488,
											"end": 5497,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5484,
											"end": 5501,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5481,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5437,
											"end": 5502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 5437,
											"end": 5502,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5437,
											"end": 5502,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 5437,
											"end": 5502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5391,
											"end": 5509,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5391,
											"end": 5509,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5391,
											"end": 5509,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5391,
											"end": 5509,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5391,
											"end": 5509,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5515,
											"end": 5828,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 5515,
											"end": 5828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5828,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5666,
											"end": 5668,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5655,
											"end": 5664,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5651,
											"end": 5669,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5643,
											"end": 5669,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5643,
											"end": 5669,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5715,
											"end": 5724,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5709,
											"end": 5713,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5705,
											"end": 5725,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5701,
											"end": 5702,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5690,
											"end": 5699,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5703,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5679,
											"end": 5726,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5743,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 5816,
											"end": 5820,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5807,
											"end": 5813,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5743,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 5743,
											"end": 5821,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5743,
											"end": 5821,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 5743,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5633,
											"end": 5828,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5633,
											"end": 5828,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5633,
											"end": 5828,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5633,
											"end": 5828,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5633,
											"end": 5828,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5834,
											"end": 6253,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 5834,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 6253,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6038,
											"end": 6040,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6027,
											"end": 6036,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6023,
											"end": 6041,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6015,
											"end": 6041,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6015,
											"end": 6041,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6087,
											"end": 6096,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6081,
											"end": 6085,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6097,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6073,
											"end": 6074,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6062,
											"end": 6071,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6058,
											"end": 6075,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6051,
											"end": 6098,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6115,
											"end": 6246,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 6241,
											"end": 6245,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6115,
											"end": 6246,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 6115,
											"end": 6246,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6115,
											"end": 6246,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 6115,
											"end": 6246,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6107,
											"end": 6246,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6107,
											"end": 6246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6005,
											"end": 6253,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6005,
											"end": 6253,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6005,
											"end": 6253,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6005,
											"end": 6253,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6259,
											"end": 6678,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 6259,
											"end": 6678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6259,
											"end": 6678,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6463,
											"end": 6465,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6452,
											"end": 6461,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6448,
											"end": 6466,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6440,
											"end": 6466,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6440,
											"end": 6466,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6512,
											"end": 6521,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6506,
											"end": 6510,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6502,
											"end": 6522,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6498,
											"end": 6499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6487,
											"end": 6496,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6483,
											"end": 6500,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6476,
											"end": 6523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6540,
											"end": 6671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 6666,
											"end": 6670,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6540,
											"end": 6671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 6540,
											"end": 6671,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6540,
											"end": 6671,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 6540,
											"end": 6671,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6532,
											"end": 6671,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6532,
											"end": 6671,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6430,
											"end": 6678,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6430,
											"end": 6678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6430,
											"end": 6678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6430,
											"end": 6678,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6684,
											"end": 7103,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 6684,
											"end": 7103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6684,
											"end": 7103,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6888,
											"end": 6890,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6877,
											"end": 6886,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6873,
											"end": 6891,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6865,
											"end": 6891,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6865,
											"end": 6891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6937,
											"end": 6946,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6935,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6927,
											"end": 6947,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6923,
											"end": 6924,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6912,
											"end": 6921,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6908,
											"end": 6925,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6901,
											"end": 6948,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6965,
											"end": 7096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 7091,
											"end": 7095,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6965,
											"end": 7096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 6965,
											"end": 7096,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6965,
											"end": 7096,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 6965,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6957,
											"end": 7096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6957,
											"end": 7096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6855,
											"end": 7103,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6855,
											"end": 7103,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6855,
											"end": 7103,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6855,
											"end": 7103,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7109,
											"end": 7528,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 7109,
											"end": 7528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7109,
											"end": 7528,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7313,
											"end": 7315,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7302,
											"end": 7311,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7316,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7290,
											"end": 7316,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7290,
											"end": 7316,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7362,
											"end": 7371,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7356,
											"end": 7360,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7352,
											"end": 7372,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7348,
											"end": 7349,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7337,
											"end": 7346,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7333,
											"end": 7350,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7326,
											"end": 7373,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7390,
											"end": 7521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 7516,
											"end": 7520,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7390,
											"end": 7521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 7390,
											"end": 7521,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7390,
											"end": 7521,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 7390,
											"end": 7521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7382,
											"end": 7521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7382,
											"end": 7521,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7280,
											"end": 7528,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7280,
											"end": 7528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7280,
											"end": 7528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7280,
											"end": 7528,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7534,
											"end": 7953,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 7534,
											"end": 7953,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7534,
											"end": 7953,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7738,
											"end": 7740,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7727,
											"end": 7736,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7723,
											"end": 7741,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7715,
											"end": 7741,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7715,
											"end": 7741,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7787,
											"end": 7796,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7785,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7777,
											"end": 7797,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7773,
											"end": 7774,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7762,
											"end": 7771,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7751,
											"end": 7798,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 7941,
											"end": 7945,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7815,
											"end": 7946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 7815,
											"end": 7946,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7815,
											"end": 7946,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 7815,
											"end": 7946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7807,
											"end": 7946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7807,
											"end": 7946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7705,
											"end": 7953,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7705,
											"end": 7953,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7705,
											"end": 7953,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7705,
											"end": 7953,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7959,
											"end": 8378,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 7959,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7959,
											"end": 8378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8163,
											"end": 8165,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8152,
											"end": 8161,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8148,
											"end": 8166,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8140,
											"end": 8166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8140,
											"end": 8166,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8212,
											"end": 8221,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8206,
											"end": 8210,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8202,
											"end": 8222,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8198,
											"end": 8199,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8187,
											"end": 8196,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8183,
											"end": 8200,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8176,
											"end": 8223,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 8366,
											"end": 8370,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8240,
											"end": 8371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 8240,
											"end": 8371,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8240,
											"end": 8371,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 8240,
											"end": 8371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8232,
											"end": 8371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8232,
											"end": 8371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8130,
											"end": 8378,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8130,
											"end": 8378,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8130,
											"end": 8378,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8130,
											"end": 8378,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8384,
											"end": 8803,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 8384,
											"end": 8803,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8384,
											"end": 8803,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8588,
											"end": 8590,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8577,
											"end": 8586,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8573,
											"end": 8591,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8565,
											"end": 8591,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8565,
											"end": 8591,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8637,
											"end": 8646,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8631,
											"end": 8635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8627,
											"end": 8647,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8623,
											"end": 8624,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8612,
											"end": 8621,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8608,
											"end": 8625,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8601,
											"end": 8648,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8665,
											"end": 8796,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 8791,
											"end": 8795,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8665,
											"end": 8796,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 8665,
											"end": 8796,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8665,
											"end": 8796,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 8665,
											"end": 8796,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8657,
											"end": 8796,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8657,
											"end": 8796,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8555,
											"end": 8803,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8555,
											"end": 8803,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8555,
											"end": 8803,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8555,
											"end": 8803,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8809,
											"end": 9031,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 8809,
											"end": 9031,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8809,
											"end": 9031,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8940,
											"end": 8942,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8929,
											"end": 8938,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8925,
											"end": 8943,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8917,
											"end": 8943,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8917,
											"end": 8943,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8953,
											"end": 9024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 9021,
											"end": 9022,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9010,
											"end": 9019,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9006,
											"end": 9023,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8997,
											"end": 9003,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8953,
											"end": 9024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 8953,
											"end": 9024,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8953,
											"end": 9024,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 8953,
											"end": 9024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8907,
											"end": 9031,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8907,
											"end": 9031,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8907,
											"end": 9031,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8907,
											"end": 9031,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8907,
											"end": 9031,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9037,
											"end": 9251,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 9037,
											"end": 9251,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9037,
											"end": 9251,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9164,
											"end": 9166,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9153,
											"end": 9162,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9149,
											"end": 9167,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9141,
											"end": 9167,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9141,
											"end": 9167,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9177,
											"end": 9244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 9241,
											"end": 9242,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9230,
											"end": 9239,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9226,
											"end": 9243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9217,
											"end": 9223,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9177,
											"end": 9244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 9177,
											"end": 9244,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9177,
											"end": 9244,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 9177,
											"end": 9244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9131,
											"end": 9251,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9131,
											"end": 9251,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9131,
											"end": 9251,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9131,
											"end": 9251,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9131,
											"end": 9251,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9257,
											"end": 9356,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 9257,
											"end": 9356,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9257,
											"end": 9356,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9343,
											"end": 9348,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9337,
											"end": 9349,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9327,
											"end": 9349,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9327,
											"end": 9349,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9316,
											"end": 9356,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9316,
											"end": 9356,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9316,
											"end": 9356,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9316,
											"end": 9356,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9362,
											"end": 9531,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 9362,
											"end": 9531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9362,
											"end": 9531,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9480,
											"end": 9486,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9475,
											"end": 9478,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9468,
											"end": 9487,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9520,
											"end": 9524,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9515,
											"end": 9518,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9511,
											"end": 9525,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9496,
											"end": 9525,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9496,
											"end": 9525,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9458,
											"end": 9531,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9458,
											"end": 9531,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9458,
											"end": 9531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9458,
											"end": 9531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9458,
											"end": 9531,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9537,
											"end": 9842,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 9537,
											"end": 9842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9537,
											"end": 9842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9596,
											"end": 9616,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 9614,
											"end": 9615,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9596,
											"end": 9616,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 9596,
											"end": 9616,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9596,
											"end": 9616,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 9596,
											"end": 9616,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9591,
											"end": 9616,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9591,
											"end": 9616,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9630,
											"end": 9650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 9648,
											"end": 9649,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9630,
											"end": 9650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 9630,
											"end": 9650,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9630,
											"end": 9650,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 9630,
											"end": 9650,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9625,
											"end": 9650,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9625,
											"end": 9650,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9784,
											"end": 9785,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9716,
											"end": 9782,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9712,
											"end": 9786,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9709,
											"end": 9710,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9706,
											"end": 9787,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 9703,
											"end": 9705,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9703,
											"end": 9705,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 9703,
											"end": 9705,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9790,
											"end": 9808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 9790,
											"end": 9808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 9790,
											"end": 9808,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9790,
											"end": 9808,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 9790,
											"end": 9808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9703,
											"end": 9705,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 9703,
											"end": 9705,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9834,
											"end": 9835,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9831,
											"end": 9832,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9827,
											"end": 9836,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9820,
											"end": 9836,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9820,
											"end": 9836,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9581,
											"end": 9842,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9581,
											"end": 9842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9581,
											"end": 9842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9581,
											"end": 9842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9581,
											"end": 9842,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9848,
											"end": 10039,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 9848,
											"end": 10039,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9848,
											"end": 10039,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9908,
											"end": 9928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 9926,
											"end": 9927,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9908,
											"end": 9928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 9908,
											"end": 9928,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9908,
											"end": 9928,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 9908,
											"end": 9928,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9903,
											"end": 9928,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9903,
											"end": 9928,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9942,
											"end": 9962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 9960,
											"end": 9961,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9942,
											"end": 9962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 9942,
											"end": 9962,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9942,
											"end": 9962,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 9942,
											"end": 9962,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9937,
											"end": 9962,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9937,
											"end": 9962,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 9982,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9978,
											"end": 9979,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9975,
											"end": 9983,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 9972,
											"end": 9974,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9972,
											"end": 9974,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 9972,
											"end": 9974,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9986,
											"end": 10004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 9986,
											"end": 10004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 9986,
											"end": 10004,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9986,
											"end": 10004,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 9986,
											"end": 10004,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9972,
											"end": 9974,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 9972,
											"end": 9974,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10031,
											"end": 10032,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10028,
											"end": 10029,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10024,
											"end": 10033,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10016,
											"end": 10033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10016,
											"end": 10033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9893,
											"end": 10039,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9893,
											"end": 10039,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9893,
											"end": 10039,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9893,
											"end": 10039,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9893,
											"end": 10039,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10045,
											"end": 10141,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 10045,
											"end": 10141,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10045,
											"end": 10141,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10111,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 10129,
											"end": 10134,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10111,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 10111,
											"end": 10135,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10111,
											"end": 10135,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 10111,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10100,
											"end": 10135,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10100,
											"end": 10135,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10090,
											"end": 10141,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10090,
											"end": 10141,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10090,
											"end": 10141,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10090,
											"end": 10141,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10147,
											"end": 10237,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 10147,
											"end": 10237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10147,
											"end": 10237,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10224,
											"end": 10229,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10217,
											"end": 10230,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10210,
											"end": 10231,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10199,
											"end": 10231,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10199,
											"end": 10231,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10189,
											"end": 10237,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10189,
											"end": 10237,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10189,
											"end": 10237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10189,
											"end": 10237,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10243,
											"end": 10369,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 10243,
											"end": 10369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10243,
											"end": 10369,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10320,
											"end": 10362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10313,
											"end": 10318,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10309,
											"end": 10363,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10298,
											"end": 10363,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10298,
											"end": 10363,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10288,
											"end": 10369,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10288,
											"end": 10369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10288,
											"end": 10369,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10288,
											"end": 10369,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10375,
											"end": 10452,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 10375,
											"end": 10452,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10375,
											"end": 10452,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10441,
											"end": 10446,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10430,
											"end": 10446,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10430,
											"end": 10446,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10420,
											"end": 10452,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10420,
											"end": 10452,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10420,
											"end": 10452,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10420,
											"end": 10452,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10458,
											"end": 10544,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 10458,
											"end": 10544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10458,
											"end": 10544,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10533,
											"end": 10537,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 10526,
											"end": 10531,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10522,
											"end": 10538,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10511,
											"end": 10538,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10511,
											"end": 10538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10501,
											"end": 10544,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10501,
											"end": 10544,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10501,
											"end": 10544,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10501,
											"end": 10544,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10550,
											"end": 10857,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 10550,
											"end": 10857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10618,
											"end": 10619,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10628,
											"end": 10741,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 10628,
											"end": 10741,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10642,
											"end": 10648,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10639,
											"end": 10640,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10636,
											"end": 10649,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10741,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10741,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 10628,
											"end": 10741,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10727,
											"end": 10728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10722,
											"end": 10725,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10718,
											"end": 10729,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10712,
											"end": 10730,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10708,
											"end": 10709,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10703,
											"end": 10706,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10699,
											"end": 10710,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10692,
											"end": 10731,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10664,
											"end": 10666,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10661,
											"end": 10662,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10657,
											"end": 10667,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10652,
											"end": 10667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10652,
											"end": 10667,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10741,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 10628,
											"end": 10741,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10741,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 10628,
											"end": 10741,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10759,
											"end": 10765,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10756,
											"end": 10757,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10753,
											"end": 10766,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10750,
											"end": 10752,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10750,
											"end": 10752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 10750,
											"end": 10752,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10839,
											"end": 10840,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10830,
											"end": 10836,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10825,
											"end": 10828,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10821,
											"end": 10837,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10814,
											"end": 10841,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10750,
											"end": 10752,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 10750,
											"end": 10752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10599,
											"end": 10857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10599,
											"end": 10857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10599,
											"end": 10857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10599,
											"end": 10857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10599,
											"end": 10857,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10863,
											"end": 11183,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 10863,
											"end": 11183,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10863,
											"end": 11183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10944,
											"end": 10945,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 10938,
											"end": 10942,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10934,
											"end": 10946,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 10924,
											"end": 10946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10924,
											"end": 10946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10991,
											"end": 10992,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10985,
											"end": 10989,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10981,
											"end": 10993,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11012,
											"end": 11030,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11002,
											"end": 11004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 11002,
											"end": 11004,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11068,
											"end": 11072,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 11060,
											"end": 11066,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11056,
											"end": 11073,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11046,
											"end": 11073,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11046,
											"end": 11073,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11002,
											"end": 11004,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 11002,
											"end": 11004,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11130,
											"end": 11132,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11122,
											"end": 11128,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11119,
											"end": 11133,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11099,
											"end": 11117,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11096,
											"end": 11134,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11093,
											"end": 11095,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11093,
											"end": 11095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 11093,
											"end": 11095,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11149,
											"end": 11167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 11149,
											"end": 11167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 11149,
											"end": 11167,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11149,
											"end": 11167,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 11149,
											"end": 11167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11093,
											"end": 11095,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 11093,
											"end": 11095,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10914,
											"end": 11183,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10914,
											"end": 11183,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10914,
											"end": 11183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10914,
											"end": 11183,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10914,
											"end": 11183,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11189,
											"end": 11369,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 11189,
											"end": 11369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11237,
											"end": 11314,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11234,
											"end": 11235,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11227,
											"end": 11315,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11334,
											"end": 11338,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 11331,
											"end": 11332,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11324,
											"end": 11339,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11358,
											"end": 11362,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11355,
											"end": 11356,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11348,
											"end": 11363,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11375,
											"end": 11555,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 11375,
											"end": 11555,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11423,
											"end": 11500,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11420,
											"end": 11421,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11413,
											"end": 11501,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11520,
											"end": 11524,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 11517,
											"end": 11518,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11510,
											"end": 11525,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11544,
											"end": 11548,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11541,
											"end": 11542,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11534,
											"end": 11549,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11561,
											"end": 11663,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 11561,
											"end": 11663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11561,
											"end": 11663,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11653,
											"end": 11655,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 11649,
											"end": 11656,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 11644,
											"end": 11646,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 11637,
											"end": 11642,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11633,
											"end": 11647,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11629,
											"end": 11657,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11657,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11619,
											"end": 11657,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11609,
											"end": 11663,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11609,
											"end": 11663,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11609,
											"end": 11663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11609,
											"end": 11663,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11669,
											"end": 11791,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 11669,
											"end": 11791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11742,
											"end": 11766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 11760,
											"end": 11765,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11742,
											"end": 11766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 11742,
											"end": 11766,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11742,
											"end": 11766,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 11742,
											"end": 11766,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11735,
											"end": 11740,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11732,
											"end": 11767,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11722,
											"end": 11724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 11722,
											"end": 11724,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11781,
											"end": 11782,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11778,
											"end": 11779,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11771,
											"end": 11783,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11722,
											"end": 11724,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 11722,
											"end": 11724,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11712,
											"end": 11791,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11712,
											"end": 11791,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11797,
											"end": 11919,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 11797,
											"end": 11919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11870,
											"end": 11894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 11888,
											"end": 11893,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11870,
											"end": 11894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 11870,
											"end": 11894,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11870,
											"end": 11894,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 11870,
											"end": 11894,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11863,
											"end": 11868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11860,
											"end": 11895,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 11850,
											"end": 11852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 11850,
											"end": 11852,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11909,
											"end": 11910,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11906,
											"end": 11907,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11899,
											"end": 11911,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11850,
											"end": 11852,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 11850,
											"end": 11852,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11840,
											"end": 11919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11840,
											"end": 11919,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x4ea91f427348a5f09a245b2a2eab4ce88e5520420358b8c7c8f2767f327fbdd2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3be554a8674dfcdc191f5760ca4f399b5927a2c75ab9d1272f94b46d771e8211\",\"dweb:/ipfs/QmajGeU2rsudU9eg1fm847qaJR9kHb9kAd8fexvHDPj6o9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": ".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 8,
								"contract": ".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 162,
								"contract": ".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 197,
								"contract": ".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "_balances",
								"offset": 0,
								"slot": "51",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 203,
								"contract": ".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "_allowances",
								"offset": 0,
								"slot": "52",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 205,
								"contract": ".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "53",
								"type": "t_uint256"
							},
							{
								"astId": 207,
								"contract": ".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "_name",
								"offset": 0,
								"slot": "54",
								"type": "t_string_storage"
							},
							{
								"astId": 209,
								"contract": ".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "_symbol",
								"offset": 0,
								"slot": "55",
								"type": "t_string_storage"
							},
							{
								"astId": 711,
								"contract": ".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "56",
								"type": "t_array(t_uint256)45_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)45_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[45]",
								"numberOfBytes": "1440"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20MetadataUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"IERC20MetadataUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x4ea91f427348a5f09a245b2a2eab4ce88e5520420358b8c7c8f2767f327fbdd2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3be554a8674dfcdc191f5760ca4f399b5927a2c75ab9d1272f94b46d771e8211\",\"dweb:/ipfs/QmajGeU2rsudU9eg1fm847qaJR9kHb9kAd8fexvHDPj6o9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"IERC20Upgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x4ea91f427348a5f09a245b2a2eab4ce88e5520420358b8c7c8f2767f327fbdd2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3be554a8674dfcdc191f5760ca4f399b5927a2c75ab9d1272f94b46d771e8211\",\"dweb:/ipfs/QmajGeU2rsudU9eg1fm847qaJR9kHb9kAd8fexvHDPj6o9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Initializable": {
					"abi": [],
					"devdoc": {
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"Initializable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x4ea91f427348a5f09a245b2a2eab4ce88e5520420358b8c7c8f2767f327fbdd2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3be554a8674dfcdc191f5760ca4f399b5927a2c75ab9d1272f94b46d771e8211\",\"dweb:/ipfs/QmajGeU2rsudU9eg1fm847qaJR9kHb9kAd8fexvHDPj6o9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": ".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 8,
								"contract": ".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							163
						],
						"ERC20Upgradeable": [
							712
						],
						"IERC20MetadataUpgradeable": [
							184
						],
						"IERC20Upgradeable": [
							121
						],
						"Initializable": [
							45
						]
					},
					"id": 713,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "560:934:0",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity."
							},
							"fullyImplemented": true,
							"id": 45,
							"linearizedBaseContracts": [
								45
							],
							"name": "Initializable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "1534:73:0",
										"text": " @dev Indicates that the contract has been initialized."
									},
									"id": 5,
									"mutability": "mutable",
									"name": "_initialized",
									"nodeType": "VariableDeclaration",
									"scope": 45,
									"src": "1612:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 4,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1612:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 6,
										"nodeType": "StructuredDocumentation",
										"src": "1644:91:0",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 8,
									"mutability": "mutable",
									"name": "_initializing",
									"nodeType": "VariableDeclaration",
									"scope": 45,
									"src": "1740:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 7,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1740:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "1894:348:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 15,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 12,
																"name": "_initializing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "1912:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"id": 14,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "1929:13:0",
																"subExpression": {
																	"id": 13,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "1930:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1912:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 16,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1944:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 11,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1904:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1904:89:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 18,
												"nodeType": "ExpressionStatement",
												"src": "1904:89:0"
											},
											{
												"assignments": [
													20
												],
												"declarations": [
													{
														"constant": false,
														"id": 20,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nodeType": "VariableDeclaration",
														"scope": 43,
														"src": "2004:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 19,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2004:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 23,
												"initialValue": {
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2026:14:0",
													"subExpression": {
														"id": 21,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "2027:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2004:36:0"
											},
											{
												"condition": {
													"id": 24,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 20,
													"src": "2054:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 34,
												"nodeType": "IfStatement",
												"src": "2050:98:0",
												"trueBody": {
													"id": 33,
													"nodeType": "Block",
													"src": "2070:78:0",
													"statements": [
														{
															"expression": {
																"id": 27,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 25,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "2084:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 26,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2100:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "2084:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 28,
															"nodeType": "ExpressionStatement",
															"src": "2084:20:0"
														},
														{
															"expression": {
																"id": 31,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 29,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "2118:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 30,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2133:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "2118:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 32,
															"nodeType": "ExpressionStatement",
															"src": "2118:19:0"
														}
													]
												}
											},
											{
												"id": 35,
												"nodeType": "PlaceholderStatement",
												"src": "2158:1:0"
											},
											{
												"condition": {
													"id": 36,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 20,
													"src": "2174:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 42,
												"nodeType": "IfStatement",
												"src": "2170:66:0",
												"trueBody": {
													"id": 41,
													"nodeType": "Block",
													"src": "2190:46:0",
													"statements": [
														{
															"expression": {
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 37,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 8,
																	"src": "2204:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 38,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2220:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "2204:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 40,
															"nodeType": "ExpressionStatement",
															"src": "2204:21:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "1773:93:0",
										"text": " @dev Modifier to protect an initializer function from being invoked twice."
									},
									"id": 44,
									"name": "initializer",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1891:2:0"
									},
									"src": "1871:371:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 713,
							"src": "1495:749:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 46,
								"nodeType": "StructuredDocumentation",
								"src": "2246:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 121,
							"linearizedBaseContracts": [
								121
							],
							"name": "IERC20Upgradeable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "2351:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 52,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2442:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2468:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2468:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2467:9:0"
									},
									"scope": 121,
									"src": "2422:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2483:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 60,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2579:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2579:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2578:17:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2619:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 57,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2619:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2618:9:0"
									},
									"scope": 121,
									"src": "2560:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "2634:209:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 70,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2866:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2866:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2885:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2865:35:0"
									},
									"returnParameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2919:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 67,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2919:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2918:6:0"
									},
									"scope": 121,
									"src": "2848:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "2931:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3219:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3234:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 74,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3234:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:32:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "3274:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3274:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3273:9:0"
									},
									"scope": 121,
									"src": "3200:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "3289:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 90,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3953:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3953:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3970:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3970:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3952:33:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "4004:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 87,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4004:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:6:0"
									},
									"scope": 121,
									"src": "3936:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4016:296:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 102,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "4339:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4339:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "4355:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4355:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "4374:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4338:51:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "4408:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 99,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4408:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4407:6:0"
									},
									"scope": 121,
									"src": "4317:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 103,
										"nodeType": "StructuredDocumentation",
										"src": "4420:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 111,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4598:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4598:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4620:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4620:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4640:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4640:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4597:57:0"
									},
									"src": "4583:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "4661:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 120,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4829:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4829:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4852:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4852:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4877:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4877:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4828:63:0"
									},
									"src": "4814:78:0"
								}
							],
							"scope": 713,
							"src": "2317:2577:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 122,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 45,
										"src": "4935:13:0"
									},
									"id": 123,
									"nodeType": "InheritanceSpecifier",
									"src": "4935:13:0"
								}
							],
							"contractDependencies": [
								45
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 163,
							"linearizedBaseContracts": [
								163,
								45
							],
							"name": "ContextUpgradeable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "5002:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 128,
														"name": "__Context_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "5012:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5012:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 130,
												"nodeType": "ExpressionStatement",
												"src": "5012:26:0"
											}
										]
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 126,
											"modifierName": {
												"id": 125,
												"name": "initializer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 44,
												"src": "4990:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4990:11:0"
										}
									],
									"name": "__Context_init",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4978:2:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5002:0:0"
									},
									"scope": 163,
									"src": "4955:90:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 137,
										"nodeType": "Block",
										"src": "5108:7:0",
										"statements": []
									},
									"id": 138,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 135,
											"modifierName": {
												"id": 134,
												"name": "initializer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 44,
												"src": "5096:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5096:11:0"
										}
									],
									"name": "__Context_init_unchained",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5084:2:0"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5108:0:0"
									},
									"scope": 163,
									"src": "5051:64:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "5182:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 143,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "5199:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "5199:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 142,
												"id": 145,
												"nodeType": "Return",
												"src": "5192:17:0"
											}
										]
									},
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5139:2:0"
									},
									"returnParameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "5173:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5173:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5172:9:0"
									},
									"scope": 163,
									"src": "5120:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 157,
										"nodeType": "Block",
										"src": "5289:165:0",
										"statements": [
											{
												"expression": {
													"id": 152,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "5299:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ContextUpgradeable_$163",
														"typeString": "contract ContextUpgradeable"
													}
												},
												"id": 153,
												"nodeType": "ExpressionStatement",
												"src": "5299:4:0"
											},
											{
												"expression": {
													"expression": {
														"id": 154,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "5439:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "5439:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 151,
												"id": 156,
												"nodeType": "Return",
												"src": "5432:15:0"
											}
										]
									},
									"id": 158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5239:2:0"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "5273:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 149,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5273:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5272:16:0"
									},
									"scope": 163,
									"src": "5222:232:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 162,
									"mutability": "mutable",
									"name": "__gap",
									"nodeType": "VariableDeclaration",
									"scope": 163,
									"src": "5459:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 159,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5459:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 161,
										"length": {
											"hexValue": "3530",
											"id": 160,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "5467:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "5459:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 713,
							"src": "4895:592:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 164,
										"name": "IERC20Upgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 121,
										"src": "5531:17:0"
									},
									"id": 165,
									"nodeType": "InheritanceSpecifier",
									"src": "5531:17:0"
								}
							],
							"contractDependencies": [
								121
							],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 184,
							"linearizedBaseContracts": [
								184,
								121
							],
							"name": "IERC20MetadataUpgradeable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "5555:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 171,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5627:2:0"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "5653:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 168,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5653:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5652:15:0"
									},
									"scope": 184,
									"src": "5614:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "5674:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 177,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5750:2:0"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5776:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 174,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5776:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5775:15:0"
									},
									"scope": 184,
									"src": "5735:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "5797:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 183,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5884:2:0"
									},
									"returnParameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "5910:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 180,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5910:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5909:7:0"
									},
									"scope": 184,
									"src": "5867:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 713,
							"src": "5492:427:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 186,
										"name": "Initializable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 45,
										"src": "7112:13:0"
									},
									"id": 187,
									"nodeType": "InheritanceSpecifier",
									"src": "7112:13:0"
								},
								{
									"baseName": {
										"id": 188,
										"name": "ContextUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 163,
										"src": "7127:18:0"
									},
									"id": 189,
									"nodeType": "InheritanceSpecifier",
									"src": "7127:18:0"
								},
								{
									"baseName": {
										"id": 190,
										"name": "IERC20Upgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 121,
										"src": "7147:17:0"
									},
									"id": 191,
									"nodeType": "InheritanceSpecifier",
									"src": "7147:17:0"
								},
								{
									"baseName": {
										"id": 192,
										"name": "IERC20MetadataUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 184,
										"src": "7166:25:0"
									},
									"id": 193,
									"nodeType": "InheritanceSpecifier",
									"src": "7166:25:0"
								}
							],
							"contractDependencies": [
								45,
								121,
								163,
								184
							],
							"contractKind": "contract",
							"documentation": {
								"id": 185,
								"nodeType": "StructuredDocumentation",
								"src": "5920:1162:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 712,
							"linearizedBaseContracts": [
								712,
								184,
								121,
								163,
								45
							],
							"name": "ERC20Upgradeable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 197,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 712,
									"src": "7198:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 196,
										"keyType": {
											"id": 194,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "7207:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "7198:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 195,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "7218:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 203,
									"mutability": "mutable",
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 712,
									"src": "7251:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 202,
										"keyType": {
											"id": 198,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "7260:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "7251:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 201,
											"keyType": {
												"id": 199,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "7280:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "7271:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 200,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "7291:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 205,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 712,
									"src": "7327:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 204,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "7327:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 207,
									"mutability": "mutable",
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 712,
									"src": "7362:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 206,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "7362:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 209,
									"mutability": "mutable",
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 712,
									"src": "7388:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 208,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "7388:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "7806:91:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 219,
														"name": "__Context_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "7816:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7816:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 221,
												"nodeType": "ExpressionStatement",
												"src": "7816:26:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 223,
															"name": "name_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "7875:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 224,
															"name": "symbol_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "7882:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 222,
														"name": "__ERC20_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "7852:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7852:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 226,
												"nodeType": "ExpressionStatement",
												"src": "7852:38:0"
											}
										]
									},
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "7417:297:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n The defaut value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 217,
											"modifierName": {
												"id": 216,
												"name": "initializer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 44,
												"src": "7794:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "7794:11:0"
										}
									],
									"name": "__ERC20_init",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "name_",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "7741:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 211,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7741:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "symbol_",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "7762:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 213,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7762:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7740:44:0"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7806:0:0"
									},
									"scope": 712,
									"src": "7719:178:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "8000:57:0",
										"statements": [
											{
												"expression": {
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 237,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "8010:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 238,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 230,
														"src": "8018:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "8010:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 240,
												"nodeType": "ExpressionStatement",
												"src": "8010:13:0"
											},
											{
												"expression": {
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 241,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 209,
														"src": "8033:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 242,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "8043:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "8033:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 244,
												"nodeType": "ExpressionStatement",
												"src": "8033:17:0"
											}
										]
									},
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 235,
											"modifierName": {
												"id": 234,
												"name": "initializer",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 44,
												"src": "7988:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "7988:11:0"
										}
									],
									"name": "__ERC20_init_unchained",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "name_",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "7935:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 229,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7935:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "symbol_",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "7956:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 231,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7956:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7934:44:0"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8000:0:0"
									},
									"scope": 712,
									"src": "7903:154:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										171
									],
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "8191:29:0",
										"statements": [
											{
												"expression": {
													"id": 253,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 207,
													"src": "8208:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 252,
												"id": 254,
												"nodeType": "Return",
												"src": "8201:12:0"
											}
										]
									},
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "8063:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 249,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8158:8:0"
									},
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8135:2:0"
									},
									"returnParameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "8176:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 250,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8176:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8175:15:0"
									},
									"scope": 712,
									"src": "8122:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										177
									],
									"body": {
										"id": 265,
										"nodeType": "Block",
										"src": "8404:31:0",
										"statements": [
											{
												"expression": {
													"id": 263,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 209,
													"src": "8421:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 262,
												"id": 264,
												"nodeType": "Return",
												"src": "8414:14:0"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "8226:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 259,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8371:8:0"
									},
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8348:2:0"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "8389:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 260,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8389:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8388:15:0"
									},
									"scope": 712,
									"src": "8333:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										183
									],
									"body": {
										"id": 275,
										"nodeType": "Block",
										"src": "9124:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9141:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 272,
												"id": 274,
												"nodeType": "Return",
												"src": "9134:9:0"
											}
										]
									},
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "8441:613:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 269,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9099:8:0"
									},
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9076:2:0"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "9117:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 270,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "9117:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9116:7:0"
									},
									"scope": 712,
									"src": "9059:91:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										52
									],
									"body": {
										"id": 285,
										"nodeType": "Block",
										"src": "9280:36:0",
										"statements": [
											{
												"expression": {
													"id": 283,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 205,
													"src": "9297:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 282,
												"id": 284,
												"nodeType": "Return",
												"src": "9290:19:0"
											}
										]
									},
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "9156:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 279,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9253:8:0"
									},
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9230:2:0"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "9271:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9271:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9270:9:0"
									},
									"scope": 712,
									"src": "9210:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										60
									],
									"body": {
										"id": 299,
										"nodeType": "Block",
										"src": "9457:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 295,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 197,
														"src": "9474:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 297,
													"indexExpression": {
														"id": 296,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "9484:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9474:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 294,
												"id": 298,
												"nodeType": "Return",
												"src": "9467:25:0"
											}
										]
									},
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "9322:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 291,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9430:8:0"
									},
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "9393:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9393:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9392:17:0"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "9448:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9448:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9447:9:0"
									},
									"scope": 712,
									"src": "9374:125:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										70
									],
									"body": {
										"id": 320,
										"nodeType": "Block",
										"src": "9794:80:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 312,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 147,
																"src": "9814:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9814:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 314,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "9828:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 315,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "9839:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 311,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 542,
														"src": "9804:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9804:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 317,
												"nodeType": "ExpressionStatement",
												"src": "9804:42:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "9863:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 310,
												"id": 319,
												"nodeType": "Return",
												"src": "9856:11:0"
											}
										]
									},
									"documentation": {
										"id": 301,
										"nodeType": "StructuredDocumentation",
										"src": "9505:192:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 307,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9770:8:0"
									},
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "9720:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9720:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "9739:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9739:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9719:35:0"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "9788:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 308,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9788:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9787:6:0"
									},
									"scope": 712,
									"src": "9702:172:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										80
									],
									"body": {
										"id": 338,
										"nodeType": "Block",
										"src": "10030:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 332,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "10047:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 334,
														"indexExpression": {
															"id": 333,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "10059:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10047:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 336,
													"indexExpression": {
														"id": 335,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 326,
														"src": "10066:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10047:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 331,
												"id": 337,
												"nodeType": "Return",
												"src": "10040:34:0"
											}
										]
									},
									"documentation": {
										"id": 322,
										"nodeType": "StructuredDocumentation",
										"src": "9880:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 328,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10003:8:0"
									},
									"parameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "9951:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9951:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "9966:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9966:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9950:32:0"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "10021:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10021:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10020:9:0"
									},
									"scope": 712,
									"src": "9932:149:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										90
									],
									"body": {
										"id": 359,
										"nodeType": "Block",
										"src": "10308:77:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 351,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 147,
																"src": "10327:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10327:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 353,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "10341:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 354,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "10350:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 350,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "10318:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10318:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 356,
												"nodeType": "ExpressionStatement",
												"src": "10318:39:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 357,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10374:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 349,
												"id": 358,
												"nodeType": "Return",
												"src": "10367:11:0"
											}
										]
									},
									"documentation": {
										"id": 340,
										"nodeType": "StructuredDocumentation",
										"src": "10087:127:0",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 346,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10284:8:0"
									},
									"parameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "10236:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10236:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "10253:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10253:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10235:33:0"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "10302:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 347,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10302:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10301:6:0"
									},
									"scope": 712,
									"src": "10219:166:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										102
									],
									"body": {
										"id": 406,
										"nodeType": "Block",
										"src": "10964:302:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 374,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "10984:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 375,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "10992:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "11003:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 373,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 542,
														"src": "10974:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10974:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 378,
												"nodeType": "ExpressionStatement",
												"src": "10974:36:0"
											},
											{
												"assignments": [
													380
												],
												"declarations": [
													{
														"constant": false,
														"id": 380,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 406,
														"src": "11021:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 379,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11021:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 387,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 381,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "11048:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 383,
														"indexExpression": {
															"id": 382,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "11060:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "11048:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 386,
													"indexExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 384,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 147,
															"src": "11068:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 385,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11068:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11048:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11021:60:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 389,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 380,
																"src": "11099:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 390,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 367,
																"src": "11119:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11099:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11127:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															},
															"value": "ERC20: transfer amount exceeds allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															}
														],
														"id": 388,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11091:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11091:79:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 394,
												"nodeType": "ExpressionStatement",
												"src": "11091:79:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 396,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "11189:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 397,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 147,
																"src": "11197:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11197:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 401,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 399,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 380,
																"src": "11211:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 400,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 367,
																"src": "11230:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11211:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 395,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "11180:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11180:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 403,
												"nodeType": "ExpressionStatement",
												"src": "11180:57:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11255:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 372,
												"id": 405,
												"nodeType": "Return",
												"src": "11248:11:0"
											}
										]
									},
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "10391:456:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 369,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10940:8:0"
									},
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "10874:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10874:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "10890:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10890:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "10909:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10873:51:0"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "10958:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 370,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10958:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10957:6:0"
									},
									"scope": 712,
									"src": "10852:414:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 433,
										"nodeType": "Block",
										"src": "11755:118:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 418,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 147,
																"src": "11774:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11774:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 420,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "11788:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 421,
																		"name": "_allowances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 203,
																		"src": "11797:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 424,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 422,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 147,
																			"src": "11809:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11809:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11797:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 426,
																"indexExpression": {
																	"id": 425,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 410,
																	"src": "11823:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11797:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 427,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "11834:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11797:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 417,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "11765:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11765:80:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 430,
												"nodeType": "ExpressionStatement",
												"src": "11765:80:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11862:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 416,
												"id": 432,
												"nodeType": "Return",
												"src": "11855:11:0"
											}
										]
									},
									"documentation": {
										"id": 408,
										"nodeType": "StructuredDocumentation",
										"src": "11272:384:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "11688:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11688:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "11705:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11705:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11687:37:0"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 434,
												"src": "11749:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 414,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11749:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11748:6:0"
									},
									"scope": 712,
									"src": "11661:212:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 471,
										"nodeType": "Block",
										"src": "12459:272:0",
										"statements": [
											{
												"assignments": [
													445
												],
												"declarations": [
													{
														"constant": false,
														"id": 445,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 471,
														"src": "12469:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 444,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12469:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 452,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 446,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "12496:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 449,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 447,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 147,
																"src": "12508:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12508:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "12496:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 451,
													"indexExpression": {
														"id": 450,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 437,
														"src": "12522:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12496:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12469:61:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 454,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 445,
																"src": "12548:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 455,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 439,
																"src": "12568:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12548:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12585:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 453,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12540:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12540:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 459,
												"nodeType": "ExpressionStatement",
												"src": "12540:85:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 461,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 147,
																"src": "12644:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12644:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 463,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "12658:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 464,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 445,
																"src": "12667:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 465,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 439,
																"src": "12686:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12667:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 460,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "12635:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12635:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 468,
												"nodeType": "ExpressionStatement",
												"src": "12635:67:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12720:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 443,
												"id": 470,
												"nodeType": "Return",
												"src": "12713:11:0"
											}
										]
									},
									"documentation": {
										"id": 435,
										"nodeType": "StructuredDocumentation",
										"src": "11879:476:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "12387:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12387:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "12404:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12404:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12386:42:0"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "12453:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 441,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12453:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12452:6:0"
									},
									"scope": 712,
									"src": "12360:371:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "13292:505:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 483,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 475,
																"src": "13310:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 486,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13328:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13320:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 484,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "13320:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 487,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13320:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13310:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 489,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13332:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 482,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13302:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13302:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 491,
												"nodeType": "ExpressionStatement",
												"src": "13302:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 493,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "13390:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 496,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13411:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13403:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 494,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "13403:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 497,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13403:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "13390:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13415:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 492,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13382:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13382:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 501,
												"nodeType": "ExpressionStatement",
												"src": "13382:71:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 503,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "13485:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 504,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "13493:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 505,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "13504:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 502,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "13464:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13464:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 507,
												"nodeType": "ExpressionStatement",
												"src": "13464:47:0"
											},
											{
												"assignments": [
													509
												],
												"declarations": [
													{
														"constant": false,
														"id": 509,
														"mutability": "mutable",
														"name": "senderBalance",
														"nodeType": "VariableDeclaration",
														"scope": 541,
														"src": "13522:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 508,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13522:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 513,
												"initialValue": {
													"baseExpression": {
														"id": 510,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 197,
														"src": "13546:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 512,
													"indexExpression": {
														"id": 511,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 475,
														"src": "13556:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13546:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13522:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 515,
																"name": "senderBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 509,
																"src": "13581:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 516,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 479,
																"src": "13598:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13581:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13606:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 514,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13573:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13573:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 520,
												"nodeType": "ExpressionStatement",
												"src": "13573:74:0"
											},
											{
												"expression": {
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 521,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "13657:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 523,
														"indexExpression": {
															"id": 522,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "13667:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13657:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 526,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 524,
															"name": "senderBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 509,
															"src": "13677:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 525,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "13693:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "13677:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13657:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 528,
												"nodeType": "ExpressionStatement",
												"src": "13657:42:0"
											},
											{
												"expression": {
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 529,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "13709:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 531,
														"indexExpression": {
															"id": 530,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "13719:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "13709:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 532,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 479,
														"src": "13733:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13709:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 534,
												"nodeType": "ExpressionStatement",
												"src": "13709:30:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 536,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "13764:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "13772:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 538,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "13783:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 535,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "13755:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13755:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "EmitStatement",
												"src": "13750:40:0"
											}
										]
									},
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "12737:463:0",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "13224:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13224:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "13240:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13240:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "13259:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13259:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13223:51:0"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13292:0:0"
									},
									"scope": 712,
									"src": "13205:592:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 588,
										"nodeType": "Block",
										"src": "14133:265:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 551,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "14151:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14170:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14162:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 552,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14162:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 555,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14162:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14151:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14174:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 550,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14143:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14143:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 559,
												"nodeType": "ExpressionStatement",
												"src": "14143:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14248:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 562,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14240:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 561,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14240:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14240:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 565,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "14252:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 566,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "14261:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 560,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "14219:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14219:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 568,
												"nodeType": "ExpressionStatement",
												"src": "14219:49:0"
											},
											{
												"expression": {
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 569,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "14279:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 570,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "14295:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14279:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 572,
												"nodeType": "ExpressionStatement",
												"src": "14279:22:0"
											},
											{
												"expression": {
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 573,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "14311:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 575,
														"indexExpression": {
															"id": 574,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "14321:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14311:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 576,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "14333:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14311:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 578,
												"nodeType": "ExpressionStatement",
												"src": "14311:28:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14371:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14363:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 580,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14363:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14363:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 584,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "14375:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 585,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "14384:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 579,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "14354:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14354:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 587,
												"nodeType": "EmitStatement",
												"src": "14349:42:0"
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "13803:260:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `to` cannot be the zero address."
									},
									"id": 589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "14083:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14083:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "14100:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14100:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14082:33:0"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14133:0:0"
									},
									"scope": 712,
									"src": "14068:330:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 650,
										"nodeType": "Block",
										"src": "14783:418:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 598,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 592,
																"src": "14801:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14820:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14812:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 599,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14812:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 602,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14812:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14801:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14824:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 597,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14793:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14793:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 606,
												"nodeType": "ExpressionStatement",
												"src": "14793:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 608,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "14892:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14909:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 610,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14901:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 609,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14901:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14901:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 613,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "14913:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 607,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "14871:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14871:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 615,
												"nodeType": "ExpressionStatement",
												"src": "14871:49:0"
											},
											{
												"assignments": [
													617
												],
												"declarations": [
													{
														"constant": false,
														"id": 617,
														"mutability": "mutable",
														"name": "accountBalance",
														"nodeType": "VariableDeclaration",
														"scope": 650,
														"src": "14931:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 616,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14931:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 621,
												"initialValue": {
													"baseExpression": {
														"id": 618,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 197,
														"src": "14956:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 620,
													"indexExpression": {
														"id": 619,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "14966:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14956:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14931:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 623,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 617,
																"src": "14992:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 624,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 594,
																"src": "15010:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14992:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15018:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 622,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14984:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14984:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 628,
												"nodeType": "ExpressionStatement",
												"src": "14984:71:0"
											},
											{
												"expression": {
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 629,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "15065:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 631,
														"indexExpression": {
															"id": 630,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "15075:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15065:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 634,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 632,
															"name": "accountBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "15086:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 633,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "15103:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "15086:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15065:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "15065:44:0"
											},
											{
												"expression": {
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 637,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "15119:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 638,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 594,
														"src": "15135:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15119:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 640,
												"nodeType": "ExpressionStatement",
												"src": "15119:22:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 642,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "15166:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 645,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15183:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 644,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15175:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 643,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "15175:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15175:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 647,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "15187:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 641,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "15157:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15157:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 649,
												"nodeType": "EmitStatement",
												"src": "15152:42:0"
											}
										]
									},
									"documentation": {
										"id": 590,
										"nodeType": "StructuredDocumentation",
										"src": "14404:309:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "14733:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14733:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "14750:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14750:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14732:33:0"
									},
									"returnParameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14783:0:0"
									},
									"scope": 712,
									"src": "14718:483:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 695,
										"nodeType": "Block",
										"src": "15707:257:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 662,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 654,
																"src": "15725:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 665,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15742:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 664,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15734:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 663,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15734:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 666,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15734:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15725:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 668,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15746:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 661,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15717:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15717:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "15717:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 672,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 656,
																"src": "15803:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15822:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15814:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 673,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15814:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 676,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15814:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15803:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 678,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15826:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 671,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15795:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15795:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 680,
												"nodeType": "ExpressionStatement",
												"src": "15795:68:0"
											},
											{
												"expression": {
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 681,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "15874:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 684,
															"indexExpression": {
																"id": 682,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 654,
																"src": "15886:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15874:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 685,
														"indexExpression": {
															"id": 683,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "15893:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15874:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 686,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "15904:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15874:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "15874:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 690,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "15934:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 691,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "15941:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 692,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "15950:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 689,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 120,
														"src": "15925:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15925:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 694,
												"nodeType": "EmitStatement",
												"src": "15920:37:0"
											}
										]
									},
									"documentation": {
										"id": 652,
										"nodeType": "StructuredDocumentation",
										"src": "15207:412:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "15642:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15642:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "15657:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "15674:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15674:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15641:48:0"
									},
									"returnParameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15707:0:0"
									},
									"scope": 712,
									"src": "15624:340:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 706,
										"nodeType": "Block",
										"src": "16640:3:0",
										"statements": []
									},
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "15970:576:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "16581:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16581:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "16595:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16595:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "16607:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16607:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16580:42:0"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16640:0:0"
									},
									"scope": 712,
									"src": "16551:92:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 711,
									"mutability": "mutable",
									"name": "__gap",
									"nodeType": "VariableDeclaration",
									"scope": 712,
									"src": "16648:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$45_storage",
										"typeString": "uint256[45]"
									},
									"typeName": {
										"baseType": {
											"id": 708,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "16648:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 710,
										"length": {
											"hexValue": "3435",
											"id": 709,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "16656:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_45_by_1",
												"typeString": "int_const 45"
											},
											"value": "45"
										},
										"nodeType": "ArrayTypeName",
										"src": "16648:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$45_storage_ptr",
											"typeString": "uint256[45]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 713,
							"src": "7083:9593:0"
						}
					],
					"src": "33:16643:0"
				},
				"id": 0
			}
		}
	}
}