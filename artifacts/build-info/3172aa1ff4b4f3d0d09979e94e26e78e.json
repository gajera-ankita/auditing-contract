{
	"id": "3172aa1ff4b4f3d0d09979e94e26e78e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.23",
	"solcLongVersion": "0.8.23+commit.f704f362",
	"input": {
		"language": "Solidity",
		"sources": {
			"ERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC20Upgradeable.sol\";\r\nimport \"./IERC20MetadataUpgradeable.sol\";\r\nimport \"./ContextUpgradeable.sol\";\r\nimport \"./Initializable.sol\";\r\n\r\n/**\r\n * @dev Implementation of the {IERC20} interface.\r\n *\r\n * This implementation is agnostic to the way tokens are created. This means\r\n * that a supply mechanism has to be added in a derived contract using {_mint}.\r\n * For a generic mechanism see {ERC20PresetMinterPauser}.\r\n *\r\n * TIP: For a detailed writeup see our guide\r\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\r\n * to implement supply mechanisms].\r\n *\r\n * We have followed general OpenZeppelin guidelines: functions revert instead\r\n * of returning `false` on failure. This behavior is nonetheless conventional\r\n * and does not conflict with the expectations of ERC20 applications.\r\n *\r\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\r\n * This allows applications to reconstruct the allowance for all accounts just\r\n * by listening to said events. Other implementations of the EIP may not emit\r\n * these events, as it isn't required by the specification.\r\n *\r\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\r\n * functions have been added to mitigate the well-known issues around setting\r\n * allowances. See {IERC20-approve}.\r\n */\r\ncontract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {\r\n    mapping (address => uint256) private _balances;\r\n\r\n    mapping (address => mapping (address => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n\r\n    /**\r\n     * @dev Sets the values for {name} and {symbol}.\r\n     *\r\n     * The defaut value of {decimals} is 18. To select a different value for\r\n     * {decimals} you should overload it.\r\n     *\r\n     * All two of these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    function __ERC20_init(string memory name_, string memory symbol_) internal initializer {\r\n        __Context_init_unchained();\r\n        __ERC20_init_unchained(name_, symbol_);\r\n    }\r\n\r\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal initializer {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\r\n     * overridden;\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IERC20-balanceOf} and {IERC20-transfer}.\r\n     */\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return 18;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-totalSupply}.\r\n     */\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-balanceOf}.\r\n     */\r\n    function balanceOf(address account) public view virtual override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `recipient` cannot be the zero address.\r\n     * - the caller must have a balance of at least `amount`.\r\n     */\r\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\r\n        _transfer(_msgSender(), recipient, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-allowance}.\r\n     */\r\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-approve}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        _approve(_msgSender(), spender, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {ERC20}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `sender` and `recipient` cannot be the zero address.\r\n     * - `sender` must have a balance of at least `amount`.\r\n     * - the caller must have allowance for ``sender``'s tokens of at least\r\n     * `amount`.\r\n     */\r\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\r\n        _transfer(sender, recipient, amount);\r\n\r\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\r\n        require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\");\r\n        _approve(sender, _msgSender(), currentAllowance - amount);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `spender` must have allowance for the caller of at least\r\n     * `subtractedValue`.\r\n     */\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\r\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\r\n        _approve(_msgSender(), spender, currentAllowance - subtractedValue);\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\r\n     *\r\n     * This is internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `sender` cannot be the zero address.\r\n     * - `recipient` cannot be the zero address.\r\n     * - `sender` must have a balance of at least `amount`.\r\n     */\r\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\r\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\r\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\r\n\r\n        _beforeTokenTransfer(sender, recipient, amount);\r\n\r\n        uint256 senderBalance = _balances[sender];\r\n        require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\");\r\n        _balances[sender] = senderBalance - amount;\r\n        _balances[recipient] += amount;\r\n\r\n        emit Transfer(sender, recipient, amount);\r\n    }\r\n\r\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n     * the total supply.\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     */\r\n    function _mint(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: mint to the zero address\");\r\n\r\n        _beforeTokenTransfer(address(0), account, amount);\r\n\r\n        _totalSupply += amount;\r\n        _balances[account] += amount;\r\n        emit Transfer(address(0), account, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from `account`, reducing the\r\n     * total supply.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     * - `account` must have at least `amount` tokens.\r\n     */\r\n    function _burn(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: burn from the zero address\");\r\n\r\n        _beforeTokenTransfer(account, address(0), amount);\r\n\r\n        uint256 accountBalance = _balances[account];\r\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\r\n        _balances[account] = accountBalance - amount;\r\n        _totalSupply -= amount;\r\n\r\n        emit Transfer(account, address(0), amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\r\n     *\r\n     * This internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * will be to transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\r\n    uint256[45] private __gap;\r\n}"
			},
			"Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\n// solhint-disable-next-line compiler-version\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\r\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\r\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\r\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\r\n *\r\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\r\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\r\n *\r\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\r\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\r\n */\r\nabstract contract Initializable {\r\n\r\n    /**\r\n     * @dev Indicates that the contract has been initialized.\r\n     */\r\n    bool private _initialized;\r\n\r\n    /**\r\n     * @dev Indicates that the contract is in the process of being initialized.\r\n     */\r\n    bool private _initializing;\r\n\r\n    /**\r\n     * @dev Modifier to protect an initializer function from being invoked twice.\r\n     */\r\n    modifier initializer() {\r\n        require(_initializing || !_initialized, \"Initializable: contract is already initialized\");\r\n\r\n        bool isTopLevelCall = !_initializing;\r\n        if (isTopLevelCall) {\r\n            _initializing = true;\r\n            _initialized = true;\r\n        }\r\n\r\n        _;\r\n\r\n        if (isTopLevelCall) {\r\n            _initializing = false;\r\n        }\r\n    }\r\n}"
			},
			"ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\nimport \"./Initializable.sol\";\r\n\r\n/*\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract ContextUpgradeable is Initializable {\r\n    function __Context_init() internal initializer {\r\n        __Context_init_unchained();\r\n    }\r\n\r\n    function __Context_init_unchained() internal initializer {\r\n    }\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\r\n        return msg.data;\r\n    }\r\n    uint256[50] private __gap;\r\n}"
			},
			"IERC20MetadataUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC20Upgradeable.sol\";\r\n\r\n/**\r\n * @dev Interface for the optional metadata functions from the ERC20 standard.\r\n *\r\n * _Available since v4.1._\r\n */\r\ninterface IERC20MetadataUpgradeable is IERC20Upgradeable {\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the decimals places of the token.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n}"
			},
			"IERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20Upgradeable {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ContextUpgradeable.sol\":{\"keccak256\":\"0x74fbdcec83d3842760c7ae7aec2bcd7ecd6a3fa890d597b38fb61480da553ca6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://088f61b256418ca2c3d3b845af6793a86ede9c9bbe1553887bad3782868a2304\",\"dweb:/ipfs/QmexjQidgCAZLn84sHPH4CrcaRVR3jAbCQbtHN8g3gh3df\"]},\"Initializable.sol\":{\"keccak256\":\"0x6f6a299eb96c7c419ae0dc45766224d43501702747d4a57f64c87373889f2651\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5ce2c6e10c1a74ef44a20110b3406674171d0bc25448d709385667c3c6046eb\",\"dweb:/ipfs/QmdjbuhQWiPnkbxDQp5VwXSahgwWXy1mJutt36yNHruPyh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 687,
								"contract": "ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 690,
								"contract": "ContextUpgradeable.sol:ContextUpgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 43,
								"contract": "ContextUpgradeable.sol:ContextUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							}
						],
						"types": {
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC20Upgradeable.sol": {
				"ERC20Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ERC20Upgradeable.sol\":1396:11266  contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ERC20Upgradeable.sol\":1396:11266  contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ERC20Upgradeable.sol\":2467:2567  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20Upgradeable.sol\":4634:4803  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"ERC20Upgradeable.sol\":4634:4803  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"ERC20Upgradeable.sol\":3587:3695  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"ERC20Upgradeable.sol\":3675:3687  _totalSupply */\n      sload(0x35)\n        /* \"ERC20Upgradeable.sol\":3587:3695  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"ERC20Upgradeable.sol\":3587:3695  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"ERC20Upgradeable.sol\":5285:5707  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"ERC20Upgradeable.sol\":3429:3522  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"ERC20Upgradeable.sol\":3512:3514  18 */\n      0x12\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \"ERC20Upgradeable.sol\":3429:3522  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1711:1895   */\n      jump\n        /* \"ERC20Upgradeable.sol\":6116:6331  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"ERC20Upgradeable.sol\":3758:3885  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20Upgradeable.sol\":3859:3877  _balances[account] */\n      and\n        /* \"ERC20Upgradeable.sol\":3832:3839  uint256 */\n      0x00\n        /* \"ERC20Upgradeable.sol\":3859:3877  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC20Upgradeable.sol\":3859:3868  _balances */\n      0x33\n        /* \"ERC20Upgradeable.sol\":3859:3877  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"ERC20Upgradeable.sol\":3758:3885  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"ERC20Upgradeable.sol\":2686:2790  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"ERC20Upgradeable.sol\":6834:7211  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"ERC20Upgradeable.sol\":4098:4273  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"ERC20Upgradeable.sol\":4336:4487  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20Upgradeable.sol\":4452:4470  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"ERC20Upgradeable.sol\":4425:4432  uint256 */\n      0x00\n        /* \"ERC20Upgradeable.sol\":4452:4470  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC20Upgradeable.sol\":4452:4463  _allowances */\n      0x34\n        /* \"ERC20Upgradeable.sol\":4452:4470  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20Upgradeable.sol\":4452:4479  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"ERC20Upgradeable.sol\":4336:4487  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\n        /* \"ERC20Upgradeable.sol\":2467:2567  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"ERC20Upgradeable.sol\":2521:2534  string memory */\n      0x60\n        /* \"ERC20Upgradeable.sol\":2554:2559  _name */\n      0x36\n        /* \"ERC20Upgradeable.sol\":2547:2559  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC20Upgradeable.sol\":2467:2567  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20Upgradeable.sol\":4634:4803  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"ERC20Upgradeable.sol\":4717:4721  bool */\n      0x00\n        /* \"ERC20Upgradeable.sol\":4734:4773  _approve(_msgSender(), spender, amount) */\n      tag_71\n        /* \"ContextUpgradeable.sol\":911:921  msg.sender */\n      caller\n        /* \"ERC20Upgradeable.sol\":4757:4764  spender */\n      dup5\n        /* \"ERC20Upgradeable.sol\":4766:4772  amount */\n      dup5\n        /* \"ERC20Upgradeable.sol\":4734:4742  _approve */\n      tag_74\n        /* \"ERC20Upgradeable.sol\":4734:4773  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_71:\n      pop\n        /* \"ERC20Upgradeable.sol\":4791:4795  true */\n      0x01\n        /* \"ERC20Upgradeable.sol\":4634:4803  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_70:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20Upgradeable.sol\":5285:5707  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_32:\n        /* \"ERC20Upgradeable.sol\":5391:5395  bool */\n      0x00\n        /* \"ERC20Upgradeable.sol\":5408:5444  _transfer(sender, recipient, amount) */\n      tag_77\n        /* \"ERC20Upgradeable.sol\":5418:5424  sender */\n      dup5\n        /* \"ERC20Upgradeable.sol\":5426:5435  recipient */\n      dup5\n        /* \"ERC20Upgradeable.sol\":5437:5443  amount */\n      dup5\n        /* \"ERC20Upgradeable.sol\":5408:5417  _transfer */\n      tag_78\n        /* \"ERC20Upgradeable.sol\":5408:5444  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_77:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20Upgradeable.sol\":5484:5503  _allowances[sender] */\n      dup5\n      and\n        /* \"ERC20Upgradeable.sol\":5457:5481  uint256 currentAllowance */\n      0x00\n        /* \"ERC20Upgradeable.sol\":5484:5503  _allowances[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC20Upgradeable.sol\":5484:5495  _allowances */\n      0x34\n        /* \"ERC20Upgradeable.sol\":5484:5503  _allowances[sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ContextUpgradeable.sol\":911:921  msg.sender */\n      caller\n        /* \"ERC20Upgradeable.sol\":5484:5517  _allowances[sender][_msgSender()] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"ERC20Upgradeable.sol\":5536:5562  currentAllowance >= amount */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"ERC20Upgradeable.sol\":5528:5607  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2943:2945   */\n      0x20\n        /* \"ERC20Upgradeable.sol\":5528:5607  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2925:2946   */\n      mstore\n        /* \"#utility.yul\":2982:2984   */\n      0x28\n        /* \"#utility.yul\":2962:2980   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2955:2985   */\n      mstore\n        /* \"#utility.yul\":3021:3055   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732061\n        /* \"#utility.yul\":3001:3019   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2994:3056   */\n      mstore\n      shl(0xc0, 0x6c6c6f77616e6365)\n        /* \"#utility.yul\":3072:3090   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3065:3103   */\n      mstore\n        /* \"#utility.yul\":3120:3139   */\n      0x84\n      add\n        /* \"ERC20Upgradeable.sol\":5528:5607  require(currentAllowance >= amount, \"ERC20: transfer amount exceeds allowance\") */\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \"ERC20Upgradeable.sol\":5618:5675  _approve(sender, _msgSender(), currentAllowance - amount) */\n      tag_83\n        /* \"ERC20Upgradeable.sol\":5627:5633  sender */\n      dup6\n        /* \"ContextUpgradeable.sol\":911:921  msg.sender */\n      caller\n        /* \"ERC20Upgradeable.sol\":5649:5674  currentAllowance - amount */\n      tag_85\n        /* \"ERC20Upgradeable.sol\":5668:5674  amount */\n      dup7\n        /* \"ERC20Upgradeable.sol\":5649:5665  currentAllowance */\n      dup6\n        /* \"ERC20Upgradeable.sol\":5649:5674  currentAllowance - amount */\n      tag_86\n      jump\t// in\n    tag_85:\n        /* \"ERC20Upgradeable.sol\":5618:5626  _approve */\n      tag_74\n        /* \"ERC20Upgradeable.sol\":5618:5675  _approve(sender, _msgSender(), currentAllowance - amount) */\n      jump\t// in\n    tag_83:\n      pop\n        /* \"ERC20Upgradeable.sol\":5695:5699  true */\n      0x01\n      swap5\n        /* \"ERC20Upgradeable.sol\":5285:5707  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20Upgradeable.sol\":6116:6331  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"ContextUpgradeable.sol\":911:921  msg.sender */\n      caller\n        /* \"ERC20Upgradeable.sol\":6204:6208  bool */\n      0x00\n        /* \"ERC20Upgradeable.sol\":6253:6278  _allowances[_msgSender()] */\n      dup2\n      dup2\n      mstore\n        /* \"ERC20Upgradeable.sol\":6253:6264  _allowances */\n      0x34\n        /* \"ERC20Upgradeable.sol\":6253:6278  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20Upgradeable.sol\":6253:6287  _allowances[_msgSender()][spender] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"ERC20Upgradeable.sol\":6204:6208  bool */\n      swap1\n      swap2\n        /* \"ERC20Upgradeable.sol\":6221:6301  _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue) */\n      tag_71\n      swap2\n        /* \"ERC20Upgradeable.sol\":6244:6251  spender */\n      dup6\n      swap1\n        /* \"ERC20Upgradeable.sol\":6253:6300  _allowances[_msgSender()][spender] + addedValue */\n      tag_85\n      swap1\n        /* \"ERC20Upgradeable.sol\":6290:6300  addedValue */\n      dup7\n      swap1\n        /* \"ERC20Upgradeable.sol\":6253:6300  _allowances[_msgSender()][spender] + addedValue */\n      tag_93\n      jump\t// in\n        /* \"ERC20Upgradeable.sol\":2686:2790  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"ERC20Upgradeable.sol\":2742:2755  string memory */\n      0x60\n        /* \"ERC20Upgradeable.sol\":2775:2782  _symbol */\n      0x37\n        /* \"ERC20Upgradeable.sol\":2768:2782  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"ERC20Upgradeable.sol\":6834:7211  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"ContextUpgradeable.sol\":911:921  msg.sender */\n      caller\n        /* \"ERC20Upgradeable.sol\":6927:6931  bool */\n      0x00\n        /* \"ERC20Upgradeable.sol\":6971:6996  _allowances[_msgSender()] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC20Upgradeable.sol\":6971:6982  _allowances */\n      0x34\n        /* \"ERC20Upgradeable.sol\":6971:6996  _allowances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20Upgradeable.sol\":6971:7005  _allowances[_msgSender()][spender] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n        /* \"ERC20Upgradeable.sol\":7024:7059  currentAllowance >= subtractedValue */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"ERC20Upgradeable.sol\":7016:7101  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_103\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3747:3749   */\n      0x20\n        /* \"ERC20Upgradeable.sol\":7016:7101  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3729:3750   */\n      mstore\n        /* \"#utility.yul\":3786:3788   */\n      0x25\n        /* \"#utility.yul\":3766:3784   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3759:3789   */\n      mstore\n        /* \"#utility.yul\":3825:3859   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3805:3823   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3798:3860   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3876:3894   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3869:3904   */\n      mstore\n        /* \"#utility.yul\":3921:3940   */\n      0x84\n      add\n        /* \"ERC20Upgradeable.sol\":7016:7101  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_81\n        /* \"#utility.yul\":3545:3946   */\n      jump\n        /* \"ERC20Upgradeable.sol\":7016:7101  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_103:\n        /* \"ERC20Upgradeable.sol\":7112:7179  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n      tag_106\n        /* \"ContextUpgradeable.sol\":911:921  msg.sender */\n      caller\n        /* \"ERC20Upgradeable.sol\":7135:7142  spender */\n      dup6\n        /* \"ERC20Upgradeable.sol\":7144:7178  currentAllowance - subtractedValue */\n      tag_85\n        /* \"ERC20Upgradeable.sol\":7163:7178  subtractedValue */\n      dup7\n        /* \"ERC20Upgradeable.sol\":7144:7160  currentAllowance */\n      dup6\n        /* \"ERC20Upgradeable.sol\":7144:7178  currentAllowance - subtractedValue */\n      tag_86\n      jump\t// in\n        /* \"ERC20Upgradeable.sol\":7112:7179  _approve(_msgSender(), spender, currentAllowance - subtractedValue) */\n    tag_106:\n      pop\n        /* \"ERC20Upgradeable.sol\":7199:7203  true */\n      0x01\n      swap4\n        /* \"ERC20Upgradeable.sol\":6834:7211  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20Upgradeable.sol\":4098:4273  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"ERC20Upgradeable.sol\":4184:4188  bool */\n      0x00\n        /* \"ERC20Upgradeable.sol\":4201:4243  _transfer(_msgSender(), recipient, amount) */\n      tag_71\n        /* \"ContextUpgradeable.sol\":911:921  msg.sender */\n      caller\n        /* \"ERC20Upgradeable.sol\":4225:4234  recipient */\n      dup5\n        /* \"ERC20Upgradeable.sol\":4236:4242  amount */\n      dup5\n        /* \"ERC20Upgradeable.sol\":4201:4210  _transfer */\n      tag_78\n        /* \"ERC20Upgradeable.sol\":4201:4243  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"ERC20Upgradeable.sol\":10190:10536  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20Upgradeable.sol\":10292:10311  owner != address(0) */\n      dup4\n      and\n        /* \"ERC20Upgradeable.sol\":10284:10352  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4153:4155   */\n      0x20\n        /* \"ERC20Upgradeable.sol\":10284:10352  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4135:4156   */\n      mstore\n        /* \"#utility.yul\":4192:4194   */\n      0x24\n        /* \"#utility.yul\":4172:4190   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4165:4195   */\n      mstore\n        /* \"#utility.yul\":4231:4265   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4211:4229   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4204:4266   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":4282:4300   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4275:4309   */\n      mstore\n        /* \"#utility.yul\":4326:4345   */\n      0x84\n      add\n        /* \"ERC20Upgradeable.sol\":10284:10352  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_81\n        /* \"#utility.yul\":3951:4351   */\n      jump\n        /* \"ERC20Upgradeable.sol\":10284:10352  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20Upgradeable.sol\":10371:10392  spender != address(0) */\n      dup3\n      and\n        /* \"ERC20Upgradeable.sol\":10363:10431  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4558:4560   */\n      0x20\n        /* \"ERC20Upgradeable.sol\":10363:10431  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4540:4561   */\n      mstore\n        /* \"#utility.yul\":4597:4599   */\n      0x22\n        /* \"#utility.yul\":4577:4595   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4570:4600   */\n      mstore\n        /* \"#utility.yul\":4636:4670   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4616:4634   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4609:4671   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4687:4705   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4680:4712   */\n      mstore\n        /* \"#utility.yul\":4729:4748   */\n      0x84\n      add\n        /* \"ERC20Upgradeable.sol\":10363:10431  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_81\n        /* \"#utility.yul\":4356:4754   */\n      jump\n        /* \"ERC20Upgradeable.sol\":10363:10431  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_118:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20Upgradeable.sol\":10444:10462  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"ERC20Upgradeable.sol\":10444:10455  _allowances */\n      0x34\n        /* \"ERC20Upgradeable.sol\":10444:10462  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"ERC20Upgradeable.sol\":10444:10471  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"ERC20Upgradeable.sol\":10444:10480  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"ERC20Upgradeable.sol\":10496:10528  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup5\n      dup2\n      mstore\n        /* \"ERC20Upgradeable.sol\":10496:10528  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"ERC20Upgradeable.sol\":10496:10528  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20Upgradeable.sol\":10190:10536  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20Upgradeable.sol\":7701:8305  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n    tag_78:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20Upgradeable.sol\":7807:7827  sender != address(0) */\n      dup4\n      and\n        /* \"ERC20Upgradeable.sol\":7799:7869  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4961:4963   */\n      0x20\n        /* \"ERC20Upgradeable.sol\":7799:7869  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4943:4964   */\n      mstore\n        /* \"#utility.yul\":5000:5002   */\n      0x25\n        /* \"#utility.yul\":4980:4998   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4973:5003   */\n      mstore\n        /* \"#utility.yul\":5039:5073   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":5019:5037   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5012:5074   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":5090:5108   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5083:5118   */\n      mstore\n        /* \"#utility.yul\":5135:5154   */\n      0x84\n      add\n        /* \"ERC20Upgradeable.sol\":7799:7869  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_81\n        /* \"#utility.yul\":4759:5160   */\n      jump\n        /* \"ERC20Upgradeable.sol\":7799:7869  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n    tag_123:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20Upgradeable.sol\":7888:7911  recipient != address(0) */\n      dup3\n      and\n        /* \"ERC20Upgradeable.sol\":7880:7951  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5367:5369   */\n      0x20\n        /* \"ERC20Upgradeable.sol\":7880:7951  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5349:5370   */\n      mstore\n        /* \"#utility.yul\":5406:5408   */\n      0x23\n        /* \"#utility.yul\":5386:5404   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5379:5409   */\n      mstore\n        /* \"#utility.yul\":5445:5479   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5425:5443   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5418:5480   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5496:5514   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5489:5522   */\n      mstore\n        /* \"#utility.yul\":5539:5558   */\n      0x84\n      add\n        /* \"ERC20Upgradeable.sol\":7880:7951  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_81\n        /* \"#utility.yul\":5165:5564   */\n      jump\n        /* \"ERC20Upgradeable.sol\":7880:7951  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n    tag_126:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20Upgradeable.sol\":8048:8065  _balances[sender] */\n      dup4\n      and\n        /* \"ERC20Upgradeable.sol\":8024:8045  uint256 senderBalance */\n      0x00\n        /* \"ERC20Upgradeable.sol\":8048:8065  _balances[sender] */\n      swap1\n      dup2\n      mstore\n        /* \"ERC20Upgradeable.sol\":8048:8057  _balances */\n      0x33\n        /* \"ERC20Upgradeable.sol\":8048:8065  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ERC20Upgradeable.sol\":8084:8107  senderBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"ERC20Upgradeable.sol\":8076:8150  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_131\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5771:5773   */\n      0x20\n        /* \"ERC20Upgradeable.sol\":8076:8150  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5753:5774   */\n      mstore\n        /* \"#utility.yul\":5810:5812   */\n      0x26\n        /* \"#utility.yul\":5790:5808   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5783:5813   */\n      mstore\n        /* \"#utility.yul\":5849:5883   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5829:5847   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5822:5884   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5900:5918   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5893:5929   */\n      mstore\n        /* \"#utility.yul\":5946:5965   */\n      0x84\n      add\n        /* \"ERC20Upgradeable.sol\":8076:8150  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_81\n        /* \"#utility.yul\":5569:5971   */\n      jump\n        /* \"ERC20Upgradeable.sol\":8076:8150  require(senderBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_131:\n        /* \"ERC20Upgradeable.sol\":8181:8203  senderBalance - amount */\n      tag_134\n        /* \"ERC20Upgradeable.sol\":8197:8203  amount */\n      dup3\n        /* \"ERC20Upgradeable.sol\":8181:8194  senderBalance */\n      dup3\n        /* \"ERC20Upgradeable.sol\":8181:8203  senderBalance - amount */\n      tag_86\n      jump\t// in\n    tag_134:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20Upgradeable.sol\":8161:8178  _balances[sender] */\n      dup1\n      dup7\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"ERC20Upgradeable.sol\":8161:8170  _balances */\n      0x33\n        /* \"ERC20Upgradeable.sol\":8161:8178  _balances[sender] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"ERC20Upgradeable.sol\":8161:8203  _balances[sender] = senderBalance - amount */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"ERC20Upgradeable.sol\":8214:8234  _balances[recipient] */\n      swap1\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"ERC20Upgradeable.sol\":8214:8244  _balances[recipient] += amount */\n      dup1\n      sload\n        /* \"ERC20Upgradeable.sol\":8238:8244  amount */\n      dup5\n      swap3\n        /* \"ERC20Upgradeable.sol\":8161:8178  _balances[sender] */\n      swap1\n        /* \"ERC20Upgradeable.sol\":8214:8244  _balances[recipient] += amount */\n      tag_135\n      swap1\n        /* \"ERC20Upgradeable.sol\":8238:8244  amount */\n      dup5\n      swap1\n        /* \"ERC20Upgradeable.sol\":8214:8244  _balances[recipient] += amount */\n      tag_93\n      jump\t// in\n    tag_135:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20Upgradeable.sol\":8279:8288  recipient */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20Upgradeable.sol\":8262:8297  Transfer(sender, recipient, amount) */\n      and\n        /* \"ERC20Upgradeable.sol\":8271:8277  sender */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ERC20Upgradeable.sol\":8262:8297  Transfer(sender, recipient, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"ERC20Upgradeable.sol\":8290:8296  amount */\n      dup5\n        /* \"ERC20Upgradeable.sol\":8262:8297  Transfer(sender, recipient, amount) */\n      mload(0x40)\n      tag_136\n      swap2\n        /* \"#utility.yul\":1342:1367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n      swap1\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"ERC20Upgradeable.sol\":8262:8297  Transfer(sender, recipient, amount) */\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20Upgradeable.sol\":7788:8305  {... */\n      pop\n        /* \"ERC20Upgradeable.sol\":7701:8305  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:562   */\n    tag_18:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      0x20\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_142:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_142)\n    tag_144:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_138:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_146\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_146:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_21:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_148\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_148:\n        /* \"#utility.yul\":913:942   */\n      tag_149\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_138\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1706   */\n    tag_31:\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1463:1469   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x60\n        /* \"#utility.yul\":1512:1521   */\n      dup5\n        /* \"#utility.yul\":1503:1510   */\n      dup7\n        /* \"#utility.yul\":1499:1522   */\n      sub\n        /* \"#utility.yul\":1495:1527   */\n      slt\n        /* \"#utility.yul\":1492:1544   */\n      iszero\n      tag_153\n      jumpi\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1537:1538   */\n      dup1\n        /* \"#utility.yul\":1530:1542   */\n      revert\n        /* \"#utility.yul\":1492:1544   */\n    tag_153:\n        /* \"#utility.yul\":1563:1592   */\n      tag_154\n        /* \"#utility.yul\":1582:1591   */\n      dup5\n        /* \"#utility.yul\":1563:1592   */\n      tag_138\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":1553:1592   */\n      swap3\n      pop\n        /* \"#utility.yul\":1611:1649   */\n      tag_155\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup6\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1611:1649   */\n      tag_138\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":1601:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1698   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n        /* \"#utility.yul\":1658:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1706   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1900:2086   */\n    tag_44:\n        /* \"#utility.yul\":1959:1965   */\n      0x00\n        /* \"#utility.yul\":2012:2014   */\n      0x20\n        /* \"#utility.yul\":2000:2009   */\n      dup3\n        /* \"#utility.yul\":1991:1998   */\n      dup5\n        /* \"#utility.yul\":1987:2010   */\n      sub\n        /* \"#utility.yul\":1983:2015   */\n      slt\n        /* \"#utility.yul\":1980:2032   */\n      iszero\n      tag_158\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1980:2032   */\n    tag_158:\n        /* \"#utility.yul\":2051:2080   */\n      tag_159\n        /* \"#utility.yul\":2070:2079   */\n      dup3\n        /* \"#utility.yul\":2051:2080   */\n      tag_138\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":2041:2080   */\n      swap4\n        /* \"#utility.yul\":1900:2086   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2351   */\n    tag_60:\n        /* \"#utility.yul\":2159:2165   */\n      0x00\n        /* \"#utility.yul\":2167:2173   */\n      dup1\n        /* \"#utility.yul\":2220:2222   */\n      0x40\n        /* \"#utility.yul\":2208:2217   */\n      dup4\n        /* \"#utility.yul\":2199:2206   */\n      dup6\n        /* \"#utility.yul\":2195:2218   */\n      sub\n        /* \"#utility.yul\":2191:2223   */\n      slt\n        /* \"#utility.yul\":2188:2240   */\n      iszero\n      tag_161\n      jumpi\n        /* \"#utility.yul\":2236:2237   */\n      0x00\n        /* \"#utility.yul\":2233:2234   */\n      dup1\n        /* \"#utility.yul\":2226:2238   */\n      revert\n        /* \"#utility.yul\":2188:2240   */\n    tag_161:\n        /* \"#utility.yul\":2259:2288   */\n      tag_162\n        /* \"#utility.yul\":2278:2287   */\n      dup4\n        /* \"#utility.yul\":2259:2288   */\n      tag_138\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":2249:2288   */\n      swap2\n      pop\n        /* \"#utility.yul\":2307:2345   */\n      tag_163\n        /* \"#utility.yul\":2341:2343   */\n      0x20\n        /* \"#utility.yul\":2330:2339   */\n      dup5\n        /* \"#utility.yul\":2326:2344   */\n      add\n        /* \"#utility.yul\":2307:2345   */\n      tag_138\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":2297:2345   */\n      swap1\n      pop\n        /* \"#utility.yul\":2091:2351   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2356:2736   */\n    tag_65:\n        /* \"#utility.yul\":2435:2436   */\n      0x01\n        /* \"#utility.yul\":2431:2443   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2478:2490   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2499:2560   */\n      tag_165\n      jumpi\n        /* \"#utility.yul\":2553:2557   */\n      0x7f\n        /* \"#utility.yul\":2545:2551   */\n      dup3\n        /* \"#utility.yul\":2541:2558   */\n      and\n        /* \"#utility.yul\":2531:2558   */\n      swap2\n      pop\n        /* \"#utility.yul\":2499:2560   */\n    tag_165:\n        /* \"#utility.yul\":2606:2608   */\n      0x20\n        /* \"#utility.yul\":2598:2604   */\n      dup3\n        /* \"#utility.yul\":2595:2609   */\n      lt\n        /* \"#utility.yul\":2575:2593   */\n      dup2\n        /* \"#utility.yul\":2572:2610   */\n      sub\n        /* \"#utility.yul\":2569:2730   */\n      tag_166\n      jumpi\n        /* \"#utility.yul\":2652:2662   */\n      0x4e487b71\n        /* \"#utility.yul\":2647:2650   */\n      0xe0\n        /* \"#utility.yul\":2643:2663   */\n      shl\n        /* \"#utility.yul\":2640:2641   */\n      0x00\n        /* \"#utility.yul\":2633:2664   */\n      mstore\n        /* \"#utility.yul\":2687:2691   */\n      0x22\n        /* \"#utility.yul\":2684:2685   */\n      0x04\n        /* \"#utility.yul\":2677:2692   */\n      mstore\n        /* \"#utility.yul\":2715:2719   */\n      0x24\n        /* \"#utility.yul\":2712:2713   */\n      0x00\n        /* \"#utility.yul\":2705:2720   */\n      revert\n        /* \"#utility.yul\":2569:2730   */\n    tag_166:\n      pop\n        /* \"#utility.yul\":2356:2736   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3150:3277   */\n    tag_139:\n        /* \"#utility.yul\":3211:3221   */\n      0x4e487b71\n        /* \"#utility.yul\":3206:3209   */\n      0xe0\n        /* \"#utility.yul\":3202:3222   */\n      shl\n        /* \"#utility.yul\":3199:3200   */\n      0x00\n        /* \"#utility.yul\":3192:3223   */\n      mstore\n        /* \"#utility.yul\":3242:3246   */\n      0x11\n        /* \"#utility.yul\":3239:3240   */\n      0x04\n        /* \"#utility.yul\":3232:3247   */\n      mstore\n        /* \"#utility.yul\":3266:3270   */\n      0x24\n        /* \"#utility.yul\":3263:3264   */\n      0x00\n        /* \"#utility.yul\":3256:3271   */\n      revert\n        /* \"#utility.yul\":3282:3410   */\n    tag_86:\n        /* \"#utility.yul\":3349:3358   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":3370:3381   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":3367:3404   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":3384:3402   */\n      tag_70\n      tag_139\n      jump\t// in\n        /* \"#utility.yul\":3415:3540   */\n    tag_93:\n        /* \"#utility.yul\":3480:3489   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3501:3511   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3498:3534   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":3514:3532   */\n      tag_70\n      tag_139\n      jump\t// in\n\n    auxdata: 0xa26469706673582212206fd1bf3d6c43566062dde49bcb6d2decc01be16459ad8090a65579d2b1a2cc1e64736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506108bf8061001d5f395ff3fe608060405234801561000f575f80fd5b50600436106100a6575f3560e01c8063395093511161006e578063395093511461011f57806370a082311461013257806395d89b411461015a578063a457c2d714610162578063a9059cbb14610175578063dd62ed3e14610188575f80fd5b806306fdde03146100aa578063095ea7b3146100c857806318160ddd146100eb57806323b872dd146100fd578063313ce56714610110575b5f80fd5b6100b26101c0565b6040516100bf91906106fe565b60405180910390f35b6100db6100d6366004610765565b610250565b60405190151581526020016100bf565b6035545b6040519081526020016100bf565b6100db61010b36600461078d565b610266565b604051601281526020016100bf565b6100db61012d366004610765565b61031a565b6100ef6101403660046107c6565b6001600160a01b03165f9081526033602052604090205490565b6100b2610350565b6100db610170366004610765565b61035f565b6100db610183366004610765565b6103f9565b6100ef6101963660046107e6565b6001600160a01b039182165f90815260346020908152604080832093909416825291909152205490565b6060603680546101cf90610817565b80601f01602080910402602001604051908101604052809291908181526020018280546101fb90610817565b80156102465780601f1061021d57610100808354040283529160200191610246565b820191905f5260205f20905b81548152906001019060200180831161022957829003601f168201915b5050505050905090565b5f61025c338484610405565b5060015b92915050565b5f610272848484610528565b6001600160a01b0384165f908152603460209081526040808320338452909152902054828110156102fb5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61030f853361030a8685610863565b610405565b506001949350505050565b335f8181526034602090815260408083206001600160a01b0387168452909152812054909161025c91859061030a908690610876565b6060603780546101cf90610817565b335f9081526034602090815260408083206001600160a01b0386168452909152812054828110156103e05760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102f2565b6103ef338561030a8685610863565b5060019392505050565b5f61025c338484610528565b6001600160a01b0383166104675760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102f2565b6001600160a01b0382166104c85760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102f2565b6001600160a01b038381165f8181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03831661058c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102f2565b6001600160a01b0382166105ee5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102f2565b6001600160a01b0383165f90815260336020526040902054818110156106655760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102f2565b61066f8282610863565b6001600160a01b038086165f9081526033602052604080822093909355908516815290812080548492906106a4908490610876565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106f091815260200190565b60405180910390a350505050565b5f602080835283518060208501525f5b8181101561072a5785810183015185820160400152820161070e565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610760575f80fd5b919050565b5f8060408385031215610776575f80fd5b61077f8361074a565b946020939093013593505050565b5f805f6060848603121561079f575f80fd5b6107a88461074a565b92506107b66020850161074a565b9150604084013590509250925092565b5f602082840312156107d6575f80fd5b6107df8261074a565b9392505050565b5f80604083850312156107f7575f80fd5b6108008361074a565b915061080e6020840161074a565b90509250929050565b600181811c9082168061082b57607f821691505b60208210810361084957634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156102605761026061084f565b808201808211156102605761026061084f56fea26469706673582212206fd1bf3d6c43566062dde49bcb6d2decc01be16459ad8090a65579d2b1a2cc1e64736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x8BF DUP1 PUSH2 0x1D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x188 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x110 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH2 0x1C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0xD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x765 JUMP JUMPDEST PUSH2 0x250 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH1 0x35 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0x78D JUMP JUMPDEST PUSH2 0x266 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x765 JUMP JUMPDEST PUSH2 0x31A JUMP JUMPDEST PUSH2 0xEF PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x7C6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x350 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x765 JUMP JUMPDEST PUSH2 0x35F JUMP JUMPDEST PUSH2 0xDB PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0x765 JUMP JUMPDEST PUSH2 0x3F9 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0x7E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x1CF SWAP1 PUSH2 0x817 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1FB SWAP1 PUSH2 0x817 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x246 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x21D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x246 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x229 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x25C CALLER DUP5 DUP5 PUSH2 0x405 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x272 DUP5 DUP5 DUP5 PUSH2 0x528 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x2FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x30F DUP6 CALLER PUSH2 0x30A DUP7 DUP6 PUSH2 0x863 JUMP JUMPDEST PUSH2 0x405 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x25C SWAP2 DUP6 SWAP1 PUSH2 0x30A SWAP1 DUP7 SWAP1 PUSH2 0x876 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x1CF SWAP1 PUSH2 0x817 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F2 JUMP JUMPDEST PUSH2 0x3EF CALLER DUP6 PUSH2 0x30A DUP7 DUP6 PUSH2 0x863 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x25C CALLER DUP5 DUP5 PUSH2 0x528 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x467 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x58C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x665 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F2 JUMP JUMPDEST PUSH2 0x66F DUP3 DUP3 PUSH2 0x863 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6A4 SWAP1 DUP5 SWAP1 PUSH2 0x876 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6F0 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x72A JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x70E JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x760 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x776 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x77F DUP4 PUSH2 0x74A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x79F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7A8 DUP5 PUSH2 0x74A JUMP JUMPDEST SWAP3 POP PUSH2 0x7B6 PUSH1 0x20 DUP6 ADD PUSH2 0x74A JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7DF DUP3 PUSH2 0x74A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x800 DUP4 PUSH2 0x74A JUMP JUMPDEST SWAP2 POP PUSH2 0x80E PUSH1 0x20 DUP5 ADD PUSH2 0x74A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x82B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x849 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x260 JUMPI PUSH2 0x260 PUSH2 0x84F JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x260 JUMPI PUSH2 0x260 PUSH2 0x84F JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0xD1BF3D6C43566062DDE49BCB6D2DECC0 SHL 0xE1 PUSH5 0x59AD8090A6 SSTORE PUSH26 0xD2B1A2CC1E64736F6C6343000817003300000000000000000000 ",
							"sourceMap": "1396:9870:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_562": {
									"entryPoint": 1029,
									"id": 562,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_573": {
									"entryPoint": null,
									"id": 573,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_28": {
									"entryPoint": null,
									"id": 28,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transfer_408": {
									"entryPoint": 1320,
									"id": 408,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_205": {
									"entryPoint": null,
									"id": 205,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_226": {
									"entryPoint": 592,
									"id": 226,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_166": {
									"entryPoint": null,
									"id": 166,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_142": {
									"entryPoint": null,
									"id": 142,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_338": {
									"entryPoint": 863,
									"id": 338,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_300": {
									"entryPoint": 794,
									"id": 300,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_122": {
									"entryPoint": 448,
									"id": 122,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_132": {
									"entryPoint": 848,
									"id": 132,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_152": {
									"entryPoint": null,
									"id": 152,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_273": {
									"entryPoint": 614,
									"id": 273,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_187": {
									"entryPoint": 1017,
									"id": 187,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1990,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 2022,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1893,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1790,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2166,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2147,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 2071,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2127,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5973:5",
										"nodeType": "YulBlock",
										"src": "0:5973:5",
										"statements": [
											{
												"nativeSrc": "6:3:5",
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:427:5",
													"nodeType": "YulBlock",
													"src": "135:427:5",
													"statements": [
														{
															"nativeSrc": "145:12:5",
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:5",
															"value": {
																"kind": "number",
																"nativeSrc": "155:2:5",
																"nodeType": "YulLiteral",
																"src": "155:2:5",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "149:2:5",
																	"nodeType": "YulTypedName",
																	"src": "149:2:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "173:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "184:2:5",
																		"nodeType": "YulLiteral",
																		"src": "184:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "166:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:5"
																},
																"nativeSrc": "166:21:5",
																"nodeType": "YulFunctionCall",
																"src": "166:21:5"
															},
															"nativeSrc": "166:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "166:21:5"
														},
														{
															"nativeSrc": "196:27:5",
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "216:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "210:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:5"
																},
																"nativeSrc": "210:13:5",
																"nodeType": "YulFunctionCall",
																"src": "210:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "200:6:5",
																	"nodeType": "YulTypedName",
																	"src": "200:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "243:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "254:2:5",
																				"nodeType": "YulLiteral",
																				"src": "254:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "239:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:5"
																		},
																		"nativeSrc": "239:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "259:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "232:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:5"
																},
																"nativeSrc": "232:34:5",
																"nodeType": "YulFunctionCall",
																"src": "232:34:5"
															},
															"nativeSrc": "232:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "232:34:5"
														},
														{
															"nativeSrc": "275:10:5",
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:5",
															"value": {
																"kind": "number",
																"nativeSrc": "284:1:5",
																"nodeType": "YulLiteral",
																"src": "284:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "279:1:5",
																	"nodeType": "YulTypedName",
																	"src": "279:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "344:90:5",
																"nodeType": "YulBlock",
																"src": "344:90:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nativeSrc": "373:9:5",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:5"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "384:1:5",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "369:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:5"
																							},
																							"nativeSrc": "369:17:5",
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:5"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "388:2:5",
																							"nodeType": "YulLiteral",
																							"src": "388:2:5",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "365:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:5"
																					},
																					"nativeSrc": "365:26:5",
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nativeSrc": "407:6:5",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:5"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "415:1:5",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:5"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "403:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:5"
																									},
																									"nativeSrc": "403:14:5",
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:5"
																								},
																								{
																									"name": "_1",
																									"nativeSrc": "419:2:5",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "399:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:5"
																							},
																							"nativeSrc": "399:23:5",
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "393:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:5"
																					},
																					"nativeSrc": "393:30:5",
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "358:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:5"
																			},
																			"nativeSrc": "358:66:5",
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:5"
																		},
																		"nativeSrc": "358:66:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "305:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "308:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "302:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:5"
																},
																"nativeSrc": "302:13:5",
																"nodeType": "YulFunctionCall",
																"src": "302:13:5"
															},
															"nativeSrc": "294:140:5",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "316:19:5",
																"nodeType": "YulBlock",
																"src": "316:19:5",
																"statements": [
																	{
																		"nativeSrc": "318:15:5",
																		"nodeType": "YulAssignment",
																		"src": "318:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "327:1:5",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:5"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "330:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "323:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:5"
																			},
																			"nativeSrc": "323:10:5",
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "318:1:5",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "298:3:5",
																"nodeType": "YulBlock",
																"src": "298:3:5",
																"statements": []
															},
															"src": "294:140:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "458:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:5"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "469:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "454:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:5"
																				},
																				"nativeSrc": "454:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "478:2:5",
																				"nodeType": "YulLiteral",
																				"src": "478:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "450:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:5"
																		},
																		"nativeSrc": "450:31:5",
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "483:1:5",
																		"nodeType": "YulLiteral",
																		"src": "483:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "443:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:5"
																},
																"nativeSrc": "443:42:5",
																"nodeType": "YulFunctionCall",
																"src": "443:42:5"
															},
															"nativeSrc": "443:42:5",
															"nodeType": "YulExpressionStatement",
															"src": "443:42:5"
														},
														{
															"nativeSrc": "494:62:5",
															"nodeType": "YulAssignment",
															"src": "494:62:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "510:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "529:6:5",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "537:2:5",
																								"nodeType": "YulLiteral",
																								"src": "537:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "525:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:5"
																						},
																						"nativeSrc": "525:15:5",
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:5"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "546:2:5",
																								"nodeType": "YulLiteral",
																								"src": "546:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "542:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:5"
																						},
																						"nativeSrc": "542:7:5",
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "521:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:5"
																				},
																				"nativeSrc": "521:29:5",
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "506:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:5"
																		},
																		"nativeSrc": "506:45:5",
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "553:2:5",
																		"nodeType": "YulLiteral",
																		"src": "553:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "502:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:5"
																},
																"nativeSrc": "502:54:5",
																"nodeType": "YulFunctionCall",
																"src": "502:54:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "494:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:548:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:5",
														"nodeType": "YulTypedName",
														"src": "104:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:5",
														"nodeType": "YulTypedName",
														"src": "115:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:5",
														"nodeType": "YulTypedName",
														"src": "126:4:5",
														"type": ""
													}
												],
												"src": "14:548:5"
											},
											{
												"body": {
													"nativeSrc": "616:124:5",
													"nodeType": "YulBlock",
													"src": "616:124:5",
													"statements": [
														{
															"nativeSrc": "626:29:5",
															"nodeType": "YulAssignment",
															"src": "626:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "648:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "635:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:5"
																},
																"nativeSrc": "635:20:5",
																"nodeType": "YulFunctionCall",
																"src": "635:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "626:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "718:16:5",
																"nodeType": "YulBlock",
																"src": "718:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "727:1:5",
																					"nodeType": "YulLiteral",
																					"src": "727:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "730:1:5",
																					"nodeType": "YulLiteral",
																					"src": "730:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "720:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:5"
																			},
																			"nativeSrc": "720:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:5"
																		},
																		"nativeSrc": "720:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "677:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "688:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "703:3:5",
																										"nodeType": "YulLiteral",
																										"src": "703:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "708:1:5",
																										"nodeType": "YulLiteral",
																										"src": "708:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "699:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:5"
																								},
																								"nativeSrc": "699:11:5",
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "712:1:5",
																								"nodeType": "YulLiteral",
																								"src": "712:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "695:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:5"
																						},
																						"nativeSrc": "695:19:5",
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "684:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:5"
																				},
																				"nativeSrc": "684:31:5",
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "674:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:5"
																		},
																		"nativeSrc": "674:42:5",
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "667:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:5"
																},
																"nativeSrc": "667:50:5",
																"nodeType": "YulFunctionCall",
																"src": "667:50:5"
															},
															"nativeSrc": "664:70:5",
															"nodeType": "YulIf",
															"src": "664:70:5"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "567:173:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "595:6:5",
														"nodeType": "YulTypedName",
														"src": "595:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "606:5:5",
														"nodeType": "YulTypedName",
														"src": "606:5:5",
														"type": ""
													}
												],
												"src": "567:173:5"
											},
											{
												"body": {
													"nativeSrc": "832:167:5",
													"nodeType": "YulBlock",
													"src": "832:167:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "878:16:5",
																"nodeType": "YulBlock",
																"src": "878:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "887:1:5",
																					"nodeType": "YulLiteral",
																					"src": "887:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "890:1:5",
																					"nodeType": "YulLiteral",
																					"src": "890:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "880:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:5"
																			},
																			"nativeSrc": "880:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:5"
																		},
																		"nativeSrc": "880:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "853:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "862:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "849:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:5"
																		},
																		"nativeSrc": "849:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "874:2:5",
																		"nodeType": "YulLiteral",
																		"src": "874:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "845:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:5"
																},
																"nativeSrc": "845:32:5",
																"nodeType": "YulFunctionCall",
																"src": "845:32:5"
															},
															"nativeSrc": "842:52:5",
															"nodeType": "YulIf",
															"src": "842:52:5"
														},
														{
															"nativeSrc": "903:39:5",
															"nodeType": "YulAssignment",
															"src": "903:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "932:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "913:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:5"
																},
																"nativeSrc": "913:29:5",
																"nodeType": "YulFunctionCall",
																"src": "913:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "903:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:5"
																}
															]
														},
														{
															"nativeSrc": "951:42:5",
															"nodeType": "YulAssignment",
															"src": "951:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "978:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "989:2:5",
																				"nodeType": "YulLiteral",
																				"src": "989:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "974:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:5"
																		},
																		"nativeSrc": "974:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "961:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:5"
																},
																"nativeSrc": "961:32:5",
																"nodeType": "YulFunctionCall",
																"src": "961:32:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "951:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "745:254:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "790:9:5",
														"nodeType": "YulTypedName",
														"src": "790:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "801:7:5",
														"nodeType": "YulTypedName",
														"src": "801:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "813:6:5",
														"nodeType": "YulTypedName",
														"src": "813:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "821:6:5",
														"nodeType": "YulTypedName",
														"src": "821:6:5",
														"type": ""
													}
												],
												"src": "745:254:5"
											},
											{
												"body": {
													"nativeSrc": "1099:92:5",
													"nodeType": "YulBlock",
													"src": "1099:92:5",
													"statements": [
														{
															"nativeSrc": "1109:26:5",
															"nodeType": "YulAssignment",
															"src": "1109:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1121:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1132:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1117:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:5"
																},
																"nativeSrc": "1117:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1117:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1109:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1151:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1176:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1169:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:5"
																				},
																				"nativeSrc": "1169:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1162:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:5"
																		},
																		"nativeSrc": "1162:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1144:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:5"
																},
																"nativeSrc": "1144:41:5",
																"nodeType": "YulFunctionCall",
																"src": "1144:41:5"
															},
															"nativeSrc": "1144:41:5",
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1004:187:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1068:9:5",
														"nodeType": "YulTypedName",
														"src": "1068:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1079:6:5",
														"nodeType": "YulTypedName",
														"src": "1079:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1090:4:5",
														"nodeType": "YulTypedName",
														"src": "1090:4:5",
														"type": ""
													}
												],
												"src": "1004:187:5"
											},
											{
												"body": {
													"nativeSrc": "1297:76:5",
													"nodeType": "YulBlock",
													"src": "1297:76:5",
													"statements": [
														{
															"nativeSrc": "1307:26:5",
															"nodeType": "YulAssignment",
															"src": "1307:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1319:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1330:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1315:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:5"
																},
																"nativeSrc": "1315:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1315:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1307:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1349:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:5"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1360:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1342:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:5"
																},
																"nativeSrc": "1342:25:5",
																"nodeType": "YulFunctionCall",
																"src": "1342:25:5"
															},
															"nativeSrc": "1342:25:5",
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1196:177:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1266:9:5",
														"nodeType": "YulTypedName",
														"src": "1266:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1277:6:5",
														"nodeType": "YulTypedName",
														"src": "1277:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1288:4:5",
														"nodeType": "YulTypedName",
														"src": "1288:4:5",
														"type": ""
													}
												],
												"src": "1196:177:5"
											},
											{
												"body": {
													"nativeSrc": "1482:224:5",
													"nodeType": "YulBlock",
													"src": "1482:224:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1528:16:5",
																"nodeType": "YulBlock",
																"src": "1528:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1537:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1540:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1530:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1530:6:5"
																			},
																			"nativeSrc": "1530:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1530:12:5"
																		},
																		"nativeSrc": "1530:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1530:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1503:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1503:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1512:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1499:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:5"
																		},
																		"nativeSrc": "1499:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1524:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1495:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:5"
																},
																"nativeSrc": "1495:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1495:32:5"
															},
															"nativeSrc": "1492:52:5",
															"nodeType": "YulIf",
															"src": "1492:52:5"
														},
														{
															"nativeSrc": "1553:39:5",
															"nodeType": "YulAssignment",
															"src": "1553:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1582:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1563:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "1563:18:5"
																},
																"nativeSrc": "1563:29:5",
																"nodeType": "YulFunctionCall",
																"src": "1563:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1553:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:5"
																}
															]
														},
														{
															"nativeSrc": "1601:48:5",
															"nodeType": "YulAssignment",
															"src": "1601:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1634:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1645:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1630:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:5"
																		},
																		"nativeSrc": "1630:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1611:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "1611:18:5"
																},
																"nativeSrc": "1611:38:5",
																"nodeType": "YulFunctionCall",
																"src": "1611:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1601:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:5"
																}
															]
														},
														{
															"nativeSrc": "1658:42:5",
															"nodeType": "YulAssignment",
															"src": "1658:42:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1685:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1696:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1681:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:5"
																		},
																		"nativeSrc": "1681:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1668:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1668:12:5"
																},
																"nativeSrc": "1668:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1668:32:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1658:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1378:328:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1432:9:5",
														"nodeType": "YulTypedName",
														"src": "1432:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1443:7:5",
														"nodeType": "YulTypedName",
														"src": "1443:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1455:6:5",
														"nodeType": "YulTypedName",
														"src": "1455:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1463:6:5",
														"nodeType": "YulTypedName",
														"src": "1463:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1471:6:5",
														"nodeType": "YulTypedName",
														"src": "1471:6:5",
														"type": ""
													}
												],
												"src": "1378:328:5"
											},
											{
												"body": {
													"nativeSrc": "1808:87:5",
													"nodeType": "YulBlock",
													"src": "1808:87:5",
													"statements": [
														{
															"nativeSrc": "1818:26:5",
															"nodeType": "YulAssignment",
															"src": "1818:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1830:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1830:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1841:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1826:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:5"
																},
																"nativeSrc": "1826:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1826:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1818:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1860:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1875:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1883:4:5",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1871:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:5"
																		},
																		"nativeSrc": "1871:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1871:17:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1853:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:5"
																},
																"nativeSrc": "1853:36:5",
																"nodeType": "YulFunctionCall",
																"src": "1853:36:5"
															},
															"nativeSrc": "1853:36:5",
															"nodeType": "YulExpressionStatement",
															"src": "1853:36:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1711:184:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1777:9:5",
														"nodeType": "YulTypedName",
														"src": "1777:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1788:6:5",
														"nodeType": "YulTypedName",
														"src": "1788:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1799:4:5",
														"nodeType": "YulTypedName",
														"src": "1799:4:5",
														"type": ""
													}
												],
												"src": "1711:184:5"
											},
											{
												"body": {
													"nativeSrc": "1970:116:5",
													"nodeType": "YulBlock",
													"src": "1970:116:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2016:16:5",
																"nodeType": "YulBlock",
																"src": "2016:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2025:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2028:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2018:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:5"
																			},
																			"nativeSrc": "2018:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:5"
																		},
																		"nativeSrc": "2018:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1991:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1991:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2000:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1987:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1987:3:5"
																		},
																		"nativeSrc": "1987:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1987:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2012:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1983:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:5"
																},
																"nativeSrc": "1983:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1983:32:5"
															},
															"nativeSrc": "1980:52:5",
															"nodeType": "YulIf",
															"src": "1980:52:5"
														},
														{
															"nativeSrc": "2041:39:5",
															"nodeType": "YulAssignment",
															"src": "2041:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2070:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2070:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2051:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2051:18:5"
																},
																"nativeSrc": "2051:29:5",
																"nodeType": "YulFunctionCall",
																"src": "2051:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2041:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1900:186:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1936:9:5",
														"nodeType": "YulTypedName",
														"src": "1936:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1947:7:5",
														"nodeType": "YulTypedName",
														"src": "1947:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1959:6:5",
														"nodeType": "YulTypedName",
														"src": "1959:6:5",
														"type": ""
													}
												],
												"src": "1900:186:5"
											},
											{
												"body": {
													"nativeSrc": "2178:173:5",
													"nodeType": "YulBlock",
													"src": "2178:173:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2224:16:5",
																"nodeType": "YulBlock",
																"src": "2224:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2233:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2233:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2236:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2236:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2226:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2226:6:5"
																			},
																			"nativeSrc": "2226:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2226:12:5"
																		},
																		"nativeSrc": "2226:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2226:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2199:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2199:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2208:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2208:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2195:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2195:3:5"
																		},
																		"nativeSrc": "2195:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2195:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2220:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2220:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2191:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2191:3:5"
																},
																"nativeSrc": "2191:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2191:32:5"
															},
															"nativeSrc": "2188:52:5",
															"nodeType": "YulIf",
															"src": "2188:52:5"
														},
														{
															"nativeSrc": "2249:39:5",
															"nodeType": "YulAssignment",
															"src": "2249:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2278:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2278:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2259:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2259:18:5"
																},
																"nativeSrc": "2259:29:5",
																"nodeType": "YulFunctionCall",
																"src": "2259:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2249:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2249:6:5"
																}
															]
														},
														{
															"nativeSrc": "2297:48:5",
															"nodeType": "YulAssignment",
															"src": "2297:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2330:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2330:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2341:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2341:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2326:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2326:3:5"
																		},
																		"nativeSrc": "2326:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2326:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2307:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2307:18:5"
																},
																"nativeSrc": "2307:38:5",
																"nodeType": "YulFunctionCall",
																"src": "2307:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2297:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2297:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2091:260:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2136:9:5",
														"nodeType": "YulTypedName",
														"src": "2136:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2147:7:5",
														"nodeType": "YulTypedName",
														"src": "2147:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2159:6:5",
														"nodeType": "YulTypedName",
														"src": "2159:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2167:6:5",
														"nodeType": "YulTypedName",
														"src": "2167:6:5",
														"type": ""
													}
												],
												"src": "2091:260:5"
											},
											{
												"body": {
													"nativeSrc": "2411:325:5",
													"nodeType": "YulBlock",
													"src": "2411:325:5",
													"statements": [
														{
															"nativeSrc": "2421:22:5",
															"nodeType": "YulAssignment",
															"src": "2421:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2435:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2435:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2438:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "2438:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2431:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2431:3:5"
																},
																"nativeSrc": "2431:12:5",
																"nodeType": "YulFunctionCall",
																"src": "2431:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2421:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2421:6:5"
																}
															]
														},
														{
															"nativeSrc": "2452:38:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2452:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2482:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "2482:4:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2488:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2488:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2478:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2478:3:5"
																},
																"nativeSrc": "2478:12:5",
																"nodeType": "YulFunctionCall",
																"src": "2478:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2456:18:5",
																	"nodeType": "YulTypedName",
																	"src": "2456:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2529:31:5",
																"nodeType": "YulBlock",
																"src": "2529:31:5",
																"statements": [
																	{
																		"nativeSrc": "2531:27:5",
																		"nodeType": "YulAssignment",
																		"src": "2531:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2545:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "2545:6:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2553:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2553:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2541:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2541:3:5"
																			},
																			"nativeSrc": "2541:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2541:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2531:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2509:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "2509:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2502:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2502:6:5"
																},
																"nativeSrc": "2502:26:5",
																"nodeType": "YulFunctionCall",
																"src": "2502:26:5"
															},
															"nativeSrc": "2499:61:5",
															"nodeType": "YulIf",
															"src": "2499:61:5"
														},
														{
															"body": {
																"nativeSrc": "2619:111:5",
																"nodeType": "YulBlock",
																"src": "2619:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2640:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2640:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2647:3:5",
																							"nodeType": "YulLiteral",
																							"src": "2647:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2652:10:5",
																							"nodeType": "YulLiteral",
																							"src": "2652:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2643:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "2643:3:5"
																					},
																					"nativeSrc": "2643:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2643:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2633:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2633:6:5"
																			},
																			"nativeSrc": "2633:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2633:31:5"
																		},
																		"nativeSrc": "2633:31:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2633:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2684:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2684:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2687:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2687:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2677:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2677:6:5"
																			},
																			"nativeSrc": "2677:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2677:15:5"
																		},
																		"nativeSrc": "2677:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2677:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2712:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2712:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2715:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2715:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2705:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2705:6:5"
																			},
																			"nativeSrc": "2705:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2705:15:5"
																		},
																		"nativeSrc": "2705:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2705:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2575:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "2575:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2598:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2598:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2606:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2606:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2595:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "2595:2:5"
																		},
																		"nativeSrc": "2595:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2595:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2572:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2572:2:5"
																},
																"nativeSrc": "2572:38:5",
																"nodeType": "YulFunctionCall",
																"src": "2572:38:5"
															},
															"nativeSrc": "2569:161:5",
															"nodeType": "YulIf",
															"src": "2569:161:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2356:380:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2391:4:5",
														"nodeType": "YulTypedName",
														"src": "2391:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2400:6:5",
														"nodeType": "YulTypedName",
														"src": "2400:6:5",
														"type": ""
													}
												],
												"src": "2356:380:5"
											},
											{
												"body": {
													"nativeSrc": "2915:230:5",
													"nodeType": "YulBlock",
													"src": "2915:230:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2932:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2932:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2943:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2943:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2925:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2925:6:5"
																},
																"nativeSrc": "2925:21:5",
																"nodeType": "YulFunctionCall",
																"src": "2925:21:5"
															},
															"nativeSrc": "2925:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "2925:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2966:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2966:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2977:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2977:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2962:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2962:3:5"
																		},
																		"nativeSrc": "2962:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2962:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2982:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2982:2:5",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2955:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2955:6:5"
																},
																"nativeSrc": "2955:30:5",
																"nodeType": "YulFunctionCall",
																"src": "2955:30:5"
															},
															"nativeSrc": "2955:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "2955:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3005:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3005:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3016:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3016:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3001:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3001:3:5"
																		},
																		"nativeSrc": "3001:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3001:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732061",
																		"kind": "string",
																		"nativeSrc": "3021:34:5",
																		"nodeType": "YulLiteral",
																		"src": "3021:34:5",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2994:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2994:6:5"
																},
																"nativeSrc": "2994:62:5",
																"nodeType": "YulFunctionCall",
																"src": "2994:62:5"
															},
															"nativeSrc": "2994:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "2994:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3076:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3076:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3087:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3087:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3072:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3072:3:5"
																		},
																		"nativeSrc": "3072:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3072:18:5"
																	},
																	{
																		"hexValue": "6c6c6f77616e6365",
																		"kind": "string",
																		"nativeSrc": "3092:10:5",
																		"nodeType": "YulLiteral",
																		"src": "3092:10:5",
																		"type": "",
																		"value": "llowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3065:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3065:6:5"
																},
																"nativeSrc": "3065:38:5",
																"nodeType": "YulFunctionCall",
																"src": "3065:38:5"
															},
															"nativeSrc": "3065:38:5",
															"nodeType": "YulExpressionStatement",
															"src": "3065:38:5"
														},
														{
															"nativeSrc": "3112:27:5",
															"nodeType": "YulAssignment",
															"src": "3112:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3124:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3124:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3135:3:5",
																		"nodeType": "YulLiteral",
																		"src": "3135:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3120:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3120:3:5"
																},
																"nativeSrc": "3120:19:5",
																"nodeType": "YulFunctionCall",
																"src": "3120:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3112:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3112:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2741:404:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2892:9:5",
														"nodeType": "YulTypedName",
														"src": "2892:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2906:4:5",
														"nodeType": "YulTypedName",
														"src": "2906:4:5",
														"type": ""
													}
												],
												"src": "2741:404:5"
											},
											{
												"body": {
													"nativeSrc": "3182:95:5",
													"nodeType": "YulBlock",
													"src": "3182:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3199:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3199:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3206:3:5",
																				"nodeType": "YulLiteral",
																				"src": "3206:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3211:10:5",
																				"nodeType": "YulLiteral",
																				"src": "3211:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3202:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3202:3:5"
																		},
																		"nativeSrc": "3202:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3202:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3192:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3192:6:5"
																},
																"nativeSrc": "3192:31:5",
																"nodeType": "YulFunctionCall",
																"src": "3192:31:5"
															},
															"nativeSrc": "3192:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "3192:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3239:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3239:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3242:4:5",
																		"nodeType": "YulLiteral",
																		"src": "3242:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3232:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3232:6:5"
																},
																"nativeSrc": "3232:15:5",
																"nodeType": "YulFunctionCall",
																"src": "3232:15:5"
															},
															"nativeSrc": "3232:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "3232:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3263:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3263:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3266:4:5",
																		"nodeType": "YulLiteral",
																		"src": "3266:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3256:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3256:6:5"
																},
																"nativeSrc": "3256:15:5",
																"nodeType": "YulFunctionCall",
																"src": "3256:15:5"
															},
															"nativeSrc": "3256:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "3256:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "3150:127:5",
												"nodeType": "YulFunctionDefinition",
												"src": "3150:127:5"
											},
											{
												"body": {
													"nativeSrc": "3331:79:5",
													"nodeType": "YulBlock",
													"src": "3331:79:5",
													"statements": [
														{
															"nativeSrc": "3341:17:5",
															"nodeType": "YulAssignment",
															"src": "3341:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3353:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "3353:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3356:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "3356:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "3349:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3349:3:5"
																},
																"nativeSrc": "3349:9:5",
																"nodeType": "YulFunctionCall",
																"src": "3349:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "3341:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3341:4:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3382:22:5",
																"nodeType": "YulBlock",
																"src": "3382:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3384:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "3384:16:5"
																			},
																			"nativeSrc": "3384:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3384:18:5"
																		},
																		"nativeSrc": "3384:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3384:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "3373:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "3373:4:5"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "3379:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "3379:1:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3370:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "3370:2:5"
																},
																"nativeSrc": "3370:11:5",
																"nodeType": "YulFunctionCall",
																"src": "3370:11:5"
															},
															"nativeSrc": "3367:37:5",
															"nodeType": "YulIf",
															"src": "3367:37:5"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "3282:128:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3313:1:5",
														"nodeType": "YulTypedName",
														"src": "3313:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3316:1:5",
														"nodeType": "YulTypedName",
														"src": "3316:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "3322:4:5",
														"nodeType": "YulTypedName",
														"src": "3322:4:5",
														"type": ""
													}
												],
												"src": "3282:128:5"
											},
											{
												"body": {
													"nativeSrc": "3463:77:5",
													"nodeType": "YulBlock",
													"src": "3463:77:5",
													"statements": [
														{
															"nativeSrc": "3473:16:5",
															"nodeType": "YulAssignment",
															"src": "3473:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3484:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "3484:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3487:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "3487:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3480:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3480:3:5"
																},
																"nativeSrc": "3480:9:5",
																"nodeType": "YulFunctionCall",
																"src": "3480:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3473:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3473:3:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3512:22:5",
																"nodeType": "YulBlock",
																"src": "3512:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3514:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "3514:16:5"
																			},
																			"nativeSrc": "3514:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "3514:18:5"
																		},
																		"nativeSrc": "3514:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "3514:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3504:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "3504:1:5"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3507:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3507:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3501:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "3501:2:5"
																},
																"nativeSrc": "3501:10:5",
																"nodeType": "YulFunctionCall",
																"src": "3501:10:5"
															},
															"nativeSrc": "3498:36:5",
															"nodeType": "YulIf",
															"src": "3498:36:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3415:125:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3446:1:5",
														"nodeType": "YulTypedName",
														"src": "3446:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3449:1:5",
														"nodeType": "YulTypedName",
														"src": "3449:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3455:3:5",
														"nodeType": "YulTypedName",
														"src": "3455:3:5",
														"type": ""
													}
												],
												"src": "3415:125:5"
											},
											{
												"body": {
													"nativeSrc": "3719:227:5",
													"nodeType": "YulBlock",
													"src": "3719:227:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3736:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3736:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3747:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3747:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3729:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3729:6:5"
																},
																"nativeSrc": "3729:21:5",
																"nodeType": "YulFunctionCall",
																"src": "3729:21:5"
															},
															"nativeSrc": "3729:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "3729:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3770:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3770:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3781:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3781:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3766:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3766:3:5"
																		},
																		"nativeSrc": "3766:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3766:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3786:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3786:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3759:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3759:6:5"
																},
																"nativeSrc": "3759:30:5",
																"nodeType": "YulFunctionCall",
																"src": "3759:30:5"
															},
															"nativeSrc": "3759:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "3759:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3809:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3809:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3820:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3820:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3805:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3805:3:5"
																		},
																		"nativeSrc": "3805:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3805:18:5"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nativeSrc": "3825:34:5",
																		"nodeType": "YulLiteral",
																		"src": "3825:34:5",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3798:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3798:6:5"
																},
																"nativeSrc": "3798:62:5",
																"nodeType": "YulFunctionCall",
																"src": "3798:62:5"
															},
															"nativeSrc": "3798:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "3798:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3880:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3880:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3891:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3891:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3876:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3876:3:5"
																		},
																		"nativeSrc": "3876:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3876:18:5"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nativeSrc": "3896:7:5",
																		"nodeType": "YulLiteral",
																		"src": "3896:7:5",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3869:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3869:6:5"
																},
																"nativeSrc": "3869:35:5",
																"nodeType": "YulFunctionCall",
																"src": "3869:35:5"
															},
															"nativeSrc": "3869:35:5",
															"nodeType": "YulExpressionStatement",
															"src": "3869:35:5"
														},
														{
															"nativeSrc": "3913:27:5",
															"nodeType": "YulAssignment",
															"src": "3913:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3925:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3925:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3936:3:5",
																		"nodeType": "YulLiteral",
																		"src": "3936:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3921:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3921:3:5"
																},
																"nativeSrc": "3921:19:5",
																"nodeType": "YulFunctionCall",
																"src": "3921:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3913:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3913:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3545:401:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3696:9:5",
														"nodeType": "YulTypedName",
														"src": "3696:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3710:4:5",
														"nodeType": "YulTypedName",
														"src": "3710:4:5",
														"type": ""
													}
												],
												"src": "3545:401:5"
											},
											{
												"body": {
													"nativeSrc": "4125:226:5",
													"nodeType": "YulBlock",
													"src": "4125:226:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4142:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4142:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4153:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4153:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4135:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4135:6:5"
																},
																"nativeSrc": "4135:21:5",
																"nodeType": "YulFunctionCall",
																"src": "4135:21:5"
															},
															"nativeSrc": "4135:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "4135:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4176:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4176:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4187:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4187:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4172:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4172:3:5"
																		},
																		"nativeSrc": "4172:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4172:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4192:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4192:2:5",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4165:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4165:6:5"
																},
																"nativeSrc": "4165:30:5",
																"nodeType": "YulFunctionCall",
																"src": "4165:30:5"
															},
															"nativeSrc": "4165:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "4165:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4215:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4215:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4226:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4226:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4211:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4211:3:5"
																		},
																		"nativeSrc": "4211:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4211:18:5"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "4231:34:5",
																		"nodeType": "YulLiteral",
																		"src": "4231:34:5",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4204:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4204:6:5"
																},
																"nativeSrc": "4204:62:5",
																"nodeType": "YulFunctionCall",
																"src": "4204:62:5"
															},
															"nativeSrc": "4204:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "4204:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4286:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4286:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4297:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4297:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4282:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4282:3:5"
																		},
																		"nativeSrc": "4282:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4282:18:5"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "4302:6:5",
																		"nodeType": "YulLiteral",
																		"src": "4302:6:5",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4275:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4275:6:5"
																},
																"nativeSrc": "4275:34:5",
																"nodeType": "YulFunctionCall",
																"src": "4275:34:5"
															},
															"nativeSrc": "4275:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "4275:34:5"
														},
														{
															"nativeSrc": "4318:27:5",
															"nodeType": "YulAssignment",
															"src": "4318:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4330:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4330:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4341:3:5",
																		"nodeType": "YulLiteral",
																		"src": "4341:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4326:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4326:3:5"
																},
																"nativeSrc": "4326:19:5",
																"nodeType": "YulFunctionCall",
																"src": "4326:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4318:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4318:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3951:400:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4102:9:5",
														"nodeType": "YulTypedName",
														"src": "4102:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4116:4:5",
														"nodeType": "YulTypedName",
														"src": "4116:4:5",
														"type": ""
													}
												],
												"src": "3951:400:5"
											},
											{
												"body": {
													"nativeSrc": "4530:224:5",
													"nodeType": "YulBlock",
													"src": "4530:224:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4547:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4547:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4558:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4558:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4540:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4540:6:5"
																},
																"nativeSrc": "4540:21:5",
																"nodeType": "YulFunctionCall",
																"src": "4540:21:5"
															},
															"nativeSrc": "4540:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "4540:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4581:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4581:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4592:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4592:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4577:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4577:3:5"
																		},
																		"nativeSrc": "4577:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4577:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4597:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4597:2:5",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4570:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4570:6:5"
																},
																"nativeSrc": "4570:30:5",
																"nodeType": "YulFunctionCall",
																"src": "4570:30:5"
															},
															"nativeSrc": "4570:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "4570:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4620:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4620:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4631:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4631:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4616:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4616:3:5"
																		},
																		"nativeSrc": "4616:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4616:18:5"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nativeSrc": "4636:34:5",
																		"nodeType": "YulLiteral",
																		"src": "4636:34:5",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4609:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4609:6:5"
																},
																"nativeSrc": "4609:62:5",
																"nodeType": "YulFunctionCall",
																"src": "4609:62:5"
															},
															"nativeSrc": "4609:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "4609:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4691:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4691:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4702:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4702:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4687:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4687:3:5"
																		},
																		"nativeSrc": "4687:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4687:18:5"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nativeSrc": "4707:4:5",
																		"nodeType": "YulLiteral",
																		"src": "4707:4:5",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4680:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4680:6:5"
																},
																"nativeSrc": "4680:32:5",
																"nodeType": "YulFunctionCall",
																"src": "4680:32:5"
															},
															"nativeSrc": "4680:32:5",
															"nodeType": "YulExpressionStatement",
															"src": "4680:32:5"
														},
														{
															"nativeSrc": "4721:27:5",
															"nodeType": "YulAssignment",
															"src": "4721:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4733:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4733:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4744:3:5",
																		"nodeType": "YulLiteral",
																		"src": "4744:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4729:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4729:3:5"
																},
																"nativeSrc": "4729:19:5",
																"nodeType": "YulFunctionCall",
																"src": "4729:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4721:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4721:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4356:398:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4507:9:5",
														"nodeType": "YulTypedName",
														"src": "4507:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4521:4:5",
														"nodeType": "YulTypedName",
														"src": "4521:4:5",
														"type": ""
													}
												],
												"src": "4356:398:5"
											},
											{
												"body": {
													"nativeSrc": "4933:227:5",
													"nodeType": "YulBlock",
													"src": "4933:227:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4950:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4950:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4961:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4961:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4943:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4943:6:5"
																},
																"nativeSrc": "4943:21:5",
																"nodeType": "YulFunctionCall",
																"src": "4943:21:5"
															},
															"nativeSrc": "4943:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "4943:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4984:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4984:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4995:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4995:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4980:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4980:3:5"
																		},
																		"nativeSrc": "4980:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4980:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5000:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5000:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4973:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4973:6:5"
																},
																"nativeSrc": "4973:30:5",
																"nodeType": "YulFunctionCall",
																"src": "4973:30:5"
															},
															"nativeSrc": "4973:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "4973:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5023:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5023:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5034:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5034:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5019:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5019:3:5"
																		},
																		"nativeSrc": "5019:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5019:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "5039:34:5",
																		"nodeType": "YulLiteral",
																		"src": "5039:34:5",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5012:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5012:6:5"
																},
																"nativeSrc": "5012:62:5",
																"nodeType": "YulFunctionCall",
																"src": "5012:62:5"
															},
															"nativeSrc": "5012:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "5012:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5094:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5094:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5105:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5105:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5090:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5090:3:5"
																		},
																		"nativeSrc": "5090:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5090:18:5"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "5110:7:5",
																		"nodeType": "YulLiteral",
																		"src": "5110:7:5",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5083:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5083:6:5"
																},
																"nativeSrc": "5083:35:5",
																"nodeType": "YulFunctionCall",
																"src": "5083:35:5"
															},
															"nativeSrc": "5083:35:5",
															"nodeType": "YulExpressionStatement",
															"src": "5083:35:5"
														},
														{
															"nativeSrc": "5127:27:5",
															"nodeType": "YulAssignment",
															"src": "5127:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5139:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5139:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5150:3:5",
																		"nodeType": "YulLiteral",
																		"src": "5150:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5135:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5135:3:5"
																},
																"nativeSrc": "5135:19:5",
																"nodeType": "YulFunctionCall",
																"src": "5135:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5127:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5127:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4759:401:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4910:9:5",
														"nodeType": "YulTypedName",
														"src": "4910:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4924:4:5",
														"nodeType": "YulTypedName",
														"src": "4924:4:5",
														"type": ""
													}
												],
												"src": "4759:401:5"
											},
											{
												"body": {
													"nativeSrc": "5339:225:5",
													"nodeType": "YulBlock",
													"src": "5339:225:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5356:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5356:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5367:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5367:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5349:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5349:6:5"
																},
																"nativeSrc": "5349:21:5",
																"nodeType": "YulFunctionCall",
																"src": "5349:21:5"
															},
															"nativeSrc": "5349:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "5349:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5390:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5390:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5401:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5401:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5386:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5386:3:5"
																		},
																		"nativeSrc": "5386:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5386:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5406:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5406:2:5",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5379:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5379:6:5"
																},
																"nativeSrc": "5379:30:5",
																"nodeType": "YulFunctionCall",
																"src": "5379:30:5"
															},
															"nativeSrc": "5379:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "5379:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5429:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5429:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5440:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5440:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5425:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5425:3:5"
																		},
																		"nativeSrc": "5425:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5425:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nativeSrc": "5445:34:5",
																		"nodeType": "YulLiteral",
																		"src": "5445:34:5",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5418:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5418:6:5"
																},
																"nativeSrc": "5418:62:5",
																"nodeType": "YulFunctionCall",
																"src": "5418:62:5"
															},
															"nativeSrc": "5418:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "5418:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5500:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5500:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5511:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5511:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5496:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5496:3:5"
																		},
																		"nativeSrc": "5496:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5496:18:5"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nativeSrc": "5516:5:5",
																		"nodeType": "YulLiteral",
																		"src": "5516:5:5",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5489:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5489:6:5"
																},
																"nativeSrc": "5489:33:5",
																"nodeType": "YulFunctionCall",
																"src": "5489:33:5"
															},
															"nativeSrc": "5489:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "5489:33:5"
														},
														{
															"nativeSrc": "5531:27:5",
															"nodeType": "YulAssignment",
															"src": "5531:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5543:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5543:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5554:3:5",
																		"nodeType": "YulLiteral",
																		"src": "5554:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5539:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5539:3:5"
																},
																"nativeSrc": "5539:19:5",
																"nodeType": "YulFunctionCall",
																"src": "5539:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5531:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5531:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5165:399:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5316:9:5",
														"nodeType": "YulTypedName",
														"src": "5316:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5330:4:5",
														"nodeType": "YulTypedName",
														"src": "5330:4:5",
														"type": ""
													}
												],
												"src": "5165:399:5"
											},
											{
												"body": {
													"nativeSrc": "5743:228:5",
													"nodeType": "YulBlock",
													"src": "5743:228:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5760:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5760:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5771:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5771:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5753:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5753:6:5"
																},
																"nativeSrc": "5753:21:5",
																"nodeType": "YulFunctionCall",
																"src": "5753:21:5"
															},
															"nativeSrc": "5753:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "5753:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5794:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5794:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5805:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5805:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5790:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5790:3:5"
																		},
																		"nativeSrc": "5790:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5790:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5810:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5810:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5783:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5783:6:5"
																},
																"nativeSrc": "5783:30:5",
																"nodeType": "YulFunctionCall",
																"src": "5783:30:5"
															},
															"nativeSrc": "5783:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "5783:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5833:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5833:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5844:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5844:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5829:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5829:3:5"
																		},
																		"nativeSrc": "5829:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5829:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nativeSrc": "5849:34:5",
																		"nodeType": "YulLiteral",
																		"src": "5849:34:5",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5822:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5822:6:5"
																},
																"nativeSrc": "5822:62:5",
																"nodeType": "YulFunctionCall",
																"src": "5822:62:5"
															},
															"nativeSrc": "5822:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "5822:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5904:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5904:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5915:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5915:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5900:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5900:3:5"
																		},
																		"nativeSrc": "5900:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5900:18:5"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nativeSrc": "5920:8:5",
																		"nodeType": "YulLiteral",
																		"src": "5920:8:5",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5893:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5893:6:5"
																},
																"nativeSrc": "5893:36:5",
																"nodeType": "YulFunctionCall",
																"src": "5893:36:5"
															},
															"nativeSrc": "5893:36:5",
															"nodeType": "YulExpressionStatement",
															"src": "5893:36:5"
														},
														{
															"nativeSrc": "5938:27:5",
															"nodeType": "YulAssignment",
															"src": "5938:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5950:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5950:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5961:3:5",
																		"nodeType": "YulLiteral",
																		"src": "5961:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5946:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5946:3:5"
																},
																"nativeSrc": "5946:19:5",
																"nodeType": "YulFunctionCall",
																"src": "5946:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5938:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5938:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5569:402:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5720:9:5",
														"nodeType": "YulTypedName",
														"src": "5720:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5734:4:5",
														"nodeType": "YulTypedName",
														"src": "5734:4:5",
														"type": ""
													}
												],
												"src": "5569:402:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds a\")\n        mstore(add(headStart, 96), \"llowance\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100a6575f3560e01c8063395093511161006e578063395093511461011f57806370a082311461013257806395d89b411461015a578063a457c2d714610162578063a9059cbb14610175578063dd62ed3e14610188575f80fd5b806306fdde03146100aa578063095ea7b3146100c857806318160ddd146100eb57806323b872dd146100fd578063313ce56714610110575b5f80fd5b6100b26101c0565b6040516100bf91906106fe565b60405180910390f35b6100db6100d6366004610765565b610250565b60405190151581526020016100bf565b6035545b6040519081526020016100bf565b6100db61010b36600461078d565b610266565b604051601281526020016100bf565b6100db61012d366004610765565b61031a565b6100ef6101403660046107c6565b6001600160a01b03165f9081526033602052604090205490565b6100b2610350565b6100db610170366004610765565b61035f565b6100db610183366004610765565b6103f9565b6100ef6101963660046107e6565b6001600160a01b039182165f90815260346020908152604080832093909416825291909152205490565b6060603680546101cf90610817565b80601f01602080910402602001604051908101604052809291908181526020018280546101fb90610817565b80156102465780601f1061021d57610100808354040283529160200191610246565b820191905f5260205f20905b81548152906001019060200180831161022957829003601f168201915b5050505050905090565b5f61025c338484610405565b5060015b92915050565b5f610272848484610528565b6001600160a01b0384165f908152603460209081526040808320338452909152902054828110156102fb5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61030f853361030a8685610863565b610405565b506001949350505050565b335f8181526034602090815260408083206001600160a01b0387168452909152812054909161025c91859061030a908690610876565b6060603780546101cf90610817565b335f9081526034602090815260408083206001600160a01b0386168452909152812054828110156103e05760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102f2565b6103ef338561030a8685610863565b5060019392505050565b5f61025c338484610528565b6001600160a01b0383166104675760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102f2565b6001600160a01b0382166104c85760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102f2565b6001600160a01b038381165f8181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03831661058c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102f2565b6001600160a01b0382166105ee5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102f2565b6001600160a01b0383165f90815260336020526040902054818110156106655760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102f2565b61066f8282610863565b6001600160a01b038086165f9081526033602052604080822093909355908516815290812080548492906106a4908490610876565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106f091815260200190565b60405180910390a350505050565b5f602080835283518060208501525f5b8181101561072a5785810183015185820160400152820161070e565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610760575f80fd5b919050565b5f8060408385031215610776575f80fd5b61077f8361074a565b946020939093013593505050565b5f805f6060848603121561079f575f80fd5b6107a88461074a565b92506107b66020850161074a565b9150604084013590509250925092565b5f602082840312156107d6575f80fd5b6107df8261074a565b9392505050565b5f80604083850312156107f7575f80fd5b6108008361074a565b915061080e6020840161074a565b90509250929050565b600181811c9082168061082b57607f821691505b60208210810361084957634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52601160045260245ffd5b818103818111156102605761026061084f565b808201808211156102605761026061084f56fea26469706673582212206fd1bf3d6c43566062dde49bcb6d2decc01be16459ad8090a65579d2b1a2cc1e64736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x188 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x110 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH2 0x1C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x6FE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0xD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x765 JUMP JUMPDEST PUSH2 0x250 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH1 0x35 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0x78D JUMP JUMPDEST PUSH2 0x266 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x765 JUMP JUMPDEST PUSH2 0x31A JUMP JUMPDEST PUSH2 0xEF PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x7C6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x350 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x765 JUMP JUMPDEST PUSH2 0x35F JUMP JUMPDEST PUSH2 0xDB PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0x765 JUMP JUMPDEST PUSH2 0x3F9 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0x7E6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x36 DUP1 SLOAD PUSH2 0x1CF SWAP1 PUSH2 0x817 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1FB SWAP1 PUSH2 0x817 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x246 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x21D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x246 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x229 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x25C CALLER DUP5 DUP5 PUSH2 0x405 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x272 DUP5 DUP5 DUP5 PUSH2 0x528 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x2FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x30F DUP6 CALLER PUSH2 0x30A DUP7 DUP6 PUSH2 0x863 JUMP JUMPDEST PUSH2 0x405 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x25C SWAP2 DUP6 SWAP1 PUSH2 0x30A SWAP1 DUP7 SWAP1 PUSH2 0x876 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x37 DUP1 SLOAD PUSH2 0x1CF SWAP1 PUSH2 0x817 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x3E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F2 JUMP JUMPDEST PUSH2 0x3EF CALLER DUP6 PUSH2 0x30A DUP7 DUP6 PUSH2 0x863 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x25C CALLER DUP5 DUP5 PUSH2 0x528 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x467 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x4C8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x34 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x58C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x665 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F2 JUMP JUMPDEST PUSH2 0x66F DUP3 DUP3 PUSH2 0x863 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x33 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x6A4 SWAP1 DUP5 SWAP1 PUSH2 0x876 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6F0 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x72A JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x70E JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x760 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x776 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x77F DUP4 PUSH2 0x74A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x79F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7A8 DUP5 PUSH2 0x74A JUMP JUMPDEST SWAP3 POP PUSH2 0x7B6 PUSH1 0x20 DUP6 ADD PUSH2 0x74A JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x7DF DUP3 PUSH2 0x74A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x800 DUP4 PUSH2 0x74A JUMP JUMPDEST SWAP2 POP PUSH2 0x80E PUSH1 0x20 DUP5 ADD PUSH2 0x74A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x82B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x849 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x260 JUMPI PUSH2 0x260 PUSH2 0x84F JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x260 JUMPI PUSH2 0x260 PUSH2 0x84F JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH16 0xD1BF3D6C43566062DDE49BCB6D2DECC0 SHL 0xE1 PUSH5 0x59AD8090A6 SSTORE PUSH26 0xD2B1A2CC1E64736F6C6343000817003300000000000000000000 ",
							"sourceMap": "1396:9870:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2467:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4634:169;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:5;;1162:22;1144:41;;1132:2;1117:18;4634:169:1;1004:187:5;3587:108:1;3675:12;;3587:108;;;1342:25:5;;;1330:2;1315:18;3587:108:1;1196:177:5;5285:422:1;;;;;;:::i;:::-;;:::i;3429:93::-;;;3512:2;1853:36:5;;1841:2;1826:18;3429:93:1;1711:184:5;6116:215:1;;;;;;:::i;:::-;;:::i;3758:127::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3859:18:1;3832:7;3859:18;;;:9;:18;;;;;;;3758:127;2686:104;;;:::i;6834:377::-;;;;;;:::i;:::-;;:::i;4098:175::-;;;;;;:::i;:::-;;:::i;4336:151::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4452:18:1;;;4425:7;4452:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4336:151;2467:100;2521:13;2554:5;2547:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2467:100;:::o;4634:169::-;4717:4;4734:39;911:10:0;4757:7:1;4766:6;4734:8;:39::i;:::-;-1:-1:-1;4791:4:1;4634:169;;;;;:::o;5285:422::-;5391:4;5408:36;5418:6;5426:9;5437:6;5408:9;:36::i;:::-;-1:-1:-1;;;;;5484:19:1;;5457:24;5484:19;;;:11;:19;;;;;;;;911:10:0;5484:33:1;;;;;;;;5536:26;;;;5528:79;;;;-1:-1:-1;;;5528:79:1;;2943:2:5;5528:79:1;;;2925:21:5;2982:2;2962:18;;;2955:30;3021:34;3001:18;;;2994:62;-1:-1:-1;;;3072:18:5;;;3065:38;3120:19;;5528:79:1;;;;;;;;;5618:57;5627:6;911:10:0;5649:25:1;5668:6;5649:16;:25;:::i;:::-;5618:8;:57::i;:::-;-1:-1:-1;5695:4:1;;5285:422;-1:-1:-1;;;;5285:422:1:o;6116:215::-;911:10:0;6204:4:1;6253:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6253:34:1;;;;;;;;;;6204:4;;6221:80;;6244:7;;6253:47;;6290:10;;6253:47;:::i;2686:104::-;2742:13;2775:7;2768:14;;;;;:::i;6834:377::-;911:10:0;6927:4:1;6971:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6971:34:1;;;;;;;;;;7024:35;;;;7016:85;;;;-1:-1:-1;;;7016:85:1;;3747:2:5;7016:85:1;;;3729:21:5;3786:2;3766:18;;;3759:30;3825:34;3805:18;;;3798:62;-1:-1:-1;;;3876:18:5;;;3869:35;3921:19;;7016:85:1;3545:401:5;7016:85:1;7112:67;911:10:0;7135:7:1;7144:34;7163:15;7144:16;:34;:::i;7112:67::-;-1:-1:-1;7199:4:1;;6834:377;-1:-1:-1;;;6834:377:1:o;4098:175::-;4184:4;4201:42;911:10:0;4225:9:1;4236:6;4201:9;:42::i;10190:346::-;-1:-1:-1;;;;;10292:19:1;;10284:68;;;;-1:-1:-1;;;10284:68:1;;4153:2:5;10284:68:1;;;4135:21:5;4192:2;4172:18;;;4165:30;4231:34;4211:18;;;4204:62;-1:-1:-1;;;4282:18:5;;;4275:34;4326:19;;10284:68:1;3951:400:5;10284:68:1;-1:-1:-1;;;;;10371:21:1;;10363:68;;;;-1:-1:-1;;;10363:68:1;;4558:2:5;10363:68:1;;;4540:21:5;4597:2;4577:18;;;4570:30;4636:34;4616:18;;;4609:62;-1:-1:-1;;;4687:18:5;;;4680:32;4729:19;;10363:68:1;4356:398:5;10363:68:1;-1:-1:-1;;;;;10444:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10496:32;;1342:25:5;;;10496:32:1;;1315:18:5;10496:32:1;;;;;;;10190:346;;;:::o;7701:604::-;-1:-1:-1;;;;;7807:20:1;;7799:70;;;;-1:-1:-1;;;7799:70:1;;4961:2:5;7799:70:1;;;4943:21:5;5000:2;4980:18;;;4973:30;5039:34;5019:18;;;5012:62;-1:-1:-1;;;5090:18:5;;;5083:35;5135:19;;7799:70:1;4759:401:5;7799:70:1;-1:-1:-1;;;;;7888:23:1;;7880:71;;;;-1:-1:-1;;;7880:71:1;;5367:2:5;7880:71:1;;;5349:21:5;5406:2;5386:18;;;5379:30;5445:34;5425:18;;;5418:62;-1:-1:-1;;;5496:18:5;;;5489:33;5539:19;;7880:71:1;5165:399:5;7880:71:1;-1:-1:-1;;;;;8048:17:1;;8024:21;8048:17;;;:9;:17;;;;;;8084:23;;;;8076:74;;;;-1:-1:-1;;;8076:74:1;;5771:2:5;8076:74:1;;;5753:21:5;5810:2;5790:18;;;5783:30;5849:34;5829:18;;;5822:62;-1:-1:-1;;;5900:18:5;;;5893:36;5946:19;;8076:74:1;5569:402:5;8076:74:1;8181:22;8197:6;8181:13;:22;:::i;:::-;-1:-1:-1;;;;;8161:17:1;;;;;;;:9;:17;;;;;;:42;;;;8214:20;;;;;;;;:30;;8238:6;;8161:17;8214:30;;8238:6;;8214:30;:::i;:::-;;;;;;;;8279:9;-1:-1:-1;;;;;8262:35:1;8271:6;-1:-1:-1;;;;;8262:35:1;;8290:6;8262:35;;;;1342:25:5;;1330:2;1315:18;;1196:177;8262:35:1;;;;;;;;7788:517;7701:604;;;:::o;14:548:5:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:5;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:5:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:5:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;3150:127::-;3211:10;3206:3;3202:20;3199:1;3192:31;3242:4;3239:1;3232:15;3266:4;3263:1;3256:15;3282:128;3349:9;;;3370:11;;;3367:37;;;3384:18;;:::i;3415:125::-;3480:9;;;3501:10;;;3498:36;;;3514:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "447800",
								"executionCost": "478",
								"totalCost": "448278"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24616",
								"balanceOf(address)": "2556",
								"decimals()": "265",
								"decreaseAllowance(address,uint256)": "27016",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2325",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"__ERC20_init(string memory,string memory)": "infinite",
								"__ERC20_init_unchained(string memory,string memory)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1396,
									"end": 11266,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1396,
									"end": 11266,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1396,
									"end": 11266,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1396,
									"end": 11266,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 1396,
									"end": 11266,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1396,
									"end": 11266,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1396,
									"end": 11266,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1396,
									"end": 11266,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1396,
									"end": 11266,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1396,
									"end": 11266,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1396,
									"end": 11266,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1396,
									"end": 11266,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1396,
									"end": 11266,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1396,
									"end": 11266,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1396,
									"end": 11266,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1396,
									"end": 11266,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1396,
									"end": 11266,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1396,
									"end": 11266,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1396,
									"end": 11266,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1396,
									"end": 11266,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1396,
									"end": 11266,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206fd1bf3d6c43566062dde49bcb6d2decc01be16459ad8090a65579d2b1a2cc1e64736f6c63430008170033",
									".code": [
										{
											"begin": 1396,
											"end": 11266,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "PUSH",
											"source": 1,
											"value": "A457C2D7"
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 11266,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2567,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2467,
											"end": 2567,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2467,
											"end": 2567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2467,
											"end": 2567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2567,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2467,
											"end": 2567,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2567,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2467,
											"end": 2567,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2467,
											"end": 2567,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2467,
											"end": 2567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2567,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2467,
											"end": 2567,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2567,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2467,
											"end": 2567,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2567,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2567,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2567,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2567,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4634,
											"end": 4803,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4634,
											"end": 4803,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4634,
											"end": 4803,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4634,
											"end": 4803,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4634,
											"end": 4803,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4634,
											"end": 4803,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4634,
											"end": 4803,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4634,
											"end": 4803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4634,
											"end": 4803,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4634,
											"end": 4803,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4634,
											"end": 4803,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4634,
											"end": 4803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4634,
											"end": 4803,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4634,
											"end": 4803,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4634,
											"end": 4803,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4634,
											"end": 4803,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4634,
											"end": 4803,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3587,
											"end": 3695,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3587,
											"end": 3695,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3675,
											"end": 3687,
											"name": "PUSH",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3675,
											"end": 3687,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3587,
											"end": 3695,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3587,
											"end": 3695,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3587,
											"end": 3695,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3587,
											"end": 3695,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3587,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5285,
											"end": 5707,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5285,
											"end": 5707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5285,
											"end": 5707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 5285,
											"end": 5707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5285,
											"end": 5707,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5285,
											"end": 5707,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5285,
											"end": 5707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 5285,
											"end": 5707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5285,
											"end": 5707,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 5285,
											"end": 5707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5285,
											"end": 5707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5285,
											"end": 5707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3522,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3429,
											"end": 3522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3522,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3429,
											"end": 3522,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3512,
											"end": 3514,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3429,
											"end": 3522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1711,
											"end": 1895,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6116,
											"end": 6331,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 6116,
											"end": 6331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6116,
											"end": 6331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 6116,
											"end": 6331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 6116,
											"end": 6331,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6116,
											"end": 6331,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6116,
											"end": 6331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 6116,
											"end": 6331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6116,
											"end": 6331,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 6116,
											"end": 6331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6116,
											"end": 6331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6116,
											"end": 6331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3758,
											"end": 3885,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3758,
											"end": 3885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3758,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 3758,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3758,
											"end": 3885,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3758,
											"end": 3885,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3758,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3758,
											"end": 3885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3758,
											"end": 3885,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3758,
											"end": 3885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3859,
											"end": 3877,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3832,
											"end": 3839,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3859,
											"end": 3877,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 3877,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 3877,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 3868,
											"name": "PUSH",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3859,
											"end": 3877,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3859,
											"end": 3877,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 3877,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3859,
											"end": 3877,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 3877,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 3877,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 3877,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3758,
											"end": 3885,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2686,
											"end": 2790,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2686,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2686,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2686,
											"end": 2790,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2686,
											"end": 2790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 7211,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6834,
											"end": 7211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 7211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 6834,
											"end": 7211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6834,
											"end": 7211,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 7211,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6834,
											"end": 7211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 6834,
											"end": 7211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 7211,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 6834,
											"end": 7211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 7211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6834,
											"end": 7211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4098,
											"end": 4273,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 4098,
											"end": 4273,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4098,
											"end": 4273,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4098,
											"end": 4273,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 4098,
											"end": 4273,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4098,
											"end": 4273,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4098,
											"end": 4273,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4098,
											"end": 4273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4098,
											"end": 4273,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 4098,
											"end": 4273,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4098,
											"end": 4273,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 4098,
											"end": 4273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4336,
											"end": 4487,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 4336,
											"end": 4487,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4336,
											"end": 4487,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4336,
											"end": 4487,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 4336,
											"end": 4487,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4336,
											"end": 4487,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4336,
											"end": 4487,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4336,
											"end": 4487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4336,
											"end": 4487,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 4336,
											"end": 4487,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4452,
											"end": 4470,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4452,
											"end": 4470,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4452,
											"end": 4470,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4425,
											"end": 4432,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4452,
											"end": 4470,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4452,
											"end": 4470,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4452,
											"end": 4470,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4452,
											"end": 4463,
											"name": "PUSH",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4452,
											"end": 4470,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4452,
											"end": 4470,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4452,
											"end": 4470,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4452,
											"end": 4470,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4452,
											"end": 4470,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4452,
											"end": 4470,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4452,
											"end": 4470,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4452,
											"end": 4470,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4452,
											"end": 4479,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4452,
											"end": 4479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4452,
											"end": 4479,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4452,
											"end": 4479,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4452,
											"end": 4479,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4452,
											"end": 4479,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4452,
											"end": 4479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4452,
											"end": 4479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4452,
											"end": 4479,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4452,
											"end": 4479,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4452,
											"end": 4479,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4452,
											"end": 4479,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4452,
											"end": 4479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4336,
											"end": 4487,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2567,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2467,
											"end": 2567,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2534,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2554,
											"end": 2559,
											"name": "PUSH",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2547,
											"end": 2559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2547,
											"end": 2559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2559,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4634,
											"end": 4803,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4634,
											"end": 4803,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4717,
											"end": 4721,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4734,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 911,
											"end": 921,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4757,
											"end": 4764,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4766,
											"end": 4772,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4734,
											"end": 4742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4734,
											"end": 4773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4734,
											"end": 4773,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4734,
											"end": 4773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4791,
											"end": 4795,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4634,
											"end": 4803,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 4634,
											"end": 4803,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4634,
											"end": 4803,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4634,
											"end": 4803,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4634,
											"end": 4803,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4634,
											"end": 4803,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4634,
											"end": 4803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5285,
											"end": 5707,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 5285,
											"end": 5707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5391,
											"end": 5395,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5408,
											"end": 5444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 5418,
											"end": 5424,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5426,
											"end": 5435,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5437,
											"end": 5443,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5408,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 5408,
											"end": 5444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5408,
											"end": 5444,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 5408,
											"end": 5444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5484,
											"end": 5503,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5484,
											"end": 5503,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5457,
											"end": 5481,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5484,
											"end": 5503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5484,
											"end": 5503,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5484,
											"end": 5503,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5484,
											"end": 5495,
											"name": "PUSH",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 5484,
											"end": 5503,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5484,
											"end": 5503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5484,
											"end": 5503,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5484,
											"end": 5503,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5484,
											"end": 5503,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5484,
											"end": 5503,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5484,
											"end": 5503,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5484,
											"end": 5503,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 911,
											"end": 921,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5484,
											"end": 5517,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5484,
											"end": 5517,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5484,
											"end": 5517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5484,
											"end": 5517,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5484,
											"end": 5517,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5484,
											"end": 5517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5484,
											"end": 5517,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5484,
											"end": 5517,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5536,
											"end": 5562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5536,
											"end": 5562,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5536,
											"end": 5562,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5536,
											"end": 5562,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5528,
											"end": 5607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5528,
											"end": 5607,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5528,
											"end": 5607,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5528,
											"end": 5607,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5528,
											"end": 5607,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5528,
											"end": 5607,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 2945,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5528,
											"end": 5607,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5528,
											"end": 5607,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5528,
											"end": 5607,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2925,
											"end": 2946,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2982,
											"end": 2984,
											"name": "PUSH",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 2962,
											"end": 2980,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2962,
											"end": 2980,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2962,
											"end": 2980,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2955,
											"end": 2985,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3021,
											"end": 3055,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732061"
										},
										{
											"begin": 3001,
											"end": 3019,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3001,
											"end": 3019,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3001,
											"end": 3019,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2994,
											"end": 3056,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6C6C6F77616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3072,
											"end": 3090,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3072,
											"end": 3090,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3072,
											"end": 3090,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3065,
											"end": 3103,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3120,
											"end": 3139,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3120,
											"end": 3139,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5528,
											"end": 5607,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 5528,
											"end": 5607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5528,
											"end": 5607,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5528,
											"end": 5607,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5528,
											"end": 5607,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5528,
											"end": 5607,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5528,
											"end": 5607,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5528,
											"end": 5607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5528,
											"end": 5607,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5528,
											"end": 5607,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5528,
											"end": 5607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5618,
											"end": 5675,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 5627,
											"end": 5633,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 911,
											"end": 921,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5649,
											"end": 5674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 5668,
											"end": 5674,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5649,
											"end": 5665,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5649,
											"end": 5674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 5649,
											"end": 5674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5649,
											"end": 5674,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 5649,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5618,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 5618,
											"end": 5675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5618,
											"end": 5675,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 5618,
											"end": 5675,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5695,
											"end": 5699,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5695,
											"end": 5699,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5285,
											"end": 5707,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5285,
											"end": 5707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6116,
											"end": 6331,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6116,
											"end": 6331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 911,
											"end": 921,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6204,
											"end": 6208,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6253,
											"end": 6278,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6253,
											"end": 6278,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6253,
											"end": 6278,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6253,
											"end": 6264,
											"name": "PUSH",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 6253,
											"end": 6278,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6253,
											"end": 6278,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6253,
											"end": 6278,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6253,
											"end": 6278,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6253,
											"end": 6278,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6253,
											"end": 6278,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6253,
											"end": 6278,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6253,
											"end": 6278,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6253,
											"end": 6287,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6253,
											"end": 6287,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6253,
											"end": 6287,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6253,
											"end": 6287,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6253,
											"end": 6287,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6253,
											"end": 6287,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6253,
											"end": 6287,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6253,
											"end": 6287,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6253,
											"end": 6287,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6253,
											"end": 6287,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6204,
											"end": 6208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6221,
											"end": 6301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 6221,
											"end": 6301,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6244,
											"end": 6251,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6244,
											"end": 6251,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6253,
											"end": 6300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 6253,
											"end": 6300,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6300,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6300,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6253,
											"end": 6300,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 6253,
											"end": 6300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2686,
											"end": 2790,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2686,
											"end": 2790,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2742,
											"end": 2755,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2775,
											"end": 2782,
											"name": "PUSH",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2768,
											"end": 2782,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2768,
											"end": 2782,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2768,
											"end": 2782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2768,
											"end": 2782,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2768,
											"end": 2782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2768,
											"end": 2782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 7211,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 6834,
											"end": 7211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 911,
											"end": 921,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6927,
											"end": 6931,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6971,
											"end": 6996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6971,
											"end": 6996,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6971,
											"end": 6996,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6971,
											"end": 6982,
											"name": "PUSH",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 6971,
											"end": 6996,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6971,
											"end": 6996,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6971,
											"end": 6996,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6971,
											"end": 6996,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6971,
											"end": 6996,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6971,
											"end": 6996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6971,
											"end": 6996,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6971,
											"end": 6996,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6971,
											"end": 7005,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6971,
											"end": 7005,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6971,
											"end": 7005,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6971,
											"end": 7005,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6971,
											"end": 7005,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6971,
											"end": 7005,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6971,
											"end": 7005,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6971,
											"end": 7005,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6971,
											"end": 7005,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6971,
											"end": 7005,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7024,
											"end": 7059,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7024,
											"end": 7059,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7024,
											"end": 7059,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7024,
											"end": 7059,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7016,
											"end": 7101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 7016,
											"end": 7101,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7016,
											"end": 7101,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7016,
											"end": 7101,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7016,
											"end": 7101,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7016,
											"end": 7101,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3747,
											"end": 3749,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7016,
											"end": 7101,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7016,
											"end": 7101,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7016,
											"end": 7101,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3750,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3786,
											"end": 3788,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 3766,
											"end": 3784,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3766,
											"end": 3784,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3766,
											"end": 3784,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3759,
											"end": 3789,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3825,
											"end": 3859,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3805,
											"end": 3823,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3805,
											"end": 3823,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3805,
											"end": 3823,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3798,
											"end": 3860,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3876,
											"end": 3894,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3876,
											"end": 3894,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3876,
											"end": 3894,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3869,
											"end": 3904,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3921,
											"end": 3940,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3921,
											"end": 3940,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7016,
											"end": 7101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3545,
											"end": 3946,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7016,
											"end": 7101,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 7016,
											"end": 7101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7112,
											"end": 7179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 911,
											"end": 921,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 7135,
											"end": 7142,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7144,
											"end": 7178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 7163,
											"end": 7178,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7144,
											"end": 7160,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7144,
											"end": 7178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 7144,
											"end": 7178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7112,
											"end": 7179,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 7112,
											"end": 7179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7199,
											"end": 7203,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7199,
											"end": 7203,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6834,
											"end": 7211,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6834,
											"end": 7211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4098,
											"end": 4273,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 4098,
											"end": 4273,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4184,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4201,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 911,
											"end": 921,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4225,
											"end": 4234,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4236,
											"end": 4242,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4201,
											"end": 4210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4201,
											"end": 4243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10190,
											"end": 10536,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 10190,
											"end": 10536,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10292,
											"end": 10311,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10292,
											"end": 10311,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10284,
											"end": 10352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 10284,
											"end": 10352,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10284,
											"end": 10352,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10284,
											"end": 10352,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10284,
											"end": 10352,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10284,
											"end": 10352,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4153,
											"end": 4155,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10284,
											"end": 10352,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10284,
											"end": 10352,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10284,
											"end": 10352,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4156,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4192,
											"end": 4194,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4172,
											"end": 4190,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4172,
											"end": 4190,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4172,
											"end": 4190,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4165,
											"end": 4195,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4231,
											"end": 4265,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4211,
											"end": 4229,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4211,
											"end": 4229,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4211,
											"end": 4229,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4204,
											"end": 4266,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4282,
											"end": 4300,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4282,
											"end": 4300,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4282,
											"end": 4300,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4275,
											"end": 4309,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4326,
											"end": 4345,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4326,
											"end": 4345,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10284,
											"end": 10352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3951,
											"end": 4351,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10284,
											"end": 10352,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 10284,
											"end": 10352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10371,
											"end": 10392,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10371,
											"end": 10392,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10363,
											"end": 10431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 10363,
											"end": 10431,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10363,
											"end": 10431,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10363,
											"end": 10431,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10363,
											"end": 10431,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10363,
											"end": 10431,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4558,
											"end": 4560,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10363,
											"end": 10431,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10363,
											"end": 10431,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10363,
											"end": 10431,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4540,
											"end": 4561,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4597,
											"end": 4599,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 4577,
											"end": 4595,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4577,
											"end": 4595,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4577,
											"end": 4595,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4570,
											"end": 4600,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4636,
											"end": 4670,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4616,
											"end": 4634,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4616,
											"end": 4634,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4616,
											"end": 4634,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4609,
											"end": 4671,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4687,
											"end": 4705,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4687,
											"end": 4705,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4687,
											"end": 4705,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4680,
											"end": 4712,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4729,
											"end": 4748,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4729,
											"end": 4748,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10363,
											"end": 10431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 4356,
											"end": 4754,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10363,
											"end": 10431,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 10363,
											"end": 10431,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10444,
											"end": 10462,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10444,
											"end": 10462,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10444,
											"end": 10462,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10444,
											"end": 10462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10444,
											"end": 10462,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10444,
											"end": 10462,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10444,
											"end": 10462,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10444,
											"end": 10455,
											"name": "PUSH",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 10444,
											"end": 10462,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10444,
											"end": 10462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10444,
											"end": 10462,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10444,
											"end": 10462,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10444,
											"end": 10462,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10444,
											"end": 10462,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10444,
											"end": 10462,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10444,
											"end": 10462,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10444,
											"end": 10471,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10444,
											"end": 10471,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10444,
											"end": 10471,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10444,
											"end": 10471,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10444,
											"end": 10471,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10444,
											"end": 10471,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10444,
											"end": 10471,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10444,
											"end": 10471,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10444,
											"end": 10471,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10444,
											"end": 10471,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10444,
											"end": 10471,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10444,
											"end": 10471,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10444,
											"end": 10471,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10444,
											"end": 10480,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10444,
											"end": 10480,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10444,
											"end": 10480,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10496,
											"end": 10528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10496,
											"end": 10528,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10496,
											"end": 10528,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10496,
											"end": 10528,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10496,
											"end": 10528,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10496,
											"end": 10528,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10496,
											"end": 10528,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10496,
											"end": 10528,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10496,
											"end": 10528,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10496,
											"end": 10528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10496,
											"end": 10528,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10190,
											"end": 10536,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10190,
											"end": 10536,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10190,
											"end": 10536,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10190,
											"end": 10536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7701,
											"end": 8305,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 7701,
											"end": 8305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7807,
											"end": 7827,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7807,
											"end": 7827,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7799,
											"end": 7869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 7799,
											"end": 7869,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7799,
											"end": 7869,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7799,
											"end": 7869,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7799,
											"end": 7869,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7799,
											"end": 7869,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4961,
											"end": 4963,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7799,
											"end": 7869,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7799,
											"end": 7869,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7799,
											"end": 7869,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4943,
											"end": 4964,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5000,
											"end": 5002,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 4980,
											"end": 4998,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4980,
											"end": 4998,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4980,
											"end": 4998,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4973,
											"end": 5003,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5039,
											"end": 5073,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 5019,
											"end": 5037,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5019,
											"end": 5037,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5019,
											"end": 5037,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5012,
											"end": 5074,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5090,
											"end": 5108,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5090,
											"end": 5108,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5090,
											"end": 5108,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5083,
											"end": 5118,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5135,
											"end": 5154,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5135,
											"end": 5154,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7799,
											"end": 7869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 4759,
											"end": 5160,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7799,
											"end": 7869,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 7799,
											"end": 7869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7888,
											"end": 7911,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7888,
											"end": 7911,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7880,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 7880,
											"end": 7951,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7880,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7880,
											"end": 7951,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7880,
											"end": 7951,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7880,
											"end": 7951,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5367,
											"end": 5369,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7880,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7880,
											"end": 7951,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7880,
											"end": 7951,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5349,
											"end": 5370,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5406,
											"end": 5408,
											"name": "PUSH",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 5386,
											"end": 5404,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5386,
											"end": 5404,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5386,
											"end": 5404,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5379,
											"end": 5409,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5445,
											"end": 5479,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5425,
											"end": 5443,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5425,
											"end": 5443,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5425,
											"end": 5443,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5418,
											"end": 5480,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5496,
											"end": 5514,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5496,
											"end": 5514,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5496,
											"end": 5514,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5489,
											"end": 5522,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5539,
											"end": 5558,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5539,
											"end": 5558,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7880,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 5165,
											"end": 5564,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7880,
											"end": 7951,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 7880,
											"end": 7951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8048,
											"end": 8065,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8048,
											"end": 8065,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8024,
											"end": 8045,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8048,
											"end": 8065,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8048,
											"end": 8065,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8048,
											"end": 8065,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8048,
											"end": 8057,
											"name": "PUSH",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 8048,
											"end": 8065,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8048,
											"end": 8065,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8048,
											"end": 8065,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8048,
											"end": 8065,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8048,
											"end": 8065,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8048,
											"end": 8065,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8084,
											"end": 8107,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8084,
											"end": 8107,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8084,
											"end": 8107,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8084,
											"end": 8107,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8150,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 8076,
											"end": 8150,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8150,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8076,
											"end": 8150,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8076,
											"end": 8150,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8150,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5771,
											"end": 5773,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8076,
											"end": 8150,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8076,
											"end": 8150,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8150,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5753,
											"end": 5774,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5810,
											"end": 5812,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 5790,
											"end": 5808,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5790,
											"end": 5808,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5790,
											"end": 5808,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5783,
											"end": 5813,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5849,
											"end": 5883,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5829,
											"end": 5847,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5829,
											"end": 5847,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5829,
											"end": 5847,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5822,
											"end": 5884,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5900,
											"end": 5918,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5900,
											"end": 5918,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5900,
											"end": 5918,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5893,
											"end": 5929,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5946,
											"end": 5965,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5946,
											"end": 5965,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8076,
											"end": 8150,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 5569,
											"end": 5971,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8076,
											"end": 8150,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 8076,
											"end": 8150,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8181,
											"end": 8203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 8197,
											"end": 8203,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8181,
											"end": 8194,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8181,
											"end": 8203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 8181,
											"end": 8203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8181,
											"end": 8203,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 8181,
											"end": 8203,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8161,
											"end": 8178,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8178,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8178,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8161,
											"end": 8178,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8178,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8178,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8170,
											"name": "PUSH",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 8161,
											"end": 8178,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8161,
											"end": 8178,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8178,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8161,
											"end": 8178,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8178,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8178,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8203,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8203,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8203,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8203,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8214,
											"end": 8234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8214,
											"end": 8234,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8214,
											"end": 8234,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8214,
											"end": 8234,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8214,
											"end": 8234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8214,
											"end": 8234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8214,
											"end": 8234,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8214,
											"end": 8234,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8214,
											"end": 8244,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8214,
											"end": 8244,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8238,
											"end": 8244,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8238,
											"end": 8244,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8161,
											"end": 8178,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8214,
											"end": 8244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 8214,
											"end": 8244,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8238,
											"end": 8244,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8238,
											"end": 8244,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8214,
											"end": 8244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 8214,
											"end": 8244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8214,
											"end": 8244,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 8214,
											"end": 8244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8214,
											"end": 8244,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8214,
											"end": 8244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8214,
											"end": 8244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8214,
											"end": 8244,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8214,
											"end": 8244,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8214,
											"end": 8244,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8214,
											"end": 8244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8279,
											"end": 8288,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8262,
											"end": 8297,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8271,
											"end": 8277,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8262,
											"end": 8297,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8297,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8290,
											"end": 8296,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8297,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8262,
											"end": 8297,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 8262,
											"end": 8297,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8262,
											"end": 8297,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 8262,
											"end": 8297,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8297,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8262,
											"end": 8297,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8297,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8297,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8297,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8297,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8297,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 7788,
											"end": 8305,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7701,
											"end": 8305,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7701,
											"end": 8305,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7701,
											"end": 8305,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7701,
											"end": 8305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 254,
											"end": 256,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1495,
											"end": 1527,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 1563,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 1611,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1378,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2014,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1991,
											"end": 1998,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1987,
											"end": 2010,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 2015,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 2070,
											"end": 2079,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 2051,
											"end": 2080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2041,
											"end": 2080,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 2086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2159,
											"end": 2165,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2173,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2220,
											"end": 2222,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2199,
											"end": 2206,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2195,
											"end": 2218,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2191,
											"end": 2223,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2236,
											"end": 2237,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2234,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 2278,
											"end": 2287,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 2259,
											"end": 2288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 2341,
											"end": 2343,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2330,
											"end": 2339,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2326,
											"end": 2344,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 2307,
											"end": 2345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2435,
											"end": 2436,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2553,
											"end": 2557,
											"name": "PUSH",
											"source": 5,
											"value": "7F"
										},
										{
											"begin": 2545,
											"end": 2551,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2606,
											"end": 2608,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2598,
											"end": 2604,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2595,
											"end": 2609,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2575,
											"end": 2593,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2572,
											"end": 2610,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2652,
											"end": 2662,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 2647,
											"end": 2650,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2643,
											"end": 2663,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2640,
											"end": 2641,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2664,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2687,
											"end": 2691,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2684,
											"end": 2685,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2677,
											"end": 2692,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2715,
											"end": 2719,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2712,
											"end": 2713,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2356,
											"end": 2736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3150,
											"end": 3277,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 3150,
											"end": 3277,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3211,
											"end": 3221,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 3206,
											"end": 3209,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3202,
											"end": 3222,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 3199,
											"end": 3200,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3192,
											"end": 3223,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3246,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 3239,
											"end": 3240,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3232,
											"end": 3247,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3266,
											"end": 3270,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3263,
											"end": 3264,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3256,
											"end": 3271,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3282,
											"end": 3410,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 3282,
											"end": 3410,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3349,
											"end": 3358,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3349,
											"end": 3358,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3349,
											"end": 3358,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3370,
											"end": 3381,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3370,
											"end": 3381,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3370,
											"end": 3381,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3384,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 3384,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 3384,
											"end": 3402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3415,
											"end": 3540,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 3415,
											"end": 3540,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3480,
											"end": 3489,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3480,
											"end": 3489,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3480,
											"end": 3489,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3501,
											"end": 3511,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3501,
											"end": 3511,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3501,
											"end": 3511,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3534,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3498,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 3498,
											"end": 3534,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 3514,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 3514,
											"end": 3532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"ContextUpgradeable.sol",
								"ERC20Upgradeable.sol",
								"IERC20MetadataUpgradeable.sol",
								"IERC20Upgradeable.sol",
								"Initializable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ContextUpgradeable.sol\":{\"keccak256\":\"0x74fbdcec83d3842760c7ae7aec2bcd7ecd6a3fa890d597b38fb61480da553ca6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://088f61b256418ca2c3d3b845af6793a86ede9c9bbe1553887bad3782868a2304\",\"dweb:/ipfs/QmexjQidgCAZLn84sHPH4CrcaRVR3jAbCQbtHN8g3gh3df\"]},\"ERC20Upgradeable.sol\":{\"keccak256\":\"0x87601f886febf073b1e99159d2ef92d05aa2e40954ed18633969ec570ef80950\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ddafd569e24aeda9cd23e7879185533a1e5b455788a49135d51377a959e885e\",\"dweb:/ipfs/QmaCZthqanTvPcMs6dK4FrHj16wHAA3ShAmHsg5ean7vdg\"]},\"IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0xfc8b79eef44f798f15ab0105cc668cb2808d91197a507b44d090977e627139ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://922ce684bfd2d218abeea6d05bd27cd603ef83979a802448ae34fb09fc21e293\",\"dweb:/ipfs/QmQaRMV6VYMZhkUNCaRu5N3QGSSJLD8dfs4B2ZTkaYSq9z\"]},\"IERC20Upgradeable.sol\":{\"keccak256\":\"0x1f97178cc13b7ffb74da98709b4510bab47bce9c17f62c45bb65d4696b254992\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://768652c26a24cb0a539370874c42ced6cdba4ad1b97fdc42cc0af96959d6d886\",\"dweb:/ipfs/QmXKJSxqRBJzvAZUrWDd9YAPEaVKJJ6PAxUQsdJ6YcxVWg\"]},\"Initializable.sol\":{\"keccak256\":\"0x6f6a299eb96c7c419ae0dc45766224d43501702747d4a57f64c87373889f2651\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5ce2c6e10c1a74ef44a20110b3406674171d0bc25448d709385667c3c6046eb\",\"dweb:/ipfs/QmdjbuhQWiPnkbxDQp5VwXSahgwWXy1mJutt36yNHruPyh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 687,
								"contract": "ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 690,
								"contract": "ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 43,
								"contract": "ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)50_storage"
							},
							{
								"astId": 63,
								"contract": "ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "_balances",
								"offset": 0,
								"slot": "51",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 69,
								"contract": "ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "_allowances",
								"offset": 0,
								"slot": "52",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 71,
								"contract": "ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "53",
								"type": "t_uint256"
							},
							{
								"astId": 73,
								"contract": "ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "_name",
								"offset": 0,
								"slot": "54",
								"type": "t_string_storage"
							},
							{
								"astId": 75,
								"contract": "ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "_symbol",
								"offset": 0,
								"slot": "55",
								"type": "t_string_storage"
							},
							{
								"astId": 577,
								"contract": "ERC20Upgradeable.sol:ERC20Upgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "56",
								"type": "t_array(t_uint256)45_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)45_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[45]",
								"numberOfBytes": "1440"
							},
							"t_array(t_uint256)50_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[50]",
								"numberOfBytes": "1600"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC20MetadataUpgradeable.sol": {
				"IERC20MetadataUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC20MetadataUpgradeable.sol\":\"IERC20MetadataUpgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0xfc8b79eef44f798f15ab0105cc668cb2808d91197a507b44d090977e627139ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://922ce684bfd2d218abeea6d05bd27cd603ef83979a802448ae34fb09fc21e293\",\"dweb:/ipfs/QmQaRMV6VYMZhkUNCaRu5N3QGSSJLD8dfs4B2ZTkaYSq9z\"]},\"IERC20Upgradeable.sol\":{\"keccak256\":\"0x1f97178cc13b7ffb74da98709b4510bab47bce9c17f62c45bb65d4696b254992\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://768652c26a24cb0a539370874c42ced6cdba4ad1b97fdc42cc0af96959d6d886\",\"dweb:/ipfs/QmXKJSxqRBJzvAZUrWDd9YAPEaVKJJ6PAxUQsdJ6YcxVWg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC20Upgradeable.sol": {
				"IERC20Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC20Upgradeable.sol\":\"IERC20Upgradeable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20Upgradeable.sol\":{\"keccak256\":\"0x1f97178cc13b7ffb74da98709b4510bab47bce9c17f62c45bb65d4696b254992\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://768652c26a24cb0a539370874c42ced6cdba4ad1b97fdc42cc0af96959d6d886\",\"dweb:/ipfs/QmXKJSxqRBJzvAZUrWDd9YAPEaVKJJ6PAxUQsdJ6YcxVWg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Initializable.sol": {
				"Initializable": {
					"abi": [],
					"devdoc": {
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.",
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_initialized": {
								"details": "Indicates that the contract has been initialized."
							},
							"_initializing": {
								"details": "Indicates that the contract is in the process of being initialized."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Initializable.sol\":\"Initializable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Initializable.sol\":{\"keccak256\":\"0x6f6a299eb96c7c419ae0dc45766224d43501702747d4a57f64c87373889f2651\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5ce2c6e10c1a74ef44a20110b3406674171d0bc25448d709385667c3c6046eb\",\"dweb:/ipfs/QmdjbuhQWiPnkbxDQp5VwXSahgwWXy1mJutt36yNHruPyh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 687,
								"contract": "Initializable.sol:Initializable",
								"label": "_initialized",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 690,
								"contract": "Initializable.sol:Initializable",
								"label": "_initializing",
								"offset": 1,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							44
						],
						"Initializable": [
							727
						]
					},
					"id": 45,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:0"
						},
						{
							"absolutePath": "Initializable.sol",
							"file": "./Initializable.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 45,
							"sourceUnit": 728,
							"src": "60:29:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "Initializable",
										"nameLocations": [
											"639:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 727,
										"src": "639:13:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "639:13:0"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 44,
							"linearizedBaseContracts": [
								44,
								727
							],
							"name": "ContextUpgradeable",
							"nameLocation": "617:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 12,
										"nodeType": "Block",
										"src": "707:45:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 9,
														"name": "__Context_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "718:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "718:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 11,
												"nodeType": "ExpressionStatement",
												"src": "718:26:0"
											}
										]
									},
									"id": 13,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 7,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 6,
												"name": "initializer",
												"nameLocations": [
													"695:11:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 726,
												"src": "695:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "695:11:0"
										}
									],
									"name": "__Context_init",
									"nameLocation": "669:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "683:2:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "707:0:0"
									},
									"scope": 44,
									"src": "660:92:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "817:8:0",
										"statements": []
									},
									"id": 19,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 16,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 15,
												"name": "initializer",
												"nameLocations": [
													"805:11:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 726,
												"src": "805:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "805:11:0"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "769:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "793:2:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "817:0:0"
									},
									"scope": 44,
									"src": "760:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "893:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 24,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "911:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "915:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "911:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 23,
												"id": 26,
												"nodeType": "Return",
												"src": "904:17:0"
											}
										]
									},
									"id": 28,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "840:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "850:2:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "884:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:0"
									},
									"scope": 44,
									"src": "831:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 38,
										"nodeType": "Block",
										"src": "1004:168:0",
										"statements": [
											{
												"expression": {
													"id": 33,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "1015:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ContextUpgradeable_$44",
														"typeString": "contract ContextUpgradeable"
													}
												},
												"id": 34,
												"nodeType": "ExpressionStatement",
												"src": "1015:4:0"
											},
											{
												"expression": {
													"expression": {
														"id": 35,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1156:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1160:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1156:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 32,
												"id": 37,
												"nodeType": "Return",
												"src": "1149:15:0"
											}
										]
									},
									"id": 39,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "946:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "954:2:0"
									},
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 39,
												"src": "988:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 30,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "988:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "987:16:0"
									},
									"scope": 44,
									"src": "937:235:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 43,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "1198:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 44,
									"src": "1178:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$50_storage",
										"typeString": "uint256[50]"
									},
									"typeName": {
										"baseType": {
											"id": 40,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1178:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 42,
										"length": {
											"hexValue": "3530",
											"id": 41,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1186:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_50_by_1",
												"typeString": "int_const 50"
											},
											"value": "50"
										},
										"nodeType": "ArrayTypeName",
										"src": "1178:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
											"typeString": "uint256[50]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 45,
							"src": "599:608:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "35:1172:0"
				},
				"id": 0
			},
			"ERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "ERC20Upgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							44
						],
						"ERC20Upgradeable": [
							578
						],
						"IERC20MetadataUpgradeable": [
							603
						],
						"IERC20Upgradeable": [
							681
						],
						"Initializable": [
							727
						]
					},
					"id": 579,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 46,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:1"
						},
						{
							"absolutePath": "IERC20Upgradeable.sol",
							"file": "./IERC20Upgradeable.sol",
							"id": 47,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 579,
							"sourceUnit": 682,
							"src": "62:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IERC20MetadataUpgradeable.sol",
							"file": "./IERC20MetadataUpgradeable.sol",
							"id": 48,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 579,
							"sourceUnit": 604,
							"src": "97:41:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ContextUpgradeable.sol",
							"file": "./ContextUpgradeable.sol",
							"id": 49,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 579,
							"sourceUnit": 45,
							"src": "140:34:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Initializable.sol",
							"file": "./Initializable.sol",
							"id": 50,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 579,
							"sourceUnit": 728,
							"src": "176:29:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 52,
										"name": "Initializable",
										"nameLocations": [
											"1425:13:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 727,
										"src": "1425:13:1"
									},
									"id": 53,
									"nodeType": "InheritanceSpecifier",
									"src": "1425:13:1"
								},
								{
									"baseName": {
										"id": 54,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"1440:18:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 44,
										"src": "1440:18:1"
									},
									"id": 55,
									"nodeType": "InheritanceSpecifier",
									"src": "1440:18:1"
								},
								{
									"baseName": {
										"id": 56,
										"name": "IERC20Upgradeable",
										"nameLocations": [
											"1460:17:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 681,
										"src": "1460:17:1"
									},
									"id": 57,
									"nodeType": "InheritanceSpecifier",
									"src": "1460:17:1"
								},
								{
									"baseName": {
										"id": 58,
										"name": "IERC20MetadataUpgradeable",
										"nameLocations": [
											"1479:25:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 603,
										"src": "1479:25:1"
									},
									"id": 59,
									"nodeType": "InheritanceSpecifier",
									"src": "1479:25:1"
								}
							],
							"canonicalName": "ERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 51,
								"nodeType": "StructuredDocumentation",
								"src": "209:1185:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 578,
							"linearizedBaseContracts": [
								578,
								603,
								681,
								44,
								727
							],
							"name": "ERC20Upgradeable",
							"nameLocation": "1405:16:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 63,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1549:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 578,
									"src": "1512:46:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 62,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 60,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1521:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1512:28:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 61,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1532:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 69,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1625:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 578,
									"src": "1567:69:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 68,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 64,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1576:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1567:49:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 67,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 65,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1596:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1587:28:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 66,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1607:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 71,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1661:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 578,
									"src": "1645:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 70,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1645:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 73,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1697:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 578,
									"src": "1682:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 72,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1682:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 75,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1724:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 578,
									"src": "1709:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 74,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1709:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "2138:94:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 85,
														"name": "__Context_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "2149:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2149:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 87,
												"nodeType": "ExpressionStatement",
												"src": "2149:26:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 89,
															"name": "name_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 78,
															"src": "2209:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 90,
															"name": "symbol_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "2216:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 88,
														"name": "__ERC20_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 112,
														"src": "2186:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2186:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "2186:38:1"
											}
										]
									},
									"documentation": {
										"id": 76,
										"nodeType": "StructuredDocumentation",
										"src": "1740:305:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n The defaut value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 94,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 83,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 82,
												"name": "initializer",
												"nameLocations": [
													"2126:11:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 726,
												"src": "2126:11:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2126:11:1"
										}
									],
									"name": "__ERC20_init",
									"nameLocation": "2060:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2087:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "2073:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 77,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2073:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2108:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "2094:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 79,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2094:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2072:44:1"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2138:0:1"
									},
									"scope": 578,
									"src": "2051:181:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "2337:60:1",
										"statements": [
											{
												"expression": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 103,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "2348:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 104,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 96,
														"src": "2356:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2348:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "2348:13:1"
											},
											{
												"expression": {
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 107,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 75,
														"src": "2372:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 108,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "2382:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2372:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 110,
												"nodeType": "ExpressionStatement",
												"src": "2372:17:1"
											}
										]
									},
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 101,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 100,
												"name": "initializer",
												"nameLocations": [
													"2325:11:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 726,
												"src": "2325:11:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2325:11:1"
										}
									],
									"name": "__ERC20_init_unchained",
									"nameLocation": "2249:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2286:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "2272:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 95,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2272:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2307:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "2293:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 97,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2293:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2271:44:1"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2337:0:1"
									},
									"scope": 578,
									"src": "2240:157:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										590
									],
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "2536:31:1",
										"statements": [
											{
												"expression": {
													"id": 119,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 73,
													"src": "2554:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 118,
												"id": 120,
												"nodeType": "Return",
												"src": "2547:12:1"
											}
										]
									},
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "2405:56:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2476:4:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 115,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2503:8:1"
									},
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2480:2:1"
									},
									"returnParameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 122,
												"src": "2521:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 116,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2521:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2520:15:1"
									},
									"scope": 578,
									"src": "2467:100:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										596
									],
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "2757:33:1",
										"statements": [
											{
												"expression": {
													"id": 129,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 75,
													"src": "2775:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 128,
												"id": 130,
												"nodeType": "Return",
												"src": "2768:14:1"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "2575:105:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2695:6:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 125,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2724:8:1"
									},
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2701:2:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "2742:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 126,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2742:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2741:15:1"
									},
									"scope": 578,
									"src": "2686:104:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										602
									],
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "3494:28:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3512:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 138,
												"id": 140,
												"nodeType": "Return",
												"src": "3505:9:1"
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "2798:625:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3438:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 135,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3469:8:1"
									},
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3446:2:1"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "3487:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 136,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3487:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3486:7:1"
									},
									"scope": 578,
									"src": "3429:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										612
									],
									"body": {
										"id": 151,
										"nodeType": "Block",
										"src": "3657:38:1",
										"statements": [
											{
												"expression": {
													"id": 149,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 71,
													"src": "3675:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 148,
												"id": 150,
												"nodeType": "Return",
												"src": "3668:19:1"
											}
										]
									},
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "3530:51:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3596:11:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 145,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3630:8:1"
									},
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3607:2:1"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "3648:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3648:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3647:9:1"
									},
									"scope": 578,
									"src": "3587:108:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										620
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "3841:44:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 161,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "3859:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 163,
													"indexExpression": {
														"id": 162,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 155,
														"src": "3869:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3859:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 160,
												"id": 164,
												"nodeType": "Return",
												"src": "3852:25:1"
											}
										]
									},
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "3703:49:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3767:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 157,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3814:8:1"
									},
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3785:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "3777:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3777:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3776:17:1"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "3832:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:9:1"
									},
									"scope": 578,
									"src": "3758:127:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										630
									],
									"body": {
										"id": 186,
										"nodeType": "Block",
										"src": "4190:83:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 178,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "4211:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4211:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 180,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "4225:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 181,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "4236:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 177,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 408,
														"src": "4201:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4201:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 183,
												"nodeType": "ExpressionStatement",
												"src": "4201:42:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4261:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 176,
												"id": 185,
												"nodeType": "Return",
												"src": "4254:11:1"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "3893:199:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "4107:8:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 173,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4166:8:1"
									},
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4124:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "4116:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4143:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "4135:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4135:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4115:35:1"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "4184:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 174,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4184:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4183:6:1"
									},
									"scope": 578,
									"src": "4098:175:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										640
									],
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "4434:53:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 198,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 69,
															"src": "4452:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 200,
														"indexExpression": {
															"id": 199,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 190,
															"src": "4464:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4452:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 202,
													"indexExpression": {
														"id": 201,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "4471:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4452:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 197,
												"id": 203,
												"nodeType": "Return",
												"src": "4445:34:1"
											}
										]
									},
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "4281:49:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4345:9:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 194,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4407:8:1"
									},
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4363:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "4355:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4355:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4378:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "4370:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4370:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4354:32:1"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 205,
												"src": "4425:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4425:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4424:9:1"
									},
									"scope": 578,
									"src": "4336:151:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										650
									],
									"body": {
										"id": 225,
										"nodeType": "Block",
										"src": "4723:80:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 217,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "4743:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4743:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 219,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "4757:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 220,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "4766:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 216,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "4734:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4734:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 222,
												"nodeType": "ExpressionStatement",
												"src": "4734:39:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4791:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 215,
												"id": 224,
												"nodeType": "Return",
												"src": "4784:11:1"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "4495:133:1",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4643:7:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 212,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4699:8:1"
									},
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4659:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "4651:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4676:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "4668:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4650:33:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "4717:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4717:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4716:6:1"
									},
									"scope": 578,
									"src": "4634:169:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										662
									],
									"body": {
										"id": 272,
										"nodeType": "Block",
										"src": "5397:310:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 240,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "5418:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 241,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "5426:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 242,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "5437:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 239,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 408,
														"src": "5408:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5408:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 244,
												"nodeType": "ExpressionStatement",
												"src": "5408:36:1"
											},
											{
												"assignments": [
													246
												],
												"declarations": [
													{
														"constant": false,
														"id": 246,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "5465:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 272,
														"src": "5457:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 245,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5457:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 253,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 247,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 69,
															"src": "5484:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 249,
														"indexExpression": {
															"id": 248,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "5496:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5484:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 252,
													"indexExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 250,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "5504:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5504:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5484:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5457:60:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 255,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "5536:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 256,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "5556:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5536:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5564:42:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															},
															"value": "ERC20: transfer amount exceeds allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
															}
														],
														"id": 254,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5528:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5528:79:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 260,
												"nodeType": "ExpressionStatement",
												"src": "5528:79:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 262,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "5627:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 263,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "5635:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5635:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 265,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "5649:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 266,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "5668:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5649:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 261,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "5618:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5618:57:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 269,
												"nodeType": "ExpressionStatement",
												"src": "5618:57:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5695:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 238,
												"id": 271,
												"nodeType": "Return",
												"src": "5688:11:1"
											}
										]
									},
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "4811:468:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5294:12:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 235,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5373:8:1"
									},
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5315:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "5307:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5307:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5331:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "5323:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5323:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5350:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "5342:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5342:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5306:51:1"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "5391:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 236,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5391:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5390:6:1"
									},
									"scope": 578,
									"src": "5285:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 299,
										"nodeType": "Block",
										"src": "6210:121:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 284,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "6230:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6230:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 286,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "6244:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 287,
																		"name": "_allowances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 69,
																		"src": "6253:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(address => mapping(address => uint256))"
																		}
																	},
																	"id": 290,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 288,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 28,
																			"src": "6265:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 289,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6265:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6253:25:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 292,
																"indexExpression": {
																	"id": 291,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "6279:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6253:34:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 293,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "6290:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6253:47:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 283,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "6221:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6221:80:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 296,
												"nodeType": "ExpressionStatement",
												"src": "6221:80:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6319:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 282,
												"id": 298,
												"nodeType": "Return",
												"src": "6312:11:1"
											}
										]
									},
									"documentation": {
										"id": 274,
										"nodeType": "StructuredDocumentation",
										"src": "5715:395:1",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "6125:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6151:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "6143:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6143:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "6168:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "6160:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6160:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6142:37:1"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "6204:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 280,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6204:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6203:6:1"
									},
									"scope": 578,
									"src": "6116:215:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "6933:278:1",
										"statements": [
											{
												"assignments": [
													311
												],
												"declarations": [
													{
														"constant": false,
														"id": 311,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6952:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 337,
														"src": "6944:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 310,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6944:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 312,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 69,
															"src": "6971:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 315,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 313,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "6983:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6983:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6971:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 317,
													"indexExpression": {
														"id": 316,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "6997:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6971:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6944:61:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 320,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "7024:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 321,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 305,
																"src": "7044:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7024:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7061:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 319,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7016:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7016:85:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 325,
												"nodeType": "ExpressionStatement",
												"src": "7016:85:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 327,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 28,
																"src": "7121:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7121:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 329,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 303,
															"src": "7135:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 330,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "7144:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 331,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 305,
																"src": "7163:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7144:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 326,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "7112:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7112:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "7112:67:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7199:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 309,
												"id": 336,
												"nodeType": "Return",
												"src": "7192:11:1"
											}
										]
									},
									"documentation": {
										"id": 301,
										"nodeType": "StructuredDocumentation",
										"src": "6339:489:1",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6843:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6869:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "6861:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6861:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6886:15:1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "6878:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6860:42:1"
									},
									"returnParameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "6927:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 307,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6927:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6926:6:1"
									},
									"scope": 578,
									"src": "6834:377:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 407,
										"nodeType": "Block",
										"src": "7788:517:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 349,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "7807:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7825:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 351,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7817:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 350,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7817:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7817:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7807:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7829:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 348,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7799:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7799:70:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "7799:70:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 359,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 343,
																"src": "7888:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 362,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7909:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7901:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 360,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7901:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 363,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7901:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7888:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7913:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 358,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7880:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7880:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 367,
												"nodeType": "ExpressionStatement",
												"src": "7880:71:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 369,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "7985:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 370,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 343,
															"src": "7993:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 371,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "8004:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 368,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "7964:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7964:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 373,
												"nodeType": "ExpressionStatement",
												"src": "7964:47:1"
											},
											{
												"assignments": [
													375
												],
												"declarations": [
													{
														"constant": false,
														"id": 375,
														"mutability": "mutable",
														"name": "senderBalance",
														"nameLocation": "8032:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 407,
														"src": "8024:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 374,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8024:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 379,
												"initialValue": {
													"baseExpression": {
														"id": 376,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "8048:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 378,
													"indexExpression": {
														"id": 377,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "8058:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8048:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8024:41:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 381,
																"name": "senderBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 375,
																"src": "8084:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 382,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 345,
																"src": "8101:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8084:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8109:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 380,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8076:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8076:74:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 386,
												"nodeType": "ExpressionStatement",
												"src": "8076:74:1"
											},
											{
												"expression": {
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 387,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "8161:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 389,
														"indexExpression": {
															"id": 388,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "8171:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8161:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 392,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 390,
															"name": "senderBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "8181:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 391,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "8197:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8181:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8161:42:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 394,
												"nodeType": "ExpressionStatement",
												"src": "8161:42:1"
											},
											{
												"expression": {
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 395,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "8214:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 397,
														"indexExpression": {
															"id": 396,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 343,
															"src": "8224:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8214:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 398,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 345,
														"src": "8238:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8214:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "8214:30:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 402,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "8271:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 343,
															"src": "8279:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 404,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "8290:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 401,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "8262:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8262:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 406,
												"nodeType": "EmitStatement",
												"src": "8257:40:1"
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "7219:476:1",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7710:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7728:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "7720:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7720:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "7744:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "7736:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7763:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "7755:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7755:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7719:51:1"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7788:0:1"
									},
									"scope": 578,
									"src": "7701:604:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 454,
										"nodeType": "Block",
										"src": "8652:273:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 417,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 411,
																"src": "8671:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8690:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8682:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 418,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8682:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 421,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8682:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8671:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8694:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 416,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8663:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8663:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "8663:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8770:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8762:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 427,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8762:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8762:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 431,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "8774:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 432,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "8783:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 426,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "8741:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8741:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 434,
												"nodeType": "ExpressionStatement",
												"src": "8741:49:1"
											},
											{
												"expression": {
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 435,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 71,
														"src": "8803:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 436,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 413,
														"src": "8819:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8803:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 438,
												"nodeType": "ExpressionStatement",
												"src": "8803:22:1"
											},
											{
												"expression": {
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 439,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "8836:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 441,
														"indexExpression": {
															"id": 440,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "8846:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8836:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 442,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 413,
														"src": "8858:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8836:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "8836:28:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8897:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 447,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8889:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 446,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8889:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8889:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 450,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "8901:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 451,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "8910:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 445,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "8880:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8880:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 453,
												"nodeType": "EmitStatement",
												"src": "8875:42:1"
											}
										]
									},
									"documentation": {
										"id": 409,
										"nodeType": "StructuredDocumentation",
										"src": "8313:268:1",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `to` cannot be the zero address."
									},
									"id": 455,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8596:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8610:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "8602:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8602:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8627:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 455,
												"src": "8619:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8619:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8601:33:1"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8652:0:1"
									},
									"scope": 578,
									"src": "8587:338:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "9323:429:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 464,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "9342:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 467,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9361:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9353:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 465,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9353:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9353:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9342:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9365:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 463,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9334:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9334:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "9334:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "9435:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 477,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9452:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 476,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9444:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 475,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9444:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9444:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 479,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "9456:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "9414:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9414:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 481,
												"nodeType": "ExpressionStatement",
												"src": "9414:49:1"
											},
											{
												"assignments": [
													483
												],
												"declarations": [
													{
														"constant": false,
														"id": 483,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9484:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 516,
														"src": "9476:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 482,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9476:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 487,
												"initialValue": {
													"baseExpression": {
														"id": 484,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "9501:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 486,
													"indexExpression": {
														"id": 485,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "9511:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9501:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9476:43:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 491,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 489,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 483,
																"src": "9538:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 490,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 460,
																"src": "9556:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9538:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9564:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 488,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9530:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9530:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 494,
												"nodeType": "ExpressionStatement",
												"src": "9530:71:1"
											},
											{
												"expression": {
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 495,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "9612:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 497,
														"indexExpression": {
															"id": 496,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "9622:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9612:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 500,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 498,
															"name": "accountBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "9633:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 499,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "9650:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9633:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9612:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 502,
												"nodeType": "ExpressionStatement",
												"src": "9612:44:1"
											},
											{
												"expression": {
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 503,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 71,
														"src": "9667:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 504,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 460,
														"src": "9683:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9667:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 506,
												"nodeType": "ExpressionStatement",
												"src": "9667:22:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 508,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 458,
															"src": "9716:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9733:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9725:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 509,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9725:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9725:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 513,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "9737:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 507,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "9707:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9707:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 515,
												"nodeType": "EmitStatement",
												"src": "9702:42:1"
											}
										]
									},
									"documentation": {
										"id": 456,
										"nodeType": "StructuredDocumentation",
										"src": "8933:319:1",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9267:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9281:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "9273:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9273:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9298:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "9290:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9290:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9272:33:1"
									},
									"returnParameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9323:0:1"
									},
									"scope": 578,
									"src": "9258:494:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "10273:263:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 528,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "10292:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10309:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10301:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 529,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10301:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 532,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10301:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10292:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10313:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 527,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10284:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10284:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "10284:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 538,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 522,
																"src": "10371:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10390:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10382:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 539,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10382:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10382:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10371:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10394:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 537,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10363:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10363:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 546,
												"nodeType": "ExpressionStatement",
												"src": "10363:68:1"
											},
											{
												"expression": {
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 547,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 69,
																"src": "10444:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 550,
															"indexExpression": {
																"id": 548,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 520,
																"src": "10456:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10444:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 551,
														"indexExpression": {
															"id": 549,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "10463:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10444:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 552,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "10474:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10444:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "10444:36:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 556,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "10505:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 557,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "10512:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 558,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "10521:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 555,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "10496:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10496:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 560,
												"nodeType": "EmitStatement",
												"src": "10491:37:1"
											}
										]
									},
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "9760:424:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10199:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10216:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "10208:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10208:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10231:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "10223:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10223:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10248:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "10240:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10240:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10207:48:1"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10273:0:1"
									},
									"scope": 578,
									"src": "10190:346:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "11228:3:1",
										"statements": []
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "10544:589:1",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "11148:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "11177:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "11169:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11169:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11191:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "11183:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11183:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11203:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "11195:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11195:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11168:42:1"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11228:0:1"
									},
									"scope": 578,
									"src": "11139:92:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 577,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "11257:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 578,
									"src": "11237:25:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$45_storage",
										"typeString": "uint256[45]"
									},
									"typeName": {
										"baseType": {
											"id": 574,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "11237:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 576,
										"length": {
											"hexValue": "3435",
											"id": 575,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "11245:2:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_45_by_1",
												"typeString": "int_const 45"
											},
											"value": "45"
										},
										"nodeType": "ArrayTypeName",
										"src": "11237:11:1",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$45_storage_ptr",
											"typeString": "uint256[45]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 579,
							"src": "1396:9870:1",
							"usedErrors": [],
							"usedEvents": [
								671,
								680
							]
						}
					],
					"src": "35:11231:1"
				},
				"id": 1
			},
			"IERC20MetadataUpgradeable.sol": {
				"ast": {
					"absolutePath": "IERC20MetadataUpgradeable.sol",
					"exportedSymbols": {
						"IERC20MetadataUpgradeable": [
							603
						],
						"IERC20Upgradeable": [
							681
						]
					},
					"id": 604,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 580,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:2"
						},
						{
							"absolutePath": "IERC20Upgradeable.sol",
							"file": "./IERC20Upgradeable.sol",
							"id": 581,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 604,
							"sourceUnit": 682,
							"src": "62:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 583,
										"name": "IERC20Upgradeable",
										"nameLocations": [
											"260:17:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 681,
										"src": "260:17:2"
									},
									"id": 584,
									"nodeType": "InheritanceSpecifier",
									"src": "260:17:2"
								}
							],
							"canonicalName": "IERC20MetadataUpgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 582,
								"nodeType": "StructuredDocumentation",
								"src": "99:120:2",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 603,
							"linearizedBaseContracts": [
								603,
								681
							],
							"name": "IERC20MetadataUpgradeable",
							"nameLocation": "231:25:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "285:56:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 590,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "356:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "360:2:2"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "386:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 587,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "386:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "385:15:2"
									},
									"scope": 603,
									"src": "347:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "409:58:2",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 596,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "482:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "488:2:2"
									},
									"returnParameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "514:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 593,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "513:15:2"
									},
									"scope": 603,
									"src": "473:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 597,
										"nodeType": "StructuredDocumentation",
										"src": "537:67:2",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 602,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "619:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "627:2:2"
									},
									"returnParameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "653:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 599,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "653:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "652:7:2"
									},
									"scope": 603,
									"src": "610:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 604,
							"src": "221:442:2",
							"usedErrors": [],
							"usedEvents": [
								671,
								680
							]
						}
					],
					"src": "35:628:2"
				},
				"id": 2
			},
			"IERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "IERC20Upgradeable.sol",
					"exportedSymbols": {
						"IERC20Upgradeable": [
							681
						]
					},
					"id": 682,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 605,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 606,
								"nodeType": "StructuredDocumentation",
								"src": "62:72:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 681,
							"linearizedBaseContracts": [
								681
							],
							"name": "IERC20Upgradeable",
							"nameLocation": "146:17:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "171:68:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 612,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "254:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "265:2:3"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "291:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "291:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "290:9:3"
									},
									"scope": 681,
									"src": "245:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "308:74:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 620,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "397:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "415:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "407:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "407:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "406:17:3"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "447:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "446:9:3"
									},
									"scope": 681,
									"src": "388:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 621,
										"nodeType": "StructuredDocumentation",
										"src": "464:215:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 630,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "694:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "711:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "703:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "730:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "722:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "722:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "702:35:3"
									},
									"returnParameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "756:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 627,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "756:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "755:6:3"
									},
									"scope": 681,
									"src": "685:77:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "770:270:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 640,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1055:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1073:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "1065:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1065:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1088:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "1080:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1080:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1064:32:3"
									},
									"returnParameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "1120:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1120:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1119:9:3"
									},
									"scope": 681,
									"src": "1046:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "1137:655:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 650,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1807:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1823:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "1815:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1815:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1840:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "1832:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1832:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1814:33:3"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "1866:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 647,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1866:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1865:6:3"
									},
									"scope": 681,
									"src": "1798:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "1880:304:3",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 662,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2199:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2220:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2212:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2212:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2236:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2228:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2228:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2255:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2247:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2247:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2211:51:3"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "2281:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 659,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2281:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2280:6:3"
									},
									"scope": 681,
									"src": "2190:97:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 663,
										"nodeType": "StructuredDocumentation",
										"src": "2295:163:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 671,
									"name": "Transfer",
									"nameLocation": "2470:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2495:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "2479:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2479:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2517:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "2501:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2501:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2529:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "2521:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2521:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2478:57:3"
									},
									"src": "2464:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "2544:151:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 680,
									"name": "Approval",
									"nameLocation": "2707:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2732:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "2716:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2716:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2755:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "2739:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 678,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2772:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "2764:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2764:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2715:63:3"
									},
									"src": "2701:78:3"
								}
							],
							"scope": 682,
							"src": "136:2646:3",
							"usedErrors": [],
							"usedEvents": [
								671,
								680
							]
						}
					],
					"src": "35:2747:3"
				},
				"id": 3
			},
			"Initializable.sol": {
				"ast": {
					"absolutePath": "Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							727
						]
					},
					"id": 728,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 683,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "82:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 684,
								"nodeType": "StructuredDocumentation",
								"src": "109:945:4",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity."
							},
							"fullyImplemented": true,
							"id": 727,
							"linearizedBaseContracts": [
								727
							],
							"name": "Initializable",
							"nameLocation": "1074:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 685,
										"nodeType": "StructuredDocumentation",
										"src": "1097:75:4",
										"text": " @dev Indicates that the contract has been initialized."
									},
									"id": 687,
									"mutability": "mutable",
									"name": "_initialized",
									"nameLocation": "1191:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 727,
									"src": "1178:25:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 686,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1178:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 688,
										"nodeType": "StructuredDocumentation",
										"src": "1212:93:4",
										"text": " @dev Indicates that the contract is in the process of being initialized."
									},
									"id": 690,
									"mutability": "mutable",
									"name": "_initializing",
									"nameLocation": "1324:13:4",
									"nodeType": "VariableDeclaration",
									"scope": 727,
									"src": "1311:26:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 689,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1311:4:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 725,
										"nodeType": "Block",
										"src": "1470:362:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 694,
																"name": "_initializing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 690,
																"src": "1489:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "1506:13:4",
																"subExpression": {
																	"id": 695,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 687,
																	"src": "1507:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1489:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564",
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1521:48:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															},
															"value": "Initializable: contract is already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759",
																"typeString": "literal_string \"Initializable: contract is already initialized\""
															}
														],
														"id": 693,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1481:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1481:89:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 700,
												"nodeType": "ExpressionStatement",
												"src": "1481:89:4"
											},
											{
												"assignments": [
													702
												],
												"declarations": [
													{
														"constant": false,
														"id": 702,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "1588:14:4",
														"nodeType": "VariableDeclaration",
														"scope": 725,
														"src": "1583:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 701,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1583:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 705,
												"initialValue": {
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1605:14:4",
													"subExpression": {
														"id": 703,
														"name": "_initializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 690,
														"src": "1606:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1583:36:4"
											},
											{
												"condition": {
													"id": 706,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 702,
													"src": "1634:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "1630:101:4",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "1650:81:4",
													"statements": [
														{
															"expression": {
																"id": 709,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 707,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 690,
																	"src": "1665:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 708,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1681:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "1665:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 710,
															"nodeType": "ExpressionStatement",
															"src": "1665:20:4"
														},
														{
															"expression": {
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 711,
																	"name": "_initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 687,
																	"src": "1700:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1715:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "1700:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 714,
															"nodeType": "ExpressionStatement",
															"src": "1700:19:4"
														}
													]
												}
											},
											{
												"id": 717,
												"nodeType": "PlaceholderStatement",
												"src": "1743:1:4"
											},
											{
												"condition": {
													"id": 718,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 702,
													"src": "1761:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 724,
												"nodeType": "IfStatement",
												"src": "1757:68:4",
												"trueBody": {
													"id": 723,
													"nodeType": "Block",
													"src": "1777:48:4",
													"statements": [
														{
															"expression": {
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 719,
																	"name": "_initializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 690,
																	"src": "1792:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 720,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1808:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "1792:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 722,
															"nodeType": "ExpressionStatement",
															"src": "1792:21:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "1346:95:4",
										"text": " @dev Modifier to protect an initializer function from being invoked twice."
									},
									"id": 726,
									"name": "initializer",
									"nameLocation": "1456:11:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1467:2:4"
									},
									"src": "1447:385:4",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 728,
							"src": "1056:779:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "82:1753:4"
				},
				"id": 4
			}
		}
	}
}