{
	"compiler": {
		"version": "0.6.12+commit.27d51765"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_logic",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_admin",
						"type": "address"
					},
					{
						"internalType": "bytes",
						"name": "_data",
						"type": "bytes"
					}
				],
				"stateMutability": "payable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "previousAdmin",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "newAdmin",
						"type": "address"
					}
				],
				"name": "AdminChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "implementation",
						"type": "address"
					}
				],
				"name": "Upgraded",
				"type": "event"
			},
			{
				"stateMutability": "payable",
				"type": "fallback"
			},
			{
				"inputs": [],
				"name": "admin",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newAdmin",
						"type": "address"
					}
				],
				"name": "changeAdmin",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "implementation",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newImplementation",
						"type": "address"
					}
				],
				"name": "upgradeTo",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newImplementation",
						"type": "address"
					},
					{
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					}
				],
				"name": "upgradeToAndCall",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"details": "This contract combines an upgradeability proxy with an authorization mechanism for administrative tasks. All external functions in this contract must be guarded by the `ifAdmin` modifier. See ethereum/solidity#3864 for a Solidity feature proposal that would enable this to be done automatically.",
			"events": {
				"AdminChanged(address,address)": {
					"details": "Emitted when the administration has been transferred.",
					"params": {
						"newAdmin": "Address of the new admin.",
						"previousAdmin": "Address of the previous admin."
					}
				}
			},
			"kind": "dev",
			"methods": {
				"admin()": {
					"returns": {
						"_0": "The address of the proxy admin."
					}
				},
				"changeAdmin(address)": {
					"details": "Changes the admin of the proxy. Only the current admin can call this function.",
					"params": {
						"newAdmin": "Address to transfer proxy administration to."
					}
				},
				"constructor": {
					"params": {
						"_admin": "Address of the proxy administrator.",
						"_data": "Data to send as msg.data to the implementation to initialize the proxied contract. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding. This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.",
						"_logic": "address of the initial implementation."
					}
				},
				"implementation()": {
					"returns": {
						"_0": "The address of the implementation."
					}
				},
				"upgradeTo(address)": {
					"details": "Upgrade the backing implementation of the proxy. Only the admin can call this function.",
					"params": {
						"newImplementation": "Address of the new implementation."
					}
				},
				"upgradeToAndCall(address,bytes)": {
					"details": "Upgrade the backing implementation of the proxy and call a function on the new implementation. This is useful to initialize the proxied contract.",
					"params": {
						"data": "Data to send as msg.data in the low level call. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.",
						"newImplementation": "Address of the new implementation."
					}
				}
			},
			"stateVariables": {
				"ADMIN_SLOT": {
					"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is validated in the constructor."
				}
			},
			"title": "AdminUpgradeabilityProxy",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"constructor": "Contract constructor."
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"adminupgradeproxy.sol": "AdminUpgradeabilityProxy"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"adminupgradeproxy.sol": {
			"keccak256": "0x3fed9e0eb5c5e6c7bbaa93ec55546fa946dd9221d3818ff60cf9480a1bdfdbed",
			"license": "MIT",
			"urls": [
				"bzz-raw://de5dcd86963e75ca49bb601dc3e67d89648eab121294d8f4bd371ac7d8aa6e2a",
				"dweb:/ipfs/Qmd2zWzS4AobgY9YeCUhARsUAmvJQx2GzWupVYBQrjaWjN"
			]
		}
	},
	"version": 1
}