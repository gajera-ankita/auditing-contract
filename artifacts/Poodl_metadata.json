{
	"compiler": {
		"version": "0.8.23+commit.f704f362"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Approval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "balan",
						"type": "uint256"
					}
				],
				"name": "Claimed",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "minTokensBeforeSwap",
						"type": "uint256"
					}
				],
				"name": "MinTokensBeforeSwapUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "tokensSwapped",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "ethReceived",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "tokensIntoLiqudity",
						"type": "uint256"
					}
				],
				"name": "SwapAndLiquify",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bool",
						"name": "enabled",
						"type": "bool"
					}
				],
				"name": "SwapAndLiquifyEnabledUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "value",
						"type": "uint256"
					}
				],
				"name": "Transfer",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "_maxTxAmount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "burnFee",
						"type": "uint256"
					}
				],
				"name": "_setBurnFee",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "liquidityFee",
						"type": "uint256"
					}
				],
				"name": "_setLiquidityFee",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "numTokens",
						"type": "uint256"
					}
				],
				"name": "_setNumTokensSellToAddToLiquidity",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "taxFee",
						"type": "uint256"
					}
				],
				"name": "_setTaxFee",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "routerAddress",
						"type": "address"
					}
				],
				"name": "_setUniSwapRouterAddress",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "pairAddress",
						"type": "address"
					}
				],
				"name": "_setuniswapV2PairAddress",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "addressLis",
						"type": "address[]"
					},
					{
						"internalType": "uint256",
						"name": "tAmount",
						"type": "uint256"
					}
				],
				"name": "airdrop",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					}
				],
				"name": "allowance",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "approve",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "balanceOf",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "claim",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "decimals",
				"outputs": [
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "subtractedValue",
						"type": "uint256"
					}
				],
				"name": "decreaseAllowance",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tAmount",
						"type": "uint256"
					}
				],
				"name": "deliver",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "excludeAccount",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "excludeFromFee",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getLiquidityFee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getNumTokensSellToAddToLiquidity",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getTaxFee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "includeAccount",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "includeInFee",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "spender",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "addedValue",
						"type": "uint256"
					}
				],
				"name": "increaseAllowance",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "name",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "symbol",
						"type": "string"
					}
				],
				"name": "initialize",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "isExcluded",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "isExcludedFromFee",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "tokenAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokenAmount",
						"type": "uint256"
					}
				],
				"name": "recoverERC20",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tAmount",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "deductTransferFee",
						"type": "bool"
					}
				],
				"name": "reflectionFromToken",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bool",
						"name": "_enabled",
						"type": "bool"
					}
				],
				"name": "setSwapAndLiquifyEnabled",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "startSwapFunctionality",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "swapAndLiquifyEnabled",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "symbol",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "rAmount",
						"type": "uint256"
					}
				],
				"name": "tokenFromReflection",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalBurn",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalFees",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalLiquidity",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transfer",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "transferFrom",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "uniswapV2Pair",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "uniswapV2Router",
				"outputs": [
					{
						"internalType": "contract IUniswapV2Router02",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"events": {
				"Approval(address,address,uint256)": {
					"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
				},
				"Transfer(address,address,uint256)": {
					"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
				}
			},
			"kind": "dev",
			"methods": {
				"allowance(address,address)": {
					"details": "See {IERC20-allowance}."
				},
				"approve(address,uint256)": {
					"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
				},
				"balanceOf(address)": {
					"details": "See {IERC20-balanceOf}."
				},
				"decimals()": {
					"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
				},
				"decreaseAllowance(address,uint256)": {
					"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
				},
				"increaseAllowance(address,uint256)": {
					"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
				},
				"name()": {
					"details": "Returns the name of the token."
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"symbol()": {
					"details": "Returns the symbol of the token, usually a shorter version of the name."
				},
				"totalSupply()": {
					"details": "See {IERC20-totalSupply}."
				},
				"transfer(address,uint256)": {
					"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
				},
				"transferFrom(address,address,uint256)": {
					"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"initialize(string,string)": {
					"notice": "However, while Solidity ensures that a constructor is called only once in the lifetime of a contract, a regular function can be called many times. To prevent a contract from being initialized multiple times, you need to add a check to ensure the initialize function is called only once"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"poodl.sol": "Poodl"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"AddressUpgradeable.sol": {
			"keccak256": "0x1214353fc8ee85660964938154748bf6f2491a65289bf5f52a5e836a4a060f09",
			"license": "MIT",
			"urls": [
				"bzz-raw://0da329d1cfd37c3673665628fef0ff39be0e9d3442bffeb881001738c5f97c3d",
				"dweb:/ipfs/QmWooRDAYBFt2sW154kei1uuWKw6godAfLxg6w6F5UhDun"
			]
		},
		"ContextUpgradeable.sol": {
			"keccak256": "0x74fbdcec83d3842760c7ae7aec2bcd7ecd6a3fa890d597b38fb61480da553ca6",
			"license": "MIT",
			"urls": [
				"bzz-raw://088f61b256418ca2c3d3b845af6793a86ede9c9bbe1553887bad3782868a2304",
				"dweb:/ipfs/QmexjQidgCAZLn84sHPH4CrcaRVR3jAbCQbtHN8g3gh3df"
			]
		},
		"ERC20Upgradeable.sol": {
			"keccak256": "0x87601f886febf073b1e99159d2ef92d05aa2e40954ed18633969ec570ef80950",
			"license": "MIT",
			"urls": [
				"bzz-raw://0ddafd569e24aeda9cd23e7879185533a1e5b455788a49135d51377a959e885e",
				"dweb:/ipfs/QmaCZthqanTvPcMs6dK4FrHj16wHAA3ShAmHsg5ean7vdg"
			]
		},
		"IERC20.sol": {
			"keccak256": "0xc6052699ee5b28e22ef62931f6e8ffe2a6816189a4b01e9bfc0d66e092727b7f",
			"license": "MIT",
			"urls": [
				"bzz-raw://8ed7303a19ab7676840c8bd6e9493ad34066d9d8663e001990ac6c5fe2cbad84",
				"dweb:/ipfs/QmQy1MDCtfkX7aMBPC9ehtfn9VcAc71QXsGa9vmBNm64Ja"
			]
		},
		"IERC20MetadataUpgradeable.sol": {
			"keccak256": "0xfc8b79eef44f798f15ab0105cc668cb2808d91197a507b44d090977e627139ee",
			"license": "MIT",
			"urls": [
				"bzz-raw://922ce684bfd2d218abeea6d05bd27cd603ef83979a802448ae34fb09fc21e293",
				"dweb:/ipfs/QmQaRMV6VYMZhkUNCaRu5N3QGSSJLD8dfs4B2ZTkaYSq9z"
			]
		},
		"IERC20Upgradeable.sol": {
			"keccak256": "0x1f97178cc13b7ffb74da98709b4510bab47bce9c17f62c45bb65d4696b254992",
			"license": "MIT",
			"urls": [
				"bzz-raw://768652c26a24cb0a539370874c42ced6cdba4ad1b97fdc42cc0af96959d6d886",
				"dweb:/ipfs/QmXKJSxqRBJzvAZUrWDd9YAPEaVKJJ6PAxUQsdJ6YcxVWg"
			]
		},
		"IUniswapV2Factory.sol": {
			"keccak256": "0x6f3902a4cabfc333a194a4891c6ed977bc6dea4f30429c46c37c076f0b572c73",
			"license": "MIT",
			"urls": [
				"bzz-raw://1429a21a566bea4205583de222e1d703cb4b1071c798ea23a2fa8b33872f9eac",
				"dweb:/ipfs/Qmd2Lmdtg9gVVjyxtWCVyeXKNEj1TJGXebeywkRfRLn8aw"
			]
		},
		"IUniswapV2Pair.sol": {
			"keccak256": "0x3ecd1f5044b22c1e7b71df3f3c168d4b6ba02fb4eb629137dd950ba46df1dfa6",
			"license": "MIT",
			"urls": [
				"bzz-raw://307d2a1e98765193590f1cb31c59b7d8b62dc8b59da166da0801a47ccb2b59c7",
				"dweb:/ipfs/QmTFvEFSckUHHVkCiPXWqt7mXEvF9eBoZAhpySNyFwCWNh"
			]
		},
		"IUniswapV2Router01.sol": {
			"keccak256": "0xd40197660dae75d923fa9994df6a7af27ead17e5adb39105b4e7c4363439eff0",
			"license": "MIT",
			"urls": [
				"bzz-raw://a4fc4ed32357e4e39b967cb08be77a015976b85043610f7e0bf4f4bec192bf15",
				"dweb:/ipfs/QmQXJAfANBUa8qXSkJQADARq4iWQhEVvBfYzC1e7KfoNkV"
			]
		},
		"IUniswapV2Router02.sol": {
			"keccak256": "0xa42e77473d8d9cf84be60665d8b3b8c477358c03bf404c4cd51f0c975349a2cf",
			"license": "MIT",
			"urls": [
				"bzz-raw://c1f2593ea77d3874bba2b4d895319cfef112a8371f47deba443eea1e451a94de",
				"dweb:/ipfs/QmcNn6NTcP1mhgURwA7a4Jrq2g3KNUbn9WDZkZJ3PJx3Rz"
			]
		},
		"Initializable.sol": {
			"keccak256": "0x6f6a299eb96c7c419ae0dc45766224d43501702747d4a57f64c87373889f2651",
			"license": "MIT",
			"urls": [
				"bzz-raw://e5ce2c6e10c1a74ef44a20110b3406674171d0bc25448d709385667c3c6046eb",
				"dweb:/ipfs/QmdjbuhQWiPnkbxDQp5VwXSahgwWXy1mJutt36yNHruPyh"
			]
		},
		"OwnableUpgradeable.sol": {
			"keccak256": "0xfa3d95e8ffd49d477a59c826eeaa63f41b31648eee3669b439d09d2480ad0520",
			"license": "MIT",
			"urls": [
				"bzz-raw://18f9173a4764ad5b162dfcae6b3ecc7a0688f36fceaed285aec5222846d80db9",
				"dweb:/ipfs/QmZx1YCxvyZz4BtL4LRmd1gJDTgBJCQ8LSgPpXXt6oJoHi"
			]
		},
		"SafeMathUpgradeable.sol": {
			"keccak256": "0xf5cd4d55b1002dbfdb97a1128a96e3cc10cbcfb7a12f7bb8cda084f78a67bbc6",
			"license": "MIT",
			"urls": [
				"bzz-raw://8c8deb6371009aa0637f400b1b61cdabe438cb7b7de23cd504b6419f581e25ec",
				"dweb:/ipfs/QmVfT63XR27n45cKmijg5GnsXkNKfwMwrwL4PeR4cAgGbm"
			]
		},
		"poodl.sol": {
			"keccak256": "0xbf9194907fa2d7d61f46452f26f7685943356fcd9c9c56ab32e71b60d7d45140",
			"license": "MIT",
			"urls": [
				"bzz-raw://1827f4e2b20e8c72b7c0f919731598f720b46789dddae0d3e47f912544cc6e7a",
				"dweb:/ipfs/QmZJ53XSARn1vPL6BwrjGjDHu4SURrw9YS47DAbTmVi3vR"
			]
		}
	},
	"version": 1
}